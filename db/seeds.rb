# This file should contain all the record creation needed to seed the database with its default values.
# The data can then be loaded with the bin/rails db:seed command (or created alongside the database with db:setup).
#
# Examples:
#
#   movies = Movie.create([{ name: 'Star Wars' }, { name: 'Lord of the Rings' }])
#   Character.create(name: 'Luke', movie: movies.first)
Article.create(title: 'List to Array in Java',content: "<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <link rel=\"profile\" href=\"http://gmpg.org/xfn/11\">\n\n<!-- Author Meta Tags by Molongui Authorship 4.3.3, visit: https://wordpress.org/plugins/molongui-authorship/ -->\n<meta name=\"author\" content=\"Hinal Vithlani\">\n<!-- /Molongui Authorship -->\n\n<title>Convert List to Array in Java with Example Program - Scaler Topics</title>\n\n<!-- The SEO Framework by Sybre Waaijer -->\n<meta name=\"robots\" content=\"max-snippet:-1,max-image-preview:standard,max-video-preview:-1\">\n<meta name=\"description\" content=\"To convert list to array in java is an extremely fundamental part of programming. In this article by Scaler Topics learn how to convert list to array in Java, with example.\">\n<meta property=\"og:image\" content=\"https://www.scaler.com/topics/media/List-to-Array-in-Java.png\">\n<meta property=\"og:image:width\" content=\"2134\">\n<meta property=\"og:image:height\" content=\"1042\">\n<meta property=\"og:image:alt\" content=\"List to Array in Java\">\n<meta property=\"og:locale\" content=\"en_US\">\n<meta property=\"og:type\" content=\"article\">\n<meta property=\"og:title\" content=\"Convert List to Array in Java with Example Program - Scaler Topics\">\n<meta property=\"og:description\" content=\"To convert list to array in java is an extremely fundamental part of programming. In this article by Scaler Topics learn how to convert list to array in Java, with example.\">\n<meta property=\"og:url\" content=\"https://www.scaler.com/topics/list-to-array-in-java/\">\n<meta property=\"og:site_name\" content=\"Scaler Topics\">\n<meta property=\"og:updated_time\" content=\"2021-07-22\">\n<meta property=\"article:published_time\" content=\"2021-07-22\">\n<meta property=\"article:modified_time\" content=\"2021-07-22\">\n<meta name=\"twitter:card\" content=\"summary_large_image\">\n<meta name=\"twitter:title\" content=\"Convert List to Array in Java with Example Program - Scaler Topics\">\n<meta name=\"twitter:description\" content=\"To convert list to array in java is an extremely fundamental part of programming. In this article by Scaler Topics learn how to convert list to array in Java, with example.\">\n<meta name=\"twitter:image\" content=\"https://www.scaler.com/topics/media/List-to-Array-in-Java.png\">\n<meta name=\"twitter:image:width\" content=\"2134\">\n<meta name=\"twitter:image:height\" content=\"1042\">\n<meta name=\"twitter:image:alt\" content=\"List to Array in Java\">\n<link rel=\"canonical\" href=\"https://www.scaler.com/topics/list-to-array-in-java/\">\n<script type=\"text/javascript\" async=\"\" src=\"https://www.google-analytics.com/analytics.js\"></script><script type=\"application/ld+json\">{\"@context\":\"https://schema.org\",\"@type\":\"BreadcrumbList\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"item\":{\"@id\":\"https://www.scaler.com/topics/\",\"name\":\"Scaler Topics\"}},{\"@type\":\"ListItem\",\"position\":2,\"item\":{\"@id\":\"https://www.scaler.com/topics/category/java/\",\"name\":\"Java\"}},{\"@type\":\"ListItem\",\"position\":3,\"item\":{\"@id\":\"https://www.scaler.com/topics/list-to-array-in-java/\",\"name\":\"Convert List to Array in Java with Example Program &#x2d; Scaler Topics\"}}]}</script>\n<!-- / The SEO Framework by Sybre Waaijer | 4.03ms meta | 2.00ms boot -->\n\n<link rel=\"dns-prefetch\" href=\"//fonts.googleapis.com\">\n<link rel=\"dns-prefetch\" href=\"//s.w.org\">\n\t\t<script type=\"text/javascript\">\n\t\t\twindow._wpemojiSettings = {\"baseUrl\":\"https:\\/\\/s.w.org\\/images\\/core\\/emoji\\/13.0.1\\/72x72\\/\",\"ext\":\".png\",\"svgUrl\":\"https:\\/\\/s.w.org\\/images\\/core\\/emoji\\/13.0.1\\/svg\\/\",\"svgExt\":\".svg\",\"source\":{\"concatemoji\":\"https:\\/\\/www.scaler.com\\/topics\\/wp-includes\\/js\\/wp-emoji-release.min.js?ver=5.7.2\"}};\n\t\t\t!function(e,a,t){var n,r,o,i=a.createElement(\"canvas\"),p=i.getContext&&i.getContext(\"2d\");function s(e,t){var a=String.fromCharCode;p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,e),0,0);e=i.toDataURL();return p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,t),0,0),e===i.toDataURL()}function c(e){var t=a.createElement(\"script\");t.src=e,t.defer=t.type=\"text/javascript\",a.getElementsByTagName(\"head\")[0].appendChild(t)}for(o=Array(\"flag\",\"emoji\"),t.supports={everything:!0,everythingExceptFlag:!0},r=0;r<o.length;r++)t.supports[o[r]]=function(e){if(!p||!p.fillText)return!1;switch(p.textBaseline=\"top\",p.font=\"600 32px Arial\",e){case\"flag\":return s([127987,65039,8205,9895,65039],[127987,65039,8203,9895,65039])?!1:!s([55356,56826,55356,56819],[55356,56826,8203,55356,56819])&&!s([55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447],[55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447]);case\"emoji\":return!s([55357,56424,8205,55356,57212],[55357,56424,8203,55356,57212])}return!1}(o[r]),t.supports.everything=t.supports.everything&&t.supports[o[r]],\"flag\"!==o[r]&&(t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&t.supports[o[r]]);t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&!t.supports.flag,t.DOMReady=!1,t.readyCallback=function(){t.DOMReady=!0},t.supports.everything||(n=function(){t.readyCallback()},a.addEventListener?(a.addEventListener(\"DOMContentLoaded\",n,!1),e.addEventListener(\"load\",n,!1)):(e.attachEvent(\"onload\",n),a.attachEvent(\"onreadystatechange\",function(){\"complete\"===a.readyState&&t.readyCallback()})),(n=t.source||{}).concatemoji?c(n.concatemoji):n.wpemoji&&n.twemoji&&(c(n.twemoji),c(n.wpemoji)))}(window,document,window._wpemojiSettings);\n\t\t</script><script src=\"https://www.scaler.com/topics/wp-includes/js/wp-emoji-release.min.js?ver=5.7.2\" type=\"text/javascript\" defer=\"\"></script>\n\t\t<style type=\"text/css\">\nimg.wp-smiley,\nimg.emoji {\n\tdisplay: inline !important;\n\tborder: none !important;\n\tbox-shadow: none !important;\n\theight: 1em !important;\n\twidth: 1em !important;\n\tmargin: 0 .07em !important;\n\tvertical-align: -0.1em !important;\n\tbackground: none !important;\n\tpadding: 0 !important;\n}\n</style>\n\t<link rel=\"stylesheet\" id=\"wp-quicklatex-format-css\" href=\"https://www.scaler.com/topics/wp-content/plugins/wp-quicklatex/css/quicklatex-format.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-block-library-css\" href=\"https://www.scaler.com/topics/wp-includes/css/dist/block-library/style.min.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"gutentocwp-cgb-style-css-css\" href=\"https://www.scaler.com/topics/wp-content/plugins/gutentoc-advance-table-of-content/dist/blocks.style.build.css\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"child-theme-generator-css\" href=\"https://www.scaler.com/topics/wp-content/plugins/child-theme-generator/public/css/child-theme-generator-public.css?ver=1.0.0\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"molongui-authorship-css\" href=\"https://www.scaler.com/topics/wp-content/plugins/molongui-authorship/public/css/molongui-authorship.27a7.min.css?ver=4.3.3\" type=\"text/css\" media=\"all\">\n<style id=\"molongui-authorship-inline-css\" type=\"text/css\">\n:root{ --m-a-box-bp: 600px; --m-a-box-bp-l: 599px; }\n</style>\n<link rel=\"stylesheet\" id=\"parente2-style-css\" href=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/style.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"childe2-style-css\" href=\"https://www.scaler.com/topics/wp-content/themes/InterviewBit/style.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-bootstrap-starter-bootstrap-css-css\" href=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/css/bootstrap.min.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-bootstrap-starter-fontawesome-cdn-css\" href=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/css/fontawesome.min.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-bootstrap-starter-style-css\" href=\"https://www.scaler.com/topics/wp-content/themes/InterviewBit/style.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-bootstrap-starter-litera-css\" href=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/css/presets/theme-option/litera.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-bootstrap-starter-montserrat-opensans-font-css\" href=\"https://fonts.googleapis.com/css?family=Montserrat%7COpen+Sans%3A300%2C300i%2C400%2C400i%2C600%2C600i%2C700%2C800&amp;ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-bootstrap-starter-montserrat-opensans-css\" href=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/css/presets/typography/montserrat-opensans.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"enlighterjs-css\" href=\"https://www.scaler.com/topics/wp-content/plugins/enlighter/cache/enlighterjs.min.css?ver=0UVtrfqVvCkLefk\" type=\"text/css\" media=\"all\">\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-includes/js/jquery/jquery.min.js?ver=3.5.1\" id=\"jquery-core-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-includes/js/jquery/jquery-migrate.min.js?ver=3.3.2\" id=\"jquery-migrate-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/plugins/child-theme-generator/public/js/child-theme-generator-public.js?ver=1.0.0\" id=\"child-theme-generator-js\"></script>\n<!--[if lt IE 9]>\n<script type='text/javascript' src='https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/js/html5.js?ver=3.7.0' id='html5hiv-js'></script>\n<![endif]-->\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/plugins/wp-quicklatex/js/wp-quicklatex-frontend.js?ver=1.0\" id=\"wp-quicklatex-frontend-js\"></script>\n<link rel=\"https://api.w.org/\" href=\"https://www.scaler.com/topics/wp-json/\"><link rel=\"alternate\" type=\"application/json\" href=\"https://www.scaler.com/topics/wp-json/wp/v2/posts/80\"><link rel=\"EditURI\" type=\"application/rsd+xml\" title=\"RSD\" href=\"https://www.scaler.com/topics/xmlrpc.php?rsd\">\n<link rel=\"wlwmanifest\" type=\"application/wlwmanifest+xml\" href=\"https://www.scaler.com/topics/wp-includes/wlwmanifest.xml\"> \n<link rel=\"alternate\" type=\"application/json+oembed\" href=\"https://www.scaler.com/topics/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.scaler.com%2Ftopics%2Flist-to-array-in-java%2F\">\n<link rel=\"alternate\" type=\"text/xml+oembed\" href=\"https://www.scaler.com/topics/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.scaler.com%2Ftopics%2Flist-to-array-in-java%2F&amp;format=xml\">\n<link rel=\"pingback\" href=\"https://www.scaler.com/topics/xmlrpc.php\">    <style type=\"text/css\">\n        #page-sub-header { background: #fff; }\n    </style>\n    <link rel=\"icon\" href=\"https://www.scaler.com/topics/media/cropped-android-chrome-512x512-1-32x32.png\" sizes=\"32x32\">\n<link rel=\"icon\" href=\"https://www.scaler.com/topics/media/cropped-android-chrome-512x512-1-192x192.png\" sizes=\"192x192\">\n<link rel=\"apple-touch-icon\" href=\"https://www.scaler.com/topics/media/cropped-android-chrome-512x512-1-180x180.png\">\n<meta name=\"msapplication-TileImage\" content=\"https://www.scaler.com/topics/media/cropped-android-chrome-512x512-1-270x270.png\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\n<link href=\"https://fonts.googleapis.com/css2?family=Roboto&amp;display=swap\" rel=\"stylesheet\">\n\t<!-- Global site tag (gtag.js) - Google Analytics -->\n<script async=\"\" src=\"https://www.googletagmanager.com/gtag/js?id=UA-56207880-1\"></script>\n<script>\n  window.dataLayer = window.dataLayer || [];\n  function gtag(){dataLayer.push(arguments);}\n  gtag('js', new Date());\n\n  gtag('config', 'UA-56207880-1');\n</script>\n<style type=\"text/css\">[responsive-image] > img, [data-responsive-image] {overflow: hidden; padding: 0; } [responsive-image] > img, [data-responsive-image] > img {width: 100%;}\n@keyframes element-queries { 0% { visibility: inherit; } }</style></head>\n\n<body class=\"post-template-default single single-post postid-80 single-format-standard topics group-blog theme-preset-active\">\n\n\n<div id=\"page\" class=\"site\">\n\n\t<!-- #masthead -->\n    \t<div id=\"content\" class=\"site-content\">\n\t\t<div class=\"container\">\n\t\t\t<div class=\"row\">\n                \n\t<section id=\"primary\" class=\"content-area col-sm-12 col-lg-8 mx-auto\">\n\t\t<div id=\"main\" class=\"site-main\" role=\"main\">\n\n\t\t\n\n\n<article id=\"post-80\" class=\"post-80 post type-post status-publish format-standard has-post-thumbnail hentry category-java tag-convert-list-to-array-in-java tag-java-list-to-array tag-list-to-array-in-java\">\n\t<div class=\"post-thumbnail mb-3\">\n\t\t<img width=\"2134\" height=\"1042\" src=\"https://www.scaler.com/topics/media/List-to-Array-in-Java.png\" class=\"attachment-post-thumbnail size-post-thumbnail wp-post-image\" alt=\"List to Array in Java\" loading=\"lazy\" srcset=\"https://www.scaler.com/topics/media/List-to-Array-in-Java.png 2134w, https://www.scaler.com/topics/media/List-to-Array-in-Java-300x146.png 300w, https://www.scaler.com/topics/media/List-to-Array-in-Java-1024x500.png 1024w, https://www.scaler.com/topics/media/List-to-Array-in-Java-768x375.png 768w, https://www.scaler.com/topics/media/List-to-Array-in-Java-1536x750.png 1536w, https://www.scaler.com/topics/media/List-to-Array-in-Java-2048x1000.png 2048w\" sizes=\"(max-width: 2134px) 100vw, 2134px\">\t</div>\n\t<div class=\"post-content-here\">\n\n\t<header class=\"entry-header\">\n\t\t<h1 class=\"entry-title\">List to Array in Java</h1>\t\t<div class=\"entry-meta\">\n<!-- \t\t\t<span class=\"posted-on\">Posted on <a href=\"https://www.scaler.com/topics/list-to-array-in-java/\" rel=\"bookmark\"><time class=\"entry-date published\" datetime=\"2021-07-22T13:52:27+05:30\">July 22, 2021</time></a></span> | <span class=\"byline\"> by <span class=\"author vcard\"><a class=\"url fn n\" href=\"#molongui-disabled-link\">Hinal Vithlani</a></span></span> -->\n\t\t</div><!-- .entry-meta -->\n\t\t\t</header><!-- .entry-header -->\n\t<div class=\"entry-content\">\n\t\t\n<div class=\"gutentoc tocactive nostyle\"><div class=\"gutentoc-toc-wrap\"><div class=\"gutentoc-toc-title-wrap\"><div class=\"gutentoc-toc-title\">Table Of Contents</div><div id=\"open\" class=\"toggleone\">show</div></div><div id=\"toclist\"><div class=\"gutentoc-toc__list-wrap\"><ul class=\"gutentoc-toc__list\"><li><a href=\"#difference-between-list-and-array-in-java\">Difference Between List and Array in Java</a></li><li><a href=\"#ways-to-convert-list-to-array-in-java\">Ways to Convert List to Array in Java</a></li><li><a href=\"#algorithm\">Algorithm</a></li><li><a href=\"#conclusion\">Conclusion</a></li></ul></div></div></div></div>\n\n\n\n<p><span style=\"font-weight: 400;\">The ArrayList class, which is part of the java.util package, is a resizable array. The distinction between a built-in array and an ArrayList in Java is that an array’s size cannot be changed. An ArrayList, on the other hand, can have elements added and removed at any time. The syntax is as follows:</span></p>\n\n\n<div class=\"enlighter-default enlighter-v-standard enlighter-t-atomic enlighter-hover \"><div class=\"enlighter-toolbar-top enlighter-toolbar\"><div class=\"enlighter-btn enlighter-btn-raw\" title=\"Plain text\"></div><div class=\"enlighter-btn enlighter-btn-copy\" title=\"Copy to clipboard\"></div><div class=\"enlighter-btn enlighter-btn-window\" title=\"Open code in new window\"></div><div class=\"enlighter-btn enlighter-btn-website\" title=\"EnlighterJS 3 Syntax Highlighter\"></div></div><div class=\"enlighter\" style=\"\"><div class=\"\"><div><span class=\"enlighter-k0\">import</span><span class=\"enlighter-k10\"> java.util.ArrayList</span><span class=\"enlighter-text\">;</span><span class=\"enlighter-c0\"> // importing the ArrayList class</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">ArrayList</span><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-k5\">Integer</span><span class=\"enlighter-g1\">&gt;</span><span class=\"enlighter-text\"> example = </span><span class=\"enlighter-k3\">new</span><span class=\"enlighter-text\"> ArrayList</span><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-k5\">Integer</span><span class=\"enlighter-g1\">&gt;()</span><span class=\"enlighter-text\">;</span><span class=\"enlighter-c0\"> // Creating an ArrayList object</span></div></div></div><div class=\"enlighter-raw\">import java.util.ArrayList; // importing the ArrayList class\n \nArrayList&lt;Integer&gt; example = new ArrayList&lt;Integer&gt;(); // Creating an ArrayList object</div><div class=\"enlighter-toolbar-bottom enlighter-toolbar\"></div></div><pre class=\"EnlighterJSRAW enlighter-origin\" data-enlighter-language=\"java\" data-enlighter-theme=\"atomic\" data-enlighter-linenumbers=\"false\">import java.util.ArrayList; // importing the ArrayList class\n \nArrayList&lt;Integer&gt; example = new ArrayList&lt;Integer&gt;(); // Creating an ArrayList object</pre>\n\n\n<p><i><span style=\"font-weight: 400;\"><strong>Syntax 1</strong></span></i></p>\n\n\n\n<p><span style=\"font-weight: 400;\">To </span><span style=\"font-weight: 400;\">convert list to array in java</span><span style=\"font-weight: 400;\"> is an extremely fundamental part of programming. Sometimes, while writing code, a function might only accept an array as a parameter. In addition, there are a few advantages that Arrays have over ArrayLists. ArrayLists typically pre-allocate around double the memory one actually requires so that it can append objects quickly. Hence, if one never adds any more items, it results in a waste of space.</span></p>\n\n\n\n<h2 id=\"difference-between-list-and-array-in-java\">Difference Between List and Array in Java</h2>\n\n\n\n<figure class=\"wp-block-table is-style-stripes\"><table class=\"has-fixed-layout\"><tbody><tr><td class=\"has-text-align-center\" data-align=\"center\"><span style=\"font-weight: 400;\"><strong>Point of Comparison</strong></span></td><td class=\"has-text-align-center\" data-align=\"center\"><span style=\"font-weight: 400;\"><strong>Array</strong></span></td><td class=\"has-text-align-center\" data-align=\"center\"><span style=\"font-weight: 400;\"><strong>List</strong></span></td></tr><tr><td class=\"has-text-align-center\" data-align=\"center\"><span style=\"font-weight: 400;\">Size</span></td><td class=\"has-text-align-center\" data-align=\"center\"><span style=\"font-weight: 400;\">Static in size. Must specify size while initialising.</span></td><td class=\"has-text-align-center\" data-align=\"center\"><span style=\"font-weight: 400;\">Dynamic in size. Need not specify size while listening.</span></td></tr><tr><td class=\"has-text-align-center\" data-align=\"center\"><span style=\"font-weight: 400;\">Performance</span></td><td class=\"has-text-align-center\" data-align=\"center\"><span style=\"font-weight: 400;\">Have a higher performance because of their fixed size.</span></td><td class=\"has-text-align-center\" data-align=\"center\"><span style=\"font-weight: 400;\">Lower performance.</span></td></tr><tr><td class=\"has-text-align-center\" data-align=\"center\"><span style=\"font-weight: 400;\">Storage Capability</span></td><td class=\"has-text-align-center\" data-align=\"center\"><span style=\"font-weight: 400;\">Can store both objects and primitive types.</span></td><td class=\"has-text-align-center\" data-align=\"center\"><span style=\"font-weight: 400;\">Can store just objects.</span></td></tr><tr><td class=\"has-text-align-center\" data-align=\"center\"><span style=\"font-weight: 400;\">Iteration</span></td><td class=\"has-text-align-center\" data-align=\"center\"><span style=\"font-weight: 400;\">Must use for or for each</span></td><td class=\"has-text-align-center\" data-align=\"center\"><span style=\"font-weight: 400;\">Iterator is required</span></td></tr><tr><td class=\"has-text-align-center\" data-align=\"center\"><span style=\"font-weight: 400;\">Capacity</span></td><td class=\"has-text-align-center\" data-align=\"center\"><span style=\"font-weight: 400;\">To find out the capacity, use length() method</span></td><td class=\"has-text-align-center\" data-align=\"center\"><span style=\"font-weight: 400;\">To find out the capacity, use size() method</span></td></tr><tr><td class=\"has-text-align-center\" data-align=\"center\"><span style=\"font-weight: 400;\">Add elements</span></td><td class=\"has-text-align-center\" data-align=\"center\"><span style=\"font-weight: 400;\">Use assignment operator</span></td><td class=\"has-text-align-center\" data-align=\"center\"><span style=\"font-weight: 400;\">Use add() method</span></td></tr><tr><td class=\"has-text-align-center\" data-align=\"center\"><span style=\"font-weight: 400;\">Multi-dimensional?</span></td><td class=\"has-text-align-center\" data-align=\"center\"><span style=\"font-weight: 400;\">Yes</span></td><td class=\"has-text-align-center\" data-align=\"center\"><span style=\"font-weight: 400;\">No</span></td></tr></tbody></table></figure>\n\n\n\n<h2 id=\"ways-to-convert-list-to-array-in-java\">Ways to Convert List to Array in Java</h2>\n\n\n\n<p><span style=\"font-weight: 400;\">ArrayList to Array in Java is done using the </span><b>toArray() </b><span style=\"font-weight: 400;\">method of the List Interface as described below.</span></p>\n\n\n\n<div class=\"wp-block-image is-style-default\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"1024\" height=\"556\" src=\"https://www.scaler.com/topics/media/Ways-to-convert-list-to-array-in-java-1024x556.jpeg\" alt=\"Ways to convert list to array in java\" class=\"wp-image-1405\" title=\"Ways to convert list to array in java\" srcset=\"https://www.scaler.com/topics/media/Ways-to-convert-list-to-array-in-java-1024x556.jpeg 1024w, https://www.scaler.com/topics/media/Ways-to-convert-list-to-array-in-java-300x163.jpeg 300w, https://www.scaler.com/topics/media/Ways-to-convert-list-to-array-in-java-768x417.jpeg 768w, https://www.scaler.com/topics/media/Ways-to-convert-list-to-array-in-java.jpeg 1401w\" sizes=\"(max-width: 1024px) 100vw, 1024px\"></figure></div>\n\n\n\n<h3 id=\"--a-toarray--\"><span style=\"font-weight: 400;\"><strong>a. toArray()</strong></span></h3>\n\n\n\n<p><span style=\"font-weight: 400;\">toArray is a popular method used to </span><span style=\"font-weight: 400;\">convert list to array in java</span><span style=\"font-weight: 400;\">. It returns an array containing all of the ArrayList’s elements. If the order in which this collection’s elements are returned by its iterator is guaranteed, this function must return the elements in the same order.</span></p>\n\n\n\n<p><span style=\"font-weight: 400;\">The toArray() method returns an Object array (Object[]). Before utilising it as an Integer object, we must first typecast it to Integer. We receive a compilation error if we don’t typecast.</span></p>\n\n\n\n<h4 id=\"---syntax-21---\"><i><span style=\"font-weight: 400;\"><strong>Syntax 2.1</strong></span></i></h4>\n\n\n<div class=\"enlighter-default enlighter-v-standard enlighter-t-atomic enlighter-hover \"><div class=\"enlighter-toolbar-top enlighter-toolbar\"><div class=\"enlighter-btn enlighter-btn-raw\" title=\"Plain text\"></div><div class=\"enlighter-btn enlighter-btn-copy\" title=\"Copy to clipboard\"></div><div class=\"enlighter-btn enlighter-btn-window\" title=\"Open code in new window\"></div><div class=\"enlighter-btn enlighter-btn-website\" title=\"EnlighterJS 3 Syntax Highlighter\"></div></div><div class=\"enlighter\" style=\"\"><div class=\"\"><div><span class=\"enlighter-text\">Object</span><span class=\"enlighter-g1\">[]</span><span class=\"enlighter-text\"> resArr = list.</span><span class=\"enlighter-m3\">toArray</span><span class=\"enlighter-g1\">()</span><span class=\"enlighter-text\">;</span></div></div></div><div class=\"enlighter-raw\">Object[] resArr = list.toArray();</div><div class=\"enlighter-toolbar-bottom enlighter-toolbar\"></div></div><pre class=\"EnlighterJSRAW enlighter-origin\" data-enlighter-language=\"java\" data-enlighter-theme=\"atomic\" data-enlighter-linenumbers=\"false\">Object[] resArr = list.toArray();</pre>\n\n\n<h3 id=\"--b-toarrayt-arr--\"><span style=\"font-weight: 400;\"><strong>b. toArray(T[] arr)</strong></span></h3>\n\n\n\n<p><span style=\"font-weight: 400;\">In this method, an array that has already been defined is passed as a parameter.&nbsp;When the array’s size is higher than or equal to the list’s size, the list’s elements are&nbsp;added to the array. Else, a new array will be constructed and filled.</span> </p>\n\n\n\n<p><span style=\"font-weight: 400;\">Casting is unnecessary because the type of the returned array is given by the&nbsp;parameter’s type.</span></p>\n\n\n\n<h4 id=\"-syntax-22-\"><strong>Syntax 2.2</strong></h4>\n\n\n<div class=\"enlighter-default enlighter-v-standard enlighter-t-atomic enlighter-hover \"><div class=\"enlighter-toolbar-top enlighter-toolbar\"><div class=\"enlighter-btn enlighter-btn-raw\" title=\"Plain text\"></div><div class=\"enlighter-btn enlighter-btn-copy\" title=\"Copy to clipboard\"></div><div class=\"enlighter-btn enlighter-btn-window\" title=\"Open code in new window\"></div><div class=\"enlighter-btn enlighter-btn-website\" title=\"EnlighterJS 3 Syntax Highlighter\"></div></div><div class=\"enlighter\" style=\"\"><div class=\"\"><div><span class=\"enlighter-k5\">Integer</span><span class=\"enlighter-g1\">[]</span><span class=\"enlighter-text\"> arr = </span><span class=\"enlighter-k3\">new</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-k5\">Integer</span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-n1\">4</span><span class=\"enlighter-g1\">]</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">list.</span><span class=\"enlighter-m3\">toArray</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">arr</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div></div><div class=\"enlighter-raw\">Integer[] arr = new Integer[4];\nlist.toArray(arr);</div><div class=\"enlighter-toolbar-bottom enlighter-toolbar\"></div></div><pre class=\"EnlighterJSRAW enlighter-origin\" data-enlighter-language=\"java\" data-enlighter-theme=\"atomic\" data-enlighter-linenumbers=\"false\">Integer[] arr = new Integer[4];\nlist.toArray(arr);</pre>\n\n\n<h2 id=\"algorithm\">Algorithm</h2>\n\n\n\n<h4 id=\"--to-convert-a-list-to-array-in-java-follow-the-following-steps--\"><span style=\"font-weight: 400;\"><strong>To convert a list to array in java, follow the following steps:</strong></span></h4>\n\n\n\n<p><span style=\"font-weight: 400;\"><strong>START</strong></span></p>\n\n\n\n<ol><li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">If list not declared yet, declare and define the same</span></li><li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">If array defined, go to step 5, else, continue</span></li><li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Use syntax 2.1</span></li><li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Print the array using a for loop and typecast the value before printing it. Break.</span></li><li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Use syntax 2.2</span></li><li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">If array’s size is higher than or equal to list’s size, list added to array, else new array formed and filled</span></li><li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Print the array using a for loop.</span></li></ol>\n\n\n\n<p><span style=\"font-weight: 400;\"><strong>END</strong> </span></p>\n\n\n\n<div class=\"wp-block-image is-style-default\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"623\" height=\"1024\" src=\"https://www.scaler.com/topics/media/Algorithm-to-convert-list-to-array-in-java-623x1024.jpeg\" alt=\"Algorithm to convert list to array in java\" class=\"wp-image-1410\" title=\"Algorithm to convert list to array in java\" srcset=\"https://www.scaler.com/topics/media/Algorithm-to-convert-list-to-array-in-java-623x1024.jpeg 623w, https://www.scaler.com/topics/media/Algorithm-to-convert-list-to-array-in-java-183x300.jpeg 183w, https://www.scaler.com/topics/media/Algorithm-to-convert-list-to-array-in-java-768x1262.jpeg 768w, https://www.scaler.com/topics/media/Algorithm-to-convert-list-to-array-in-java-935x1536.jpeg 935w, https://www.scaler.com/topics/media/Algorithm-to-convert-list-to-array-in-java.jpeg 1044w\" sizes=\"(max-width: 623px) 100vw, 623px\"></figure></div>\n\n\n\n<h3 id=\"-example-program-\"><span style=\"font-weight: 400;\">Example Program</span></h3>\n\n\n\n<p><span style=\"font-weight: 400;\">Now that we have seen the algorithm to convert list to array in java, let us implement the same:</span></p>\n\n\n<div class=\"enlighter-default enlighter-v-standard enlighter-t-atomic enlighter-hover \"><div class=\"enlighter-toolbar-top enlighter-toolbar\"><div class=\"enlighter-btn enlighter-btn-raw\" title=\"Plain text\"></div><div class=\"enlighter-btn enlighter-btn-copy\" title=\"Copy to clipboard\"></div><div class=\"enlighter-btn enlighter-btn-window\" title=\"Open code in new window\"></div><div class=\"enlighter-btn enlighter-btn-website\" title=\"EnlighterJS 3 Syntax Highlighter\"></div></div><div class=\"enlighter\" style=\"\"><div class=\"\"><div><span class=\"enlighter-k0\">import</span><span class=\"enlighter-k10\"> java.util.</span><span class=\"enlighter-text\">*;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-k0\">public</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-k0\">class</span><span class=\"enlighter-text\"> Scaler </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-k0\">public</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-k0\">static</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-k5\">void</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">main</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-k5\">String</span><span class=\"enlighter-g1\">[]</span><span class=\"enlighter-text\"> args</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">       ArrayList</span><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-k5\">Integer</span><span class=\"enlighter-g1\">&gt;</span><span class=\"enlighter-text\"> list = </span><span class=\"enlighter-k3\">new</span><span class=\"enlighter-text\"> ArrayList</span><span class=\"enlighter-g1\">&lt;&gt;()</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">       list.</span><span class=\"enlighter-m3\">add</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-n1\">1</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">       list.</span><span class=\"enlighter-m3\">add</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-n1\">2</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">       list.</span><span class=\"enlighter-m3\">add</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-n1\">3</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">       list.</span><span class=\"enlighter-m3\">add</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-n1\">4</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">      </span><span class=\"enlighter-c0\"> //Implementing the first way to convert list to array in java</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">       Object</span><span class=\"enlighter-g1\">[]</span><span class=\"enlighter-text\"> res1Arr=list.</span><span class=\"enlighter-m3\">toArray</span><span class=\"enlighter-g1\">()</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">      </span><span class=\"enlighter-c0\"> //Implementing the second way to convert list to array in java</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">       </span><span class=\"enlighter-k5\">Integer</span><span class=\"enlighter-g1\">[]</span><span class=\"enlighter-text\"> res2Arr = </span><span class=\"enlighter-k3\">new</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-k5\">Integer</span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-n1\">4</span><span class=\"enlighter-g1\">]</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">       list.</span><span class=\"enlighter-m3\">toArray</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">res2Arr</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">      </span><span class=\"enlighter-c0\"> //Printing the first array</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">       System.</span><span class=\"enlighter-m3\">out</span><span class=\"enlighter-text\">.</span><span class=\"enlighter-m3\">println</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-s0\">\"Printing 'res1Arr':\"</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">           </span><span class=\"enlighter-k1\">for</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">Object obj: res1Arr</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">          </span><span class=\"enlighter-c0\"> //Typecasting required for the first method</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">               System.</span><span class=\"enlighter-m3\">out</span><span class=\"enlighter-text\">.</span><span class=\"enlighter-m3\">println</span><span class=\"enlighter-g1\">((</span><span class=\"enlighter-k5\">Integer</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">obj</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">      </span><span class=\"enlighter-c0\"> //Printing the second array</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">       System.</span><span class=\"enlighter-m3\">out</span><span class=\"enlighter-text\">.</span><span class=\"enlighter-m3\">println</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-s0\">\"Printing 'res2Arr':\"</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">           </span><span class=\"enlighter-k1\">for</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-k5\">Integer</span><span class=\"enlighter-text\"> i: res2Arr</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">               System.</span><span class=\"enlighter-m3\">out</span><span class=\"enlighter-text\">.</span><span class=\"enlighter-m3\">println</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">i</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">}</span></div></div></div><div class=\"enlighter-raw\">import java.util.*;\n \npublic class Scaler {\n \n   public static void main(String[] args) {\n       ArrayList&lt;Integer&gt; list = new ArrayList&lt;&gt;();\n       list.add(1);\n       list.add(2);\n       list.add(3);\n       list.add(4);\n       //Implementing the first way to convert list to array in java\n       Object[] res1Arr=list.toArray();\n       //Implementing the second way to convert list to array in java\n       Integer[] res2Arr = new Integer[4];\n       list.toArray(res2Arr);\n       //Printing the first array\n       System.out.println(\"Printing 'res1Arr':\");\n           for(Object obj: res1Arr)\n           //Typecasting required for the first method\n               System.out.println((Integer)obj);\n       //Printing the second array\n       System.out.println(\"Printing 'res2Arr':\");\n           for(Integer i: res2Arr)\n               System.out.println(i);\n   }\n}</div><div class=\"enlighter-toolbar-bottom enlighter-toolbar\"></div></div><pre class=\"EnlighterJSRAW enlighter-origin\" data-enlighter-language=\"java\" data-enlighter-theme=\"atomic\" data-enlighter-linenumbers=\"false\">import java.util.*;\n \npublic class Scaler {\n \n   public static void main(String[] args) {\n       ArrayList&lt;Integer&gt; list = new ArrayList&lt;&gt;();\n       list.add(1);\n       list.add(2);\n       list.add(3);\n       list.add(4);\n       //Implementing the first way to convert list to array in java\n       Object[] res1Arr=list.toArray();\n       //Implementing the second way to convert list to array in java\n       Integer[] res2Arr = new Integer[4];\n       list.toArray(res2Arr);\n       //Printing the first array\n       System.out.println(\"Printing 'res1Arr':\");\n           for(Object obj: res1Arr)\n           //Typecasting required for the first method\n               System.out.println((Integer)obj);\n       //Printing the second array\n       System.out.println(\"Printing 'res2Arr':\");\n           for(Integer i: res2Arr)\n               System.out.println(i);\n   }\n}</pre>\n\n\n<h2 id=\"conclusion\">Conclusion</h2>\n\n\n\n<p><span style=\"font-weight: 400;\">List to Array in Java</span><span style=\"font-weight: 400;\"> is a program one must keep handy and is easily achieved using the toArray() method of the List interface. Alternatively, there is also a method to convert arrays to lists i.e. Arrays.asList() which does just the opposite. ArrayList’s are useful when you are unaware of how much space you wish to allocate to your data structure. Arrays cannot be resized.&nbsp;</span></p>\n\n\n\n<p><i><span style=\"font-weight: 400;\">Happy Coding!</span></i></p>\n\n<!-- MOLONGUI AUTHORSHIP PLUGIN 4.3.3 -->\n<!-- https://www.molongui.com/authorship/ -->\n<div class=\"molongui-clearfix\"></div>\n<div id=\"mab-1503880976\" class=\"m-a-box \" data-plugin-release=\"4.3.3\" data-plugin-version=\"free\" data-box-layout=\"slim\" data-box-position=\"below\" data-multiauthor=\"false\" data-author-type=\"guest\" itemscope=\"\" itemtype=\"https://schema.org/Person\" style=\"width: 100%;            margin: 20px auto;\">\n\n\t\n    <div class=\"m-a-box-container\n                molongui-border-right-none molongui-border-left-none                molongui-border-style-solid                molongui-border-width-3-px\n                m-a-box-shadow-right\" style=\"border-color: #adadad;                background-color: #efefef;\">\n\n        <div class=\"m-a-box-tab m-a-box-content m-a-box-profile\" data-profile-layout=\"layout-1\" data-author-ref=\"guest-1414\">\n            \n<div class=\"m-a-box-content-top\">\n\n\t\n</div><!-- End of .m-a-box-content-top -->\n\n<div class=\"m-a-box-content-middle\">\n\n    <!-- Author picture -->\n    \n\t<div class=\"m-a-box-item m-a-box-avatar \">\n\t\t                <span>\n                    <img alt=\"\" src=\"https://secure.gravatar.com/avatar/?s=150&amp;d=mp&amp;r=g\" srcset=\"https://secure.gravatar.com/avatar/?s=300&amp;d=mp&amp;r=g 2x\" class=\"avatar avatar-150 photo avatar-default m-radius-none molongui-border-style-solid molongui-border-width-2-px\" height=\"150\" width=\"150\" style=\"border-color:#bfbfbf;\" itemprop=\"image\" loading=\"lazy\">                </span>\n                \t</div>\n\n    <!-- Author social -->\n    \n    <!-- Author data -->\n    <div class=\"m-a-box-item m-a-box-data \">\n\n        <!-- Author name -->\n        \n<div class=\"m-a-box-title\">\n\t<h5 class=\"molongui-font-size-22-px\n\t        molongui-text-align-left                        molongui-text-case-none\" style=\"color: inherit\" itemprop=\"name\">\n                        <span class=\"molongui-font-size-22-px molongui-text-align-left\" style=\"color:inherit;\">\n\t\t\t        Hinal Vithlani                </span>\n\t            \t</h5>\n</div>\n        <!-- Author metadata -->\n        \n<div class=\"m-a-box-item m-a-box-meta\n            molongui-font-size-12-px\n            molongui-text-align-left                        molongui-text-case-none\" style=\"color: inherit\">\n\n    \n    \n    \n\t\n\t\n\t\n\t        \t\t<script type=\"text/javascript\" language=\"JavaScript\">\n\t\t\tif ( typeof window.ToggleAuthorshipData === 'undefined' )\n\t\t\t{\n\t\t\t\tfunction ToggleAuthorshipData(id, author)\n\t\t\t\t{\n\t\t\t\t\tvar box_selector = '#mab-' + id;\n                    var box = document.querySelector(box_selector);\n                    if ( box.getAttribute('data-multiauthor') ) box_selector = '#mab-' + id + ' [data-author-ref=\"' + author + '\"]';\n\t\t\t\t\tvar label = document.querySelector(box_selector + ' ' + '.m-a-box-data-toggle');\n\t\t\t\t\tlabel.innerHTML = ( label.text.trim() === \"+ posts\" ? \" <span class=\\\"m-a-box-string-bio\\\">Bio</span>\" : \" <span class=\\\"m-a-box-string-more-posts\\\">+ posts</span>\" );\n\t\t\t\t\tvar bio     = document.querySelector(box_selector + ' ' + '.m-a-box-bio');\n\t\t\t\t\tvar related = document.querySelector(box_selector + ' ' + '.m-a-box-related-entries');\n\n\t\t\t\t\tif ( related.style.display === \"none\" )\n\t\t\t\t\t{\n\t\t\t\t\t\trelated.style.display = \"block\";\n\t\t\t\t\t\tbio.style.display     = \"none\";\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\trelated.style.display = \"none\";\n\t\t\t\t\t\tbio.style.display     = \"block\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t</script>\n\t\t<a href=\"javascript:ToggleAuthorshipData(1503880976, 'guest-1414')\" class=\"m-a-box-data-toggle\" style=\"color: inherit\" rel=\"nofollow\"> <span class=\"m-a-box-string-more-posts\">+ posts</span> </a>\n\t\n</div><!-- End of .m-a-box-meta -->\n\n        <!-- Author bio -->\n        \n<div class=\"m-a-box-bio\" itemprop=\"description\">\n\t<div class=\"molongui-font-size-14-px molongui-text-align-justify  molongui-line-height-10\" style=\"color: inherit\">\n\t    \t</div>\n</div>\n\n        \n            <!-- Author related posts -->\n            <div class=\"m-a-box-related\" data-related-layout=\"layout-1\">\n                <div class=\"m-a-box-item m-a-box-related-entries\" style=\"display: none;\">\n\n                                        <ul class=\"molongui-font-size-14-px \" style=\"color: inherit\">\n                         <span class=\"m-a-box-string-no-related-posts\">This author does not have any more posts.</span>                    </ul>\n\n                </div><!-- End of .m-a-box-related-entries -->\n            </div><!-- End of .m-a-box-related -->\n\n        \n    </div><!-- End of .m-a-box-data -->\n\n</div><!-- End of .m-a-box-content-middle -->\n\n<div class=\"m-a-box-content-bottom\"></div><!-- End of .m-a-box-content-bottom -->        </div><!-- End of .m-a-box-profile -->\n\n        \n    </div><!-- End of .m-a-box-container -->\n\n\t\n</div><!-- End of .m-a-box -->\t</div><!-- .entry-content -->\n\t</div>\n\t<footer class=\"entry-footer\">\n\t\t<span class=\"cat-links\">Posted in <a href=\"https://www.scaler.com/topics/category/java/\" rel=\"category tag\">Java</a></span> | <span class=\"tags-links\">Tagged <a href=\"https://www.scaler.com/topics/tag/convert-list-to-array-in-java/\" rel=\"tag\">convert list to array in java</a>, <a href=\"https://www.scaler.com/topics/tag/java-list-to-array/\" rel=\"tag\">java list to array</a>, <a href=\"https://www.scaler.com/topics/tag/list-to-array-in-java/\" rel=\"tag\">list to array in java</a></span>\t</footer><!-- .entry-footer -->\n</article><!-- #post-## -->\n\n\n\n\t<nav class=\"navigation post-navigation\" role=\"navigation\" aria-label=\"Posts\">\n\t\t<h2 class=\"screen-reader-text\">Post navigation</h2>\n\t\t<div class=\"nav-links\"><div class=\"nav-previous\"><a href=\"https://www.scaler.com/topics/passing-array-to-function-in-c-cpp/\" rel=\"prev\">Passing Array to Function in C/C++</a></div></div>\n\t</nav>\n<div id=\"comments\" class=\"comments-area\">\n\n    \n    \t<div id=\"respond\" class=\"comment-respond\">\n\t\t<h3 id=\"reply-title\" class=\"comment-reply-title\">Leave a Reply <small><a rel=\"nofollow\" id=\"cancel-comment-reply-link\" href=\"/topics/list-to-array-in-java/#respond\" style=\"display:none;\">Cancel Reply</a></small></h3><p class=\"must-log-in\">You must be <a href=\"https://www.scaler.com/topics/wp-login.php?redirect_to=https%3A%2F%2Fwww.scaler.com%2Ftopics%2Flist-to-array-in-java%2F\">logged in</a> to post a comment.</p>\t</div><!-- #respond -->\n\t\n</div><!-- #comments -->\n\n\t\t</div><!-- #main -->\n\t</section><!-- #primary -->\n\n\t\t\t</div><!-- .row -->\n\t\t</div><!-- .container -->\n\t</div><!-- #content -->\n    \t<footer id=\"colophon\" class=\"site-footer navbar-light bg-light\" role=\"contentinfo\">\n\t\t<div class=\"container pt-3 pb-3\">\n            <div class=\"site-info text-center\">\n\t\t\t\tCopyright © 2021 InterviewBit Technologies Pte. Ltd. All Rights Reserved\n            </div><!-- close .site-info -->\n\t\t</div>\n\t</footer><!-- #colophon -->\n</div><!-- #page -->\n\n<script type=\"text/javascript\" id=\"molongui-authorship-js-extra\">\n/* <![CDATA[ */\nvar molongui_authorship = {\"byline_prefix\":\"\",\"byline_suffix\":\"\",\"byline_separator\":\", \",\"byline_last_separator\":\" and \",\"byline_link_title\":\"View all posts by\",\"byline_dom_tree\":\"\"};\n/* ]]> */\n</script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/plugins/molongui-authorship/public/js/molongui-authorship.5a1d.min.js?ver=4.3.3\" id=\"molongui-authorship-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/js/popper.min.js?ver=5.7.2\" id=\"wp-bootstrap-starter-popper-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/js/bootstrap.min.js?ver=5.7.2\" id=\"wp-bootstrap-starter-bootstrapjs-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/js/theme-script.min.js?ver=5.7.2\" id=\"wp-bootstrap-starter-themejs-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/js/skip-link-focus-fix.min.js?ver=20151215\" id=\"wp-bootstrap-starter-skip-link-focus-fix-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-includes/js/comment-reply.min.js?ver=5.7.2\" id=\"comment-reply-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/plugins/gutentoc-advance-table-of-content/dist/toc.js?ver=5.7.2\" id=\"gutentocjs-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/plugins/enlighter/cache/enlighterjs.min.js?ver=0UVtrfqVvCkLefk\" id=\"enlighterjs-js\"></script>\n<script type=\"text/javascript\" id=\"enlighterjs-js-after\">\n!function(e,n){if(\"undefined\"!=typeof EnlighterJS){var o={\"selectors\":{\"block\":\"pre.EnlighterJSRAW\",\"inline\":\"code.EnlighterJSRAW\"},\"options\":{\"indent\":2,\"ampersandCleanup\":true,\"linehover\":true,\"rawcodeDbclick\":false,\"textOverflow\":\"break\",\"linenumbers\":true,\"theme\":\"classic\",\"language\":\"generic\",\"retainCssClasses\":false,\"collapse\":false,\"toolbarOuter\":\"\",\"toolbarTop\":\"{BTN_RAW}{BTN_COPY}{BTN_WINDOW}{BTN_WEBSITE}\",\"toolbarBottom\":\"\"}};(e.EnlighterJSINIT=function(){EnlighterJS.init(o.selectors.block,o.selectors.inline,o.options)})()}else{(n&&(n.error||n.log)||function(){})(\"Error: EnlighterJS resources not loaded yet!\")}}(window,console);\n</script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-includes/js/wp-embed.min.js?ver=5.7.2\" id=\"wp-embed-js\"></script>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/css-element-queries@1.2.2/src/ResizeSensor.min.js?ver=1.2.2\" id=\"molongui-resizesensor-js\"></script>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/css-element-queries@1.2.2/src/ElementQueries.min.js?ver=1.2.2\" id=\"molongui-elementqueries-js\"></script>\n<script>\n\nfunction is_logged_in()\n{\n\nlet xhr = new XMLHttpRequest();\n\nxhr.open('GET', 'https://www.interviewbit.com/get_user_options/', false);\n\ntry {\n  xhr.send();\n  if (xhr.status != 200) {\n   console.log(`Error ${xhr.status}: ${xhr.statusText}`);\n  } else {\n\n  if(JSON.parse(xhr.response).logged_in == true){\n  return true;\n  }\n  else{\n  return false;\n  }\n     \n  }\n} catch(err) { // instead of onerror\n  console.log(\"Request failed\");\n}\n\t\n}\n\n\t\n</script>\n\n</body>",slug: 'hello-world')


Article.create(title: 'Passing Array to Function in C/C++', content: "<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <link rel=\"profile\" href=\"http://gmpg.org/xfn/11\">\n\n<!-- Author Meta Tags by Molongui Authorship 4.3.3, visit: https://wordpress.org/plugins/molongui-authorship/ -->\n<meta name=\"author\" content=\"Abhishek Deshmukh\">\n<!-- /Molongui Authorship -->\n\n<title>Passing Array to Function in C/C++ - Scaler Topics</title>\n\n<!-- The SEO Framework by Sybre Waaijer -->\n<meta name=\"robots\" content=\"max-snippet:-1,max-image-preview:standard,max-video-preview:-1\">\n<meta name=\"description\" content=\"Arrays are the most widely used and important data structure. In this article by Scaler Topics, you will learn passing array to function in C/C++.\">\n<meta property=\"og:image\" content=\"https://www.scaler.com/topics/media/Passing-arrays-in-C-C.png\">\n<meta property=\"og:image:width\" content=\"2134\">\n<meta property=\"og:image:height\" content=\"1042\">\n<meta property=\"og:image:alt\" content=\"Passing arrays in C-C++\">\n<meta property=\"og:locale\" content=\"en_US\">\n<meta property=\"og:type\" content=\"article\">\n<meta property=\"og:title\" content=\"Passing Array to Function in C/C++ - Scaler Topics\">\n<meta property=\"og:description\" content=\"Arrays are the most widely used and important data structure. In this article by Scaler Topics, you will learn passing array to function in C/C++.\">\n<meta property=\"og:url\" content=\"https://www.scaler.com/topics/passing-array-to-function-in-c-cpp/\">\n<meta property=\"og:site_name\" content=\"Scaler Topics\">\n<meta property=\"og:updated_time\" content=\"2021-07-22\">\n<meta property=\"article:published_time\" content=\"2021-07-22\">\n<meta property=\"article:modified_time\" content=\"2021-07-22\">\n<meta name=\"twitter:card\" content=\"summary_large_image\">\n<meta name=\"twitter:title\" content=\"Passing Array to Function in C/C++ - Scaler Topics\">\n<meta name=\"twitter:description\" content=\"Arrays are the most widely used and important data structure. In this article by Scaler Topics, you will learn passing array to function in C/C++.\">\n<meta name=\"twitter:image\" content=\"https://www.scaler.com/topics/media/Passing-arrays-in-C-C.png\">\n<meta name=\"twitter:image:width\" content=\"2134\">\n<meta name=\"twitter:image:height\" content=\"1042\">\n<meta name=\"twitter:image:alt\" content=\"Passing arrays in C-C++\">\n<link rel=\"canonical\" href=\"https://www.scaler.com/topics/passing-array-to-function-in-c-cpp/\">\n<script type=\"text/javascript\" async=\"\" src=\"https://www.google-analytics.com/analytics.js\"></script><script type=\"application/ld+json\">{\"@context\":\"https://schema.org\",\"@type\":\"BreadcrumbList\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"item\":{\"@id\":\"https://www.scaler.com/topics/\",\"name\":\"Scaler Topics\"}},{\"@type\":\"ListItem\",\"position\":2,\"item\":{\"@id\":\"https://www.scaler.com/topics/category/c/\",\"name\":\"C\"}},{\"@type\":\"ListItem\",\"position\":3,\"item\":{\"@id\":\"https://www.scaler.com/topics/passing-array-to-function-in-c-cpp/\",\"name\":\"Passing Array to Function in C/C++ &#x2d; Scaler Topics\"}}]}</script>\n<meta name=\"p:domain_verify\" content=\"7e10627c0f88fb1a4f4c6ae8c0d34b16\">\n<!-- / The SEO Framework by Sybre Waaijer | 3.30ms meta | 0.24ms boot -->\n\n<link rel=\"dns-prefetch\" href=\"//fonts.googleapis.com\">\n<link rel=\"dns-prefetch\" href=\"//s.w.org\">\n<link rel=\"alternate\" type=\"application/rss+xml\" title=\"Scaler Topics » Feed\" href=\"https://www.scaler.com/topics/feed/\">\n<link rel=\"alternate\" type=\"application/rss+xml\" title=\"Scaler Topics » Comments Feed\" href=\"https://www.scaler.com/topics/comments/feed/\">\n<link rel=\"alternate\" type=\"application/rss+xml\" title=\"Scaler Topics » Passing Array to Function in C/C++ Comments Feed\" href=\"https://www.scaler.com/topics/passing-array-to-function-in-c-cpp/feed/\">\n\t\t<script type=\"text/javascript\">\n\t\t\twindow._wpemojiSettings = {\"baseUrl\":\"https:\\/\\/s.w.org\\/images\\/core\\/emoji\\/13.0.1\\/72x72\\/\",\"ext\":\".png\",\"svgUrl\":\"https:\\/\\/s.w.org\\/images\\/core\\/emoji\\/13.0.1\\/svg\\/\",\"svgExt\":\".svg\",\"source\":{\"concatemoji\":\"https:\\/\\/www.scaler.com\\/topics\\/wp-includes\\/js\\/wp-emoji-release.min.js?ver=5.7.2\"}};\n\t\t\t!function(e,a,t){var n,r,o,i=a.createElement(\"canvas\"),p=i.getContext&&i.getContext(\"2d\");function s(e,t){var a=String.fromCharCode;p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,e),0,0);e=i.toDataURL();return p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,t),0,0),e===i.toDataURL()}function c(e){var t=a.createElement(\"script\");t.src=e,t.defer=t.type=\"text/javascript\",a.getElementsByTagName(\"head\")[0].appendChild(t)}for(o=Array(\"flag\",\"emoji\"),t.supports={everything:!0,everythingExceptFlag:!0},r=0;r<o.length;r++)t.supports[o[r]]=function(e){if(!p||!p.fillText)return!1;switch(p.textBaseline=\"top\",p.font=\"600 32px Arial\",e){case\"flag\":return s([127987,65039,8205,9895,65039],[127987,65039,8203,9895,65039])?!1:!s([55356,56826,55356,56819],[55356,56826,8203,55356,56819])&&!s([55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447],[55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447]);case\"emoji\":return!s([55357,56424,8205,55356,57212],[55357,56424,8203,55356,57212])}return!1}(o[r]),t.supports.everything=t.supports.everything&&t.supports[o[r]],\"flag\"!==o[r]&&(t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&t.supports[o[r]]);t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&!t.supports.flag,t.DOMReady=!1,t.readyCallback=function(){t.DOMReady=!0},t.supports.everything||(n=function(){t.readyCallback()},a.addEventListener?(a.addEventListener(\"DOMContentLoaded\",n,!1),e.addEventListener(\"load\",n,!1)):(e.attachEvent(\"onload\",n),a.attachEvent(\"onreadystatechange\",function(){\"complete\"===a.readyState&&t.readyCallback()})),(n=t.source||{}).concatemoji?c(n.concatemoji):n.wpemoji&&n.twemoji&&(c(n.twemoji),c(n.wpemoji)))}(window,document,window._wpemojiSettings);\n\t\t</script><script src=\"https://www.scaler.com/topics/wp-includes/js/wp-emoji-release.min.js?ver=5.7.2\" type=\"text/javascript\" defer=\"\"></script>\n\t\t<style type=\"text/css\">\nimg.wp-smiley,\nimg.emoji {\n\tdisplay: inline !important;\n\tborder: none !important;\n\tbox-shadow: none !important;\n\theight: 1em !important;\n\twidth: 1em !important;\n\tmargin: 0 .07em !important;\n\tvertical-align: -0.1em !important;\n\tbackground: none !important;\n\tpadding: 0 !important;\n}\n</style>\n\t<link rel=\"stylesheet\" id=\"wp-quicklatex-format-css\" href=\"https://www.scaler.com/topics/wp-content/plugins/wp-quicklatex/css/quicklatex-format.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-block-library-css\" href=\"https://www.scaler.com/topics/wp-includes/css/dist/block-library/style.min.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"gutentocwp-cgb-style-css-css\" href=\"https://www.scaler.com/topics/wp-content/plugins/gutentoc-advance-table-of-content/dist/blocks.style.build.css\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"child-theme-generator-css\" href=\"https://www.scaler.com/topics/wp-content/plugins/child-theme-generator/public/css/child-theme-generator-public.css?ver=1.0.0\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"molongui-authorship-css\" href=\"https://www.scaler.com/topics/wp-content/plugins/molongui-authorship/public/css/molongui-authorship.27a7.min.css?ver=4.3.3\" type=\"text/css\" media=\"all\">\n<style id=\"molongui-authorship-inline-css\" type=\"text/css\">\n:root{ --m-a-box-bp: 600px; --m-a-box-bp-l: 599px; }\n</style>\n<link rel=\"stylesheet\" id=\"parente2-style-css\" href=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/style.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"childe2-style-css\" href=\"https://www.scaler.com/topics/wp-content/themes/InterviewBit/style.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-bootstrap-starter-bootstrap-css-css\" href=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/css/bootstrap.min.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-bootstrap-starter-fontawesome-cdn-css\" href=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/css/fontawesome.min.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-bootstrap-starter-style-css\" href=\"https://www.scaler.com/topics/wp-content/themes/InterviewBit/style.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-bootstrap-starter-litera-css\" href=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/css/presets/theme-option/litera.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-bootstrap-starter-montserrat-opensans-font-css\" href=\"https://fonts.googleapis.com/css?family=Montserrat%7COpen+Sans%3A300%2C300i%2C400%2C400i%2C600%2C600i%2C700%2C800&amp;ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-bootstrap-starter-montserrat-opensans-css\" href=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/css/presets/typography/montserrat-opensans.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"enlighterjs-css\" href=\"https://www.scaler.com/topics/wp-content/plugins/enlighter/cache/enlighterjs.min.css?ver=0UVtrfqVvCkLefk\" type=\"text/css\" media=\"all\">\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-includes/js/jquery/jquery.min.js?ver=3.5.1\" id=\"jquery-core-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-includes/js/jquery/jquery-migrate.min.js?ver=3.3.2\" id=\"jquery-migrate-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/plugins/child-theme-generator/public/js/child-theme-generator-public.js?ver=1.0.0\" id=\"child-theme-generator-js\"></script>\n<!--[if lt IE 9]>\n<script type='text/javascript' src='https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/js/html5.js?ver=3.7.0' id='html5hiv-js'></script>\n<![endif]-->\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/plugins/wp-quicklatex/js/wp-quicklatex-frontend.js?ver=1.0\" id=\"wp-quicklatex-frontend-js\"></script>\n<link rel=\"https://api.w.org/\" href=\"https://www.scaler.com/topics/wp-json/\"><link rel=\"alternate\" type=\"application/json\" href=\"https://www.scaler.com/topics/wp-json/wp/v2/posts/78\"><link rel=\"EditURI\" type=\"application/rsd+xml\" title=\"RSD\" href=\"https://www.scaler.com/topics/xmlrpc.php?rsd\">\n<link rel=\"wlwmanifest\" type=\"application/wlwmanifest+xml\" href=\"https://www.scaler.com/topics/wp-includes/wlwmanifest.xml\"> \n<link rel=\"alternate\" type=\"application/json+oembed\" href=\"https://www.scaler.com/topics/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.scaler.com%2Ftopics%2Fpassing-array-to-function-in-c-cpp%2F\">\n<link rel=\"alternate\" type=\"text/xml+oembed\" href=\"https://www.scaler.com/topics/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.scaler.com%2Ftopics%2Fpassing-array-to-function-in-c-cpp%2F&amp;format=xml\">\n<link rel=\"pingback\" href=\"https://www.scaler.com/topics/xmlrpc.php\">    <style type=\"text/css\">\n        #page-sub-header { background: #fff; }\n    </style>\n    <link rel=\"icon\" href=\"https://www.scaler.com/topics/media/cropped-android-chrome-512x512-1-32x32.png\" sizes=\"32x32\">\n<link rel=\"icon\" href=\"https://www.scaler.com/topics/media/cropped-android-chrome-512x512-1-192x192.png\" sizes=\"192x192\">\n<link rel=\"apple-touch-icon\" href=\"https://www.scaler.com/topics/media/cropped-android-chrome-512x512-1-180x180.png\">\n<meta name=\"msapplication-TileImage\" content=\"https://www.scaler.com/topics/media/cropped-android-chrome-512x512-1-270x270.png\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\n<link href=\"https://fonts.googleapis.com/css2?family=Roboto&amp;display=swap\" rel=\"stylesheet\">\n\t<!-- Global site tag (gtag.js) - Google Analytics -->\n<script async=\"\" src=\"https://www.googletagmanager.com/gtag/js?id=UA-56207880-1\"></script>\n<script>\n  window.dataLayer = window.dataLayer || [];\n  function gtag(){dataLayer.push(arguments);}\n  gtag('js', new Date());\n\n  gtag('config', 'UA-56207880-1');\n</script>\n<style type=\"text/css\">[responsive-image] > img, [data-responsive-image] {overflow: hidden; padding: 0; } [responsive-image] > img, [data-responsive-image] > img {width: 100%;}\n@keyframes element-queries { 0% { visibility: inherit; } }</style></head>\n\n<body class=\"post-template-default single single-post postid-78 single-format-standard topics group-blog theme-preset-active\">\n\n\n<div id=\"page\" class=\"site\">\n\n\t<!-- #masthead -->\n    \t<div id=\"content\" class=\"site-content\">\n\t\t<div class=\"container\">\n\t\t\t<div class=\"row\">\n                \n\t<section id=\"primary\" class=\"content-area col-sm-12 col-lg-8 mx-auto\">\n\t\t<div id=\"main\" class=\"site-main\" role=\"main\">\n\n\t\t\n\n\n<article id=\"post-78\" class=\"post-78 post type-post status-publish format-standard has-post-thumbnail hentry category-c category-c-2 tag-passing-array-in-c tag-passing-array-in-c-2\">\n\t<div class=\"post-thumbnail mb-3\">\n\t\t<img width=\"2134\" height=\"1042\" src=\"https://www.scaler.com/topics/media/Passing-arrays-in-C-C.png\" class=\"attachment-post-thumbnail size-post-thumbnail wp-post-image\" alt=\"Passing arrays in C-C++\" loading=\"lazy\" srcset=\"https://www.scaler.com/topics/media/Passing-arrays-in-C-C.png 2134w, https://www.scaler.com/topics/media/Passing-arrays-in-C-C-300x146.png 300w, https://www.scaler.com/topics/media/Passing-arrays-in-C-C-1024x500.png 1024w, https://www.scaler.com/topics/media/Passing-arrays-in-C-C-768x375.png 768w, https://www.scaler.com/topics/media/Passing-arrays-in-C-C-1536x750.png 1536w, https://www.scaler.com/topics/media/Passing-arrays-in-C-C-2048x1000.png 2048w\" sizes=\"(max-width: 2134px) 100vw, 2134px\">\t</div>\n\t<div class=\"post-content-here\">\n\n\t<header class=\"entry-header\">\n\t\t<h1 class=\"entry-title\">Passing Array to Function in C/C++</h1>\t\t<div class=\"entry-meta\">\n<!-- \t\t\t<span class=\"posted-on\">Posted on <a href=\"https://www.scaler.com/topics/passing-array-to-function-in-c-cpp/\" rel=\"bookmark\"><time class=\"entry-date published\" datetime=\"2021-07-22T13:35:19+05:30\">July 22, 2021</time></a></span> | <span class=\"byline\"> by <span class=\"author vcard\"><a class=\"url fn n\" href=\"#molongui-disabled-link\">Abhishek Deshmukh</a></span></span> -->\n\t\t</div><!-- .entry-meta -->\n\t\t\t</header><!-- .entry-header -->\n\t<div class=\"entry-content\">\n\t\t\n<div class=\"gutentoc tocactive nostyle\"><div class=\"gutentoc-toc-wrap\"><div class=\"gutentoc-toc-title-wrap\"><div class=\"gutentoc-toc-title\">Table Of Contents</div><div id=\"open\" class=\"toggleone\">show</div></div><div id=\"toclist\"><div class=\"gutentoc-toc__list-wrap\"><ul class=\"gutentoc-toc__list\"><li><a href=\"#introduction-to-arrays\">Introduction to Arrays</a></li><li><a href=\"#passing-array-to-function-in-cc\">Passing Array to Function in C/C++</a></li><li><a href=\"#passing-multidimensional-array-to-a-function-in-cc\">Passing Multidimensional Array to a Function in C/C++</a></li><li><a href=\"#call-by-value-amp-call-by-reference\">Call By Value &amp; Call By Reference</a></li><li><a href=\"#returning-array-from-the-function-in-cc\">Returning Array From the Function in C/C++</a></li><li><a href=\"#summary\">Summary</a></li></ul></div></div></div></div>\n\n\n\n<div class=\"wp-block-image is-style-default\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"1024\" height=\"495\" src=\"https://www.scaler.com/topics/media/Passing-Array-to-Function-in-CC-1024x495.jpeg\" alt=\"Passing Array to Function in C/C++\" class=\"wp-image-1375\" title=\"Passing Array to Function in C/C++\" srcset=\"https://www.scaler.com/topics/media/Passing-Array-to-Function-in-CC-1024x495.jpeg 1024w, https://www.scaler.com/topics/media/Passing-Array-to-Function-in-CC-300x145.jpeg 300w, https://www.scaler.com/topics/media/Passing-Array-to-Function-in-CC-768x371.jpeg 768w, https://www.scaler.com/topics/media/Passing-Array-to-Function-in-CC-1536x743.jpeg 1536w, https://www.scaler.com/topics/media/Passing-Array-to-Function-in-CC.jpeg 1801w\" sizes=\"(max-width: 1024px) 100vw, 1024px\"></figure></div>\n\n\n\n<p><span style=\"font-weight: 400;\">The array is the most important, easiest, and widely used data structure in programming languages. It is the collection of similar types of data present in the contiguous consecutive memory location where each element in the array is accessed by the index associated with them. Hence the array is defined as a collection of homogeneous(same data-type) elements stored in a contiguous memory location.&nbsp;</span></p>\n\n\n\n<p><span style=\"font-weight: 400;\">As the arrays are the most widely used and important data structures we should have a clear idea to process them and pass them to other functions to solve various use-cases. Thus through this article, we will try to discuss all the important ways and techniques to handle arrays in C/C++ programs with examples.</span></p>\n\n\n\n<p><span style=\"font-weight: 400;\">So let’s get started.</span></p>\n\n\n\n<h2 id=\"introduction-to-arrays\">Introduction to Arrays</h2>\n\n\n\n<p><span style=\"font-weight: 400;\">Arrays are divided into two basic types: </span><b>single-dimensional </b><span style=\"font-weight: 400;\">or</span><b> 1-D</b><span style=\"font-weight: 400;\"> and </span><b>multi dimensional</b><span style=\"font-weight: 400;\">. The multi-dimensional arrays can be further divided into two-dimensional (2-D), three-dimensional (3-D), and n-dimensional (N-D) arrays.</span></p>\n\n\n\n<div class=\"wp-block-image is-style-default\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"1024\" height=\"826\" src=\"https://www.scaler.com/topics/media/Single-Dimensional-Array-and-Multi-Dimensional-Array-in-CC-1024x826.jpeg\" alt=\"Single Dimensional Array and Multi Dimensional Array in C/C++\" class=\"wp-image-1376\" title=\"Single Dimensional Array and Multi Dimensional Array in C/C++\" srcset=\"https://www.scaler.com/topics/media/Single-Dimensional-Array-and-Multi-Dimensional-Array-in-CC-1024x826.jpeg 1024w, https://www.scaler.com/topics/media/Single-Dimensional-Array-and-Multi-Dimensional-Array-in-CC-300x242.jpeg 300w, https://www.scaler.com/topics/media/Single-Dimensional-Array-and-Multi-Dimensional-Array-in-CC-768x620.jpeg 768w, https://www.scaler.com/topics/media/Single-Dimensional-Array-and-Multi-Dimensional-Array-in-CC.jpeg 1325w\" sizes=\"(max-width: 1024px) 100vw, 1024px\"></figure></div>\n\n\n\n<p><span style=\"font-weight: 400;\">Before using arrays in C/C++ programs, we have to declare them. The declaration of arrays is similar to the declaration of variables in C/C++.&nbsp;</span></p>\n\n\n\n<div class=\"wp-block-image is-style-default\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"1024\" height=\"801\" src=\"https://www.scaler.com/topics/media/Array-Declaration-in-C-and-C-1024x801.jpeg\" alt=\"Array Declaration in C and C++\" class=\"wp-image-1377\" title=\"Array Declaration in C and C++\" srcset=\"https://www.scaler.com/topics/media/Array-Declaration-in-C-and-C-1024x801.jpeg 1024w, https://www.scaler.com/topics/media/Array-Declaration-in-C-and-C-300x235.jpeg 300w, https://www.scaler.com/topics/media/Array-Declaration-in-C-and-C-768x601.jpeg 768w, https://www.scaler.com/topics/media/Array-Declaration-in-C-and-C.jpeg 1101w\" sizes=\"(max-width: 1024px) 100vw, 1024px\"></figure></div>\n\n\n\n<p><span style=\"font-weight: 400;\">After declaration there comes the next step, initialization of arrays. The initialization can be done in different ways depending on the use-cases. Some of the ways are shown below:</span></p>\n\n\n\n<h3 id=\"---1-direct-list---\"><b><i><strong>1. Direct List:</strong></i></b></h3>\n\n\n\n<p><span style=\"font-weight: 400;\">The list of values could be directly passed to the arrays.</span></p>\n\n\n\n<div class=\"wp-block-image is-style-default\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"1024\" height=\"478\" src=\"https://www.scaler.com/topics/media/Initializing-Array-in-C-and-C-1024x478.jpeg\" alt=\"Initializing Array in C and C++\" class=\"wp-image-1378\" title=\"Initializing Array in C and C++\" srcset=\"https://www.scaler.com/topics/media/Initializing-Array-in-C-and-C-1024x478.jpeg 1024w, https://www.scaler.com/topics/media/Initializing-Array-in-C-and-C-300x140.jpeg 300w, https://www.scaler.com/topics/media/Initializing-Array-in-C-and-C-768x358.jpeg 768w, https://www.scaler.com/topics/media/Initializing-Array-in-C-and-C.jpeg 1162w\" sizes=\"(max-width: 1024px) 100vw, 1024px\"></figure></div>\n\n\n\n<h3 id=\"---2-user-input---\"><b><i><strong>2. User Input:</strong></i></b></h3>\n\n\n\n<p><span style=\"font-weight: 400;\">The input from the user may also be used to initialize the array elements.</span></p>\n\n\n\n<div class=\"wp-block-image is-style-default\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"653\" height=\"356\" src=\"https://www.scaler.com/topics/media/Initializing-Array-Elements-in-CC.jpeg\" alt=\"Initializing Array Elements in C/C++\" class=\"wp-image-1379\" title=\"Initializing Array Elements in C/C++\" srcset=\"https://www.scaler.com/topics/media/Initializing-Array-Elements-in-CC.jpeg 653w, https://www.scaler.com/topics/media/Initializing-Array-Elements-in-CC-300x164.jpeg 300w\" sizes=\"(max-width: 653px) 100vw, 653px\"></figure></div>\n\n\n\n<p><span style=\"font-weight: 400;\">It’s already known to us that elements of an array are stored in contiguous memory locations and we can directly access the elements of arrays using the indexes associated with the elements.</span></p>\n\n\n\n<div class=\"wp-block-image is-style-default\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"1024\" height=\"534\" src=\"https://www.scaler.com/topics/media/Intializing-Array-in-C-and-C-1024x534.jpeg\" alt=\"Intializing Array in C and C++\" class=\"wp-image-1380\" title=\"Intializing Array in C and C++\" srcset=\"https://www.scaler.com/topics/media/Intializing-Array-in-C-and-C-1024x534.jpeg 1024w, https://www.scaler.com/topics/media/Intializing-Array-in-C-and-C-300x156.jpeg 300w, https://www.scaler.com/topics/media/Intializing-Array-in-C-and-C-768x401.jpeg 768w, https://www.scaler.com/topics/media/Intializing-Array-in-C-and-C.jpeg 1325w\" sizes=\"(max-width: 1024px) 100vw, 1024px\"></figure></div>\n\n\n\n<p><span style=\"font-weight: 400;\">Now let’s try to create a simple program to store the marks of each student and calculate the total marks obtained by all students.</span></p>\n\n\n\n<p><span style=\"font-weight: 400;\">Consider 10 students in a class, the array </span><b>marks</b><span style=\"font-weight: 400;\"> will represent the mark of each student and at last we will traverse through the array(</span><b>marks</b><span style=\"font-weight: 400;\">) to calculate total marks into a variable </span><b>sum.&nbsp;</b></p>\n\n\n<div class=\"enlighter-default enlighter-v-standard enlighter-t-atomic enlighter-hover \"><div class=\"enlighter-toolbar-top enlighter-toolbar\"><div class=\"enlighter-btn enlighter-btn-raw\" title=\"Plain text\"></div><div class=\"enlighter-btn enlighter-btn-copy\" title=\"Copy to clipboard\"></div><div class=\"enlighter-btn enlighter-btn-window\" title=\"Open code in new window\"></div><div class=\"enlighter-btn enlighter-btn-website\" title=\"EnlighterJS 3 Syntax Highlighter\"></div></div><div class=\"enlighter\" style=\"\"><div class=\"\"><div><span class=\"enlighter-k4\">#include &lt;stdio.h&gt; </span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">main</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">()</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-c0\"> // declaration and initialization of array “marks”</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> marks</span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">10</span><span class=\"enlighter-g1\">]</span><span class=\"enlighter-text\"> = </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\">10, 20, 30, 17, 5, 20, 15, 45, 77, 38</span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> sum=0;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-c0\"> // traversing through the array</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-k1\">for</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">i = 0; i </span><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-text\"> 10; ++i</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">      sum += arr</span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">i</span><span class=\"enlighter-g1\">]</span><span class=\"enlighter-text\">; </span><span class=\"enlighter-c0\"> // calculating total marks</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-c0\"> // printing total marks of students</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-m0\">printf</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-s0\">\"Total marks of students is: %d \"</span><span class=\"enlighter-text\">, sum </span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-k0\">return</span><span class=\"enlighter-text\"> 0;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">}</span></div></div></div><div class=\"enlighter-raw\">#include &lt;stdio.h&gt; \nint main () {\n \n   // declaration and initialization of array “marks”\n   int marks[10] = {10, 20, 30, 17, 5, 20, 15, 45, 77, 38};\n   int sum=0;\n \n   // traversing through the array\n   for (i = 0; i &lt; 10; ++i) {\n      sum += arr[i];  // calculating total marks\n   }\n \n   // printing total marks of students\n   printf( \"Total marks of students is: %d \", sum );\n    \n   return 0;\n}</div><div class=\"enlighter-toolbar-bottom enlighter-toolbar\"></div></div><pre class=\"EnlighterJSRAW enlighter-origin\" data-enlighter-language=\"cpp\" data-enlighter-theme=\"atomic\" data-enlighter-linenumbers=\"false\">#include &lt;stdio.h&gt; \nint main () {\n \n   // declaration and initialization of array “marks”\n   int marks[10] = {10, 20, 30, 17, 5, 20, 15, 45, 77, 38};\n   int sum=0;\n \n   // traversing through the array\n   for (i = 0; i &lt; 10; ++i) {\n      sum += arr[i];  // calculating total marks\n   }\n \n   // printing total marks of students\n   printf( \"Total marks of students is: %d \", sum );\n    \n   return 0;\n}</pre>\n\n\n<p><span style=\"font-weight: 400;\">What if we want to pass the complete array to some function in order to perform operations?&nbsp;</span></p>\n\n\n\n<p><span style=\"font-weight: 400;\">Lets see how we can pass an array to a function in C/C++.</span></p>\n\n\n\n<h2 id=\"passing-array-to-function-in-cc\">Passing Array to Function in C/C++</h2>\n\n\n\n<p><span style=\"font-weight: 400;\">Just like normal variables, simple arrays can also be passed to a function as an argument, but in C/C++ whenever we pass an array as a function argument then it is always treated as a pointer by a function. Pointers not only have a capability of storing the address of a single variable but they can also store the address of cells of an array.&nbsp;</span></p>\n\n\n\n<p><span style=\"font-weight: 400;\">The array name is treated as the address to the first element of an array, hence we can use pointers to access the elements of arrays.</span></p>\n\n\n\n<div class=\"wp-block-image is-style-default\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"1024\" height=\"317\" src=\"https://www.scaler.com/topics/media/Passing-Array-to-Function-in-C-and-C-1024x317.jpeg\" alt=\"Passing Array to Function in C and C++\" class=\"wp-image-1381\" title=\"Passing Array to Function in C and C++\" srcset=\"https://www.scaler.com/topics/media/Passing-Array-to-Function-in-C-and-C-1024x317.jpeg 1024w, https://www.scaler.com/topics/media/Passing-Array-to-Function-in-C-and-C-300x93.jpeg 300w, https://www.scaler.com/topics/media/Passing-Array-to-Function-in-C-and-C-768x238.jpeg 768w, https://www.scaler.com/topics/media/Passing-Array-to-Function-in-C-and-C.jpeg 1261w\" sizes=\"(max-width: 1024px) 100vw, 1024px\"></figure></div>\n\n\n\n<p><span style=\"font-weight: 400;\">There are mainly 3 ways to pass array to a function in C/C++</span></p>\n\n\n\n<h3 id=\"--1-formal-parameter-as-a-pointers--\"><b><strong>1. Formal parameter as a pointers:</strong></b></h3>\n\n\n\n<p><span style=\"font-weight: 400;\">In this approach, the function call accepts an address of an array and access using a pointer as an argument to a function call. The below snippet shows such a function.</span></p>\n\n\n<div class=\"enlighter-default enlighter-v-standard enlighter-t-atomic enlighter-hover \"><div class=\"enlighter-toolbar-top enlighter-toolbar\"><div class=\"enlighter-btn enlighter-btn-raw\" title=\"Plain text\"></div><div class=\"enlighter-btn enlighter-btn-copy\" title=\"Copy to clipboard\"></div><div class=\"enlighter-btn enlighter-btn-window\" title=\"Open code in new window\"></div><div class=\"enlighter-btn enlighter-btn-website\" title=\"EnlighterJS 3 Syntax Highlighter\"></div></div><div class=\"enlighter\" style=\"\"><div class=\"\"><div><span class=\"enlighter-c0\">//1. Formal parameters as pointers</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">return_type </span><span class=\"enlighter-m0\">functionName</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">type *array_name</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span><span class=\"enlighter-c0\"> // Function Definition</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">}</span></div></div></div><div class=\"enlighter-raw\">//1. Formal parameters as pointers\nreturn_type functionName(type *array_name) {\n  // Function Definition\n}</div><div class=\"enlighter-toolbar-bottom enlighter-toolbar\"></div></div><pre class=\"EnlighterJSRAW enlighter-origin\" data-enlighter-language=\"cpp\" data-enlighter-theme=\"atomic\" data-enlighter-linenumbers=\"false\">//1. Formal parameters as pointers\nreturn_type functionName(type *array_name) {\n  // Function Definition\n}</pre>\n\n\n<p><span style=\"font-weight: 400;\">Here, </span><b>return_type</b><span style=\"font-weight: 400;\"> represents the return type of a function and, </span><b>type</b><span style=\"font-weight: 400;\"> represents the basic or user defined data types.</span></p>\n\n\n\n<h3 id=\"--2-formal-parameter-as-sized-array--\"><b><strong>2. Formal parameter as sized array:</strong></b></h3>\n\n\n\n<p><span style=\"font-weight: 400;\">In this approach the function call accepts an address of an array and access using a pointer with a subscript notation “</span><b>[ array_size ]” </b><span style=\"font-weight: 400;\">as an argument to a function call. The below snippet shows such a function.</span></p>\n\n\n<div class=\"enlighter-default enlighter-v-standard enlighter-t-atomic enlighter-hover \"><div class=\"enlighter-toolbar-top enlighter-toolbar\"><div class=\"enlighter-btn enlighter-btn-raw\" title=\"Plain text\"></div><div class=\"enlighter-btn enlighter-btn-copy\" title=\"Copy to clipboard\"></div><div class=\"enlighter-btn enlighter-btn-window\" title=\"Open code in new window\"></div><div class=\"enlighter-btn enlighter-btn-website\" title=\"EnlighterJS 3 Syntax Highlighter\"></div></div><div class=\"enlighter\" style=\"\"><div class=\"\"><div><span class=\"enlighter-c0\">// 2. Formal parameters as sized array</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">return_type </span><span class=\"enlighter-m0\">functionName</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">type array_name</span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">SIZE</span><span class=\"enlighter-g1\">])</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span><span class=\"enlighter-c0\"> // Function Definition</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">}</span></div></div></div><div class=\"enlighter-raw\">// 2. Formal parameters as sized array\nreturn_type functionName(type array_name[SIZE]) {\n  // Function Definition\n}</div><div class=\"enlighter-toolbar-bottom enlighter-toolbar\"></div></div><pre class=\"EnlighterJSRAW enlighter-origin\" data-enlighter-language=\"cpp\" data-enlighter-theme=\"atomic\" data-enlighter-linenumbers=\"false\">// 2. Formal parameters as sized array\nreturn_type functionName(type array_name[SIZE]) {\n  // Function Definition\n}</pre>\n\n\n<p><span style=\"font-weight: 400;\">Here, </span><b>return_type</b><span style=\"font-weight: 400;\"> represents the return type of a function and, </span><b>type</b><span style=\"font-weight: 400;\"> represents the basic or user defined data types. </span><b>SIZE </b><span style=\"font-weight: 400;\">represents the size of an array.</span></p>\n\n\n\n<h3 id=\"--3-formal-parameter-as-unsized-array--\"><b><strong>3. Formal parameter as unsized array:</strong></b></h3>\n\n\n\n<p><span style=\"font-weight: 400;\">In this approach the function call accepts an address of an array and access using a pointer with a blank subscript notation </span><b>[ ] </b><span style=\"font-weight: 400;\">as an argument to a function call. It is a most widely used method while working with arrays. The below snippet shows such a function.</span></p>\n\n\n<div class=\"enlighter-default enlighter-v-standard enlighter-t-atomic enlighter-hover \"><div class=\"enlighter-toolbar-top enlighter-toolbar\"><div class=\"enlighter-btn enlighter-btn-raw\" title=\"Plain text\"></div><div class=\"enlighter-btn enlighter-btn-copy\" title=\"Copy to clipboard\"></div><div class=\"enlighter-btn enlighter-btn-window\" title=\"Open code in new window\"></div><div class=\"enlighter-btn enlighter-btn-website\" title=\"EnlighterJS 3 Syntax Highlighter\"></div></div><div class=\"enlighter\" style=\"\"><div class=\"\"><div><span class=\"enlighter-c0\">// 3. Formal parameters as unsized array</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">return_type </span><span class=\"enlighter-m0\">functionName</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\"> type array_name</span><span class=\"enlighter-g1\">[]</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span><span class=\"enlighter-c0\"> // Function Definition</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">}</span></div></div></div><div class=\"enlighter-raw\">// 3. Formal parameters as unsized array\nreturn_type functionName( type array_name[] ) {\n  // Function Definition\n}</div><div class=\"enlighter-toolbar-bottom enlighter-toolbar\"></div></div><pre class=\"EnlighterJSRAW enlighter-origin\" data-enlighter-language=\"cpp\" data-enlighter-theme=\"atomic\" data-enlighter-linenumbers=\"false\">// 3. Formal parameters as unsized array\nreturn_type functionName( type array_name[] ) {\n  // Function Definition\n}</pre>\n\n\n<p><span style=\"font-weight: 400;\">Here, </span><b>return_type</b><span style=\"font-weight: 400;\"> represents the return type of a function and, </span><b>type</b><span style=\"font-weight: 400;\"> represents the basic or user defined data types.</span></p>\n\n\n\n<p><span style=\"font-weight: 400;\">Now lets understand all the above types by using a simple program. We will try to calculate the total marks of students as we have seen earlier, but this time using the functions.</span></p>\n\n\n<div class=\"enlighter-default enlighter-v-standard enlighter-t-atomic enlighter-hover \"><div class=\"enlighter-toolbar-top enlighter-toolbar\"><div class=\"enlighter-btn enlighter-btn-raw\" title=\"Plain text\"></div><div class=\"enlighter-btn enlighter-btn-copy\" title=\"Copy to clipboard\"></div><div class=\"enlighter-btn enlighter-btn-window\" title=\"Open code in new window\"></div><div class=\"enlighter-btn enlighter-btn-website\" title=\"EnlighterJS 3 Syntax Highlighter\"></div></div><div class=\"enlighter\" style=\"\"><div class=\"\"><div><span class=\"enlighter-k4\">#include &lt;stdio.h&gt; </span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span><span class=\"enlighter-c0\"></span></div></div><div class=\"\"><div><span class=\"enlighter-c0\">// 1. Formal parameters as pointers</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">calculateSum_type1</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> *arr, </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> size </span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> i;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> sum = 0;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-c0\"> // traversing through the array</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-k1\">for</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">i = 0; i </span><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-text\"> size; ++i</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">      sum += arr</span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">i</span><span class=\"enlighter-g1\">]</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-c0\"> // return final value</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-k0\">return</span><span class=\"enlighter-text\"> sum;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span><span class=\"enlighter-c0\"></span></div></div><div class=\"\"><div><span class=\"enlighter-c0\">// 2. Formal parameters as sized array</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">calculateSum_type2</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> arr</span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">10</span><span class=\"enlighter-g1\">]</span><span class=\"enlighter-text\">, </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> size </span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> i;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> sum = 0;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-c0\"> // traversing through the array</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-k1\">for</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">i = 0; i </span><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-text\"> size; ++i</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">      sum += arr</span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">i</span><span class=\"enlighter-g1\">]</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-c0\"> // return final value</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-k0\">return</span><span class=\"enlighter-text\"> sum;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-c0\"></span></div></div><div class=\"\"><div><span class=\"enlighter-c0\">//3. Formal parameters as unsized array</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">calculateSum_type3</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> arr</span><span class=\"enlighter-g1\">[]</span><span class=\"enlighter-text\">, </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> size </span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> i;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> sum = 0;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-c0\"> // traversing through the array</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-k1\">for</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">i = 0; i </span><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-text\"> size; ++i</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">      sum += arr</span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">i</span><span class=\"enlighter-g1\">]</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-c0\"> // return final value</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-k0\">return</span><span class=\"enlighter-text\"> sum;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">main</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">()</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-c0\"> // declaration and initialization of array “marks”</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> marks</span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">10</span><span class=\"enlighter-g1\">]</span><span class=\"enlighter-text\"> = </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\">10, 20, 30, 17, 5, 20, 15, 45, 77, 38</span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> sum=0;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-m0\">printf</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-s0\">\"Total marks of students is: %d \"</span><span class=\"enlighter-text\">, </span><span class=\"enlighter-m0\">calculateSum_type1</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">marks, 10</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-m0\">printf</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-s0\">\"Total marks of students is: %d \"</span><span class=\"enlighter-text\">, </span><span class=\"enlighter-m0\">calculateSum_type2</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">marks, 10</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-m0\">printf</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-s0\">\"Total marks of students is: %d \"</span><span class=\"enlighter-text\">, </span><span class=\"enlighter-m0\">calculateSum_type3</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">marks, 10</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-k0\">return</span><span class=\"enlighter-text\"> 0;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">}</span></div></div></div><div class=\"enlighter-raw\">#include &lt;stdio.h&gt; \n \n// 1. Formal parameters as pointers\nint calculateSum_type1( int *arr, int size ) {\n   int i;\n   int sum = 0;\n   // traversing through the array\n   for (i = 0; i &lt; size; ++i) {\n      sum += arr[i];\n   }\n   // return final value\n   return sum;\n}\n \n// 2. Formal parameters as sized array\nint calculateSum_type2( int arr[10], int size ) {\n   int i;\n   int sum = 0;\n   // traversing through the array\n   for (i = 0; i &lt; size; ++i) {\n      sum += arr[i];\n   }\n   // return final value\n   return sum;\n}\n//3. Formal parameters as unsized array\nint calculateSum_type3( int arr[], int size ) {\n   int i;\n   int sum = 0;\n   // traversing through the array\n   for (i = 0; i &lt; size; ++i) {\n      sum += arr[i];\n   }\n   // return final value\n   return sum;\n}\nint main () {\n   // declaration and initialization of array “marks”\n   int marks[10] = {10, 20, 30, 17, 5, 20, 15, 45, 77, 38};\n   int sum=0;\n   printf( \"Total marks of students is: %d \", calculateSum_type1(marks, 10) );\n   printf( \"Total marks of students is: %d \", calculateSum_type2(marks, 10) );\n   printf( \"Total marks of students is: %d \", calculateSum_type3(marks, 10) );\n   return 0;\n}</div><div class=\"enlighter-toolbar-bottom enlighter-toolbar\"></div></div><pre class=\"EnlighterJSRAW enlighter-origin\" data-enlighter-language=\"cpp\" data-enlighter-theme=\"atomic\" data-enlighter-linenumbers=\"false\">#include &lt;stdio.h&gt; \n \n// 1. Formal parameters as pointers\nint calculateSum_type1( int *arr, int size ) {\n   int i;\n   int sum = 0;\n   // traversing through the array\n   for (i = 0; i &lt; size; ++i) {\n      sum += arr[i];\n   }\n   // return final value\n   return sum;\n}\n \n// 2. Formal parameters as sized array\nint calculateSum_type2( int arr[10], int size ) {\n   int i;\n   int sum = 0;\n   // traversing through the array\n   for (i = 0; i &lt; size; ++i) {\n      sum += arr[i];\n   }\n   // return final value\n   return sum;\n}\n//3. Formal parameters as unsized array\nint calculateSum_type3( int arr[], int size ) {\n   int i;\n   int sum = 0;\n   // traversing through the array\n   for (i = 0; i &lt; size; ++i) {\n      sum += arr[i];\n   }\n   // return final value\n   return sum;\n}\nint main () {\n   // declaration and initialization of array “marks”\n   int marks[10] = {10, 20, 30, 17, 5, 20, 15, 45, 77, 38};\n   int sum=0;\n   printf( \"Total marks of students is: %d \", calculateSum_type1(marks, 10) );\n   printf( \"Total marks of students is: %d \", calculateSum_type2(marks, 10) );\n   printf( \"Total marks of students is: %d \", calculateSum_type3(marks, 10) );\n   return 0;\n}</pre>\n\n\n<h2 id=\"passing-multidimensional-array-to-a-function-in-cc\">Passing Multidimensional Array to a Function in C/C++</h2>\n\n\n\n<p><span style=\"font-weight: 400;\">Just like single-dimensional</span> arrays,<span style=\"font-weight: 400;\"> we can also pass multi-dimensional arrays to the function as arguments. The only thing that we have to take care of is the indexes at a time of dealing with multi-dimensional arrays.</span></p>\n\n\n\n<p><span style=\"font-weight: 400;\">The below simple program shows how to pass and handle the multi-dimensional array in C/C++.</span></p>\n\n\n<div class=\"enlighter-default enlighter-v-standard enlighter-t-atomic enlighter-hover \"><div class=\"enlighter-toolbar-top enlighter-toolbar\"><div class=\"enlighter-btn enlighter-btn-raw\" title=\"Plain text\"></div><div class=\"enlighter-btn enlighter-btn-copy\" title=\"Copy to clipboard\"></div><div class=\"enlighter-btn enlighter-btn-window\" title=\"Open code in new window\"></div><div class=\"enlighter-btn enlighter-btn-website\" title=\"EnlighterJS 3 Syntax Highlighter\"></div></div><div class=\"enlighter\" style=\"\"><div class=\"\"><div><span class=\"enlighter-k4\">#include &lt;stdio.h&gt; </span><span class=\"enlighter-c0\"></span></div></div><div class=\"\"><div><span class=\"enlighter-c0\">// Formal parameters as pointers</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">calculateSum_type</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> *arr, </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> row, </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> col</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> i, j;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> sum = 0;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-c0\"> // traversing through the 2-D array</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-k1\">for</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">i = 0; i </span><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-text\"> row; i++</span><span class=\"enlighter-g1\">){</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">      </span><span class=\"enlighter-k1\">for</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">j = 0; j </span><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-text\"> col; j++</span><span class=\"enlighter-g1\">){</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">        sum += *</span><span class=\"enlighter-g1\">((</span><span class=\"enlighter-text\">arr+i*col</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"> + j</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;   </span><span class=\"enlighter-c0\"> // accessing value from the address</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">      </span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-k0\">return</span><span class=\"enlighter-text\"> sum;  </span><span class=\"enlighter-c0\"> // return final value</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">main</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">()</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-c0\"> // declaration and initialization of array “marks”</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> marks</span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">2</span><span class=\"enlighter-g1\">][</span><span class=\"enlighter-text\">3</span><span class=\"enlighter-g1\">]</span><span class=\"enlighter-text\"> = </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\">10, 20, 30</span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\">, </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"> 17, 5, 20</span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-m0\">printf</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-s0\">\"Total marks of students is: %d \"</span><span class=\"enlighter-text\">, </span><span class=\"enlighter-m0\">calculateSum_type</span><span class=\"enlighter-g1\">((</span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> *</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">marks, 2, 3</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-k0\">return</span><span class=\"enlighter-text\"> 0;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">}</span></div></div></div><div class=\"enlighter-raw\">#include &lt;stdio.h&gt; \n// Formal parameters as pointers\nint calculateSum_type( int *arr, int row, int col) {\n   int i, j;\n   int sum = 0;\n   // traversing through the 2-D array\n   for (i = 0; i &lt; row; i++){\n      for (j = 0; j &lt; col; j++){\n        sum += *((arr+i*col) + j);    // accessing value from the address\n      }\n   }\n   return sum;   // return final value\n}\nint main () {\n   // declaration and initialization of array “marks”\n   int marks[2][3] = { {10, 20, 30}, { 17, 5, 20} };\n   printf( \"Total marks of students is: %d \", calculateSum_type((int *)marks, 2, 3) );\n   return 0;\n}</div><div class=\"enlighter-toolbar-bottom enlighter-toolbar\"></div></div><pre class=\"EnlighterJSRAW enlighter-origin\" data-enlighter-language=\"cpp\" data-enlighter-theme=\"atomic\" data-enlighter-linenumbers=\"false\">#include &lt;stdio.h&gt; \n// Formal parameters as pointers\nint calculateSum_type( int *arr, int row, int col) {\n   int i, j;\n   int sum = 0;\n   // traversing through the 2-D array\n   for (i = 0; i &lt; row; i++){\n      for (j = 0; j &lt; col; j++){\n        sum += *((arr+i*col) + j);    // accessing value from the address\n      }\n   }\n   return sum;   // return final value\n}\nint main () {\n   // declaration and initialization of array “marks”\n   int marks[2][3] = { {10, 20, 30}, { 17, 5, 20} };\n   printf( \"Total marks of students is: %d \", calculateSum_type((int *)marks, 2, 3) );\n   return 0;\n}</pre>\n\n\n<h2 id=\"call-by-value-amp-call-by-reference\">Call By Value &amp; Call By Reference</h2>\n\n\n\n<p><span style=\"font-weight: 400;\">In C/C++ whenever we pass an array as a function argument, then it is always treated as a pointer by a function. Whereas the normal variables are treated as independent values or as a pointer depending upon the implementation. While programming functions can be invoked mostly in two ways </span><b>Call-By-Value </b><span style=\"font-weight: 400;\">and </span><b>Call-By-Reference </b><span style=\"font-weight: 400;\">based on the use-cases.</span></p>\n\n\n\n<h3 id=\"1-call-by-reference\">1. Call-By-Reference:</h3>\n\n\n\n<p><span style=\"font-weight: 400;\">It copies the address of an argument into the formal parameter of that function. In this method, the address is used to access the actual argument used in the function call. It means that changes made in the parameter will alter the passing argument.</span></p>\n\n\n\n<p><span style=\"font-weight: 400;\">The ways to pass an array to a function that we have already studied are all call-by-reference methods as the function arguments(arrays in our case) are treated as pointers by a function. Hence the changes made in the function will impact the original values of arrays that are passed as function arguments.</span></p>\n\n\n\n<h3 id=\"2-call-by-value\">2. Call-By-Value:</h3>\n\n\n\n<p><span style=\"font-weight: 400;\">It copies the value of an argument into the formal parameter of that function. Hence, changes made to the parameter of the main function do not affect the original values that are passed as arguments.</span></p>\n\n\n\n<p><span style=\"font-weight: 400;\">In order to pass an array as call by value we have to wrap the array inside a structure and have to assign the values to that array using an object of that structure. This will help us create a new copy of the array that we are passing as an argument to a function.</span></p>\n\n\n\n<p><span style=\"font-weight: 400;\">Lets understand this with a simple example.</span></p>\n\n\n\n<ol><li><span style=\"font-weight: 400;\">Create a structure which will act as an wrapper and will declare an array inside it.</span></li><li><span style=\"font-weight: 400;\">Assign the values to the array declared inside a structure using the object of a structure.</span></li><li><span style=\"font-weight: 400;\">Pass the address of the object to the function call so as to pass the complete array to a function.</span></li></ol>\n\n\n<div class=\"enlighter-default enlighter-v-standard enlighter-t-atomic enlighter-hover \"><div class=\"enlighter-toolbar-top enlighter-toolbar\"><div class=\"enlighter-btn enlighter-btn-raw\" title=\"Plain text\"></div><div class=\"enlighter-btn enlighter-btn-copy\" title=\"Copy to clipboard\"></div><div class=\"enlighter-btn enlighter-btn-window\" title=\"Open code in new window\"></div><div class=\"enlighter-btn enlighter-btn-website\" title=\"EnlighterJS 3 Syntax Highlighter\"></div></div><div class=\"enlighter\" style=\"\"><div class=\"\"><div><span class=\"enlighter-c0\">// Passing an array by value to function using structures.</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-k4\">#include&lt;stdio.h&gt;</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-k4\">#include&lt;stdlib.h&gt;</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-k4\"># define N 5</span><span class=\"enlighter-c0\"></span></div></div><div class=\"\"><div><span class=\"enlighter-c0\">// Wrapper for array</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-k2\">struct</span><span class=\"enlighter-text\"> Wrapper</span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> arr</span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">N</span><span class=\"enlighter-g1\">]</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-c0\"></span></div></div><div class=\"\"><div><span class=\"enlighter-c0\">// Array is passed by value wrapped in tmp</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-k5\">void</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">compute</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-k2\">struct</span><span class=\"enlighter-text\"> Wrapper tmp</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> *ptr = tmp.</span><span class=\"enlighter-m3\">arr</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> i;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-c0\"> // Printing original array values</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-m0\">printf</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-s0\">\"Values before modification \\n\"</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k1\">for</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">i = 0; i </span><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-text\"> N; ++i</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">        </span><span class=\"enlighter-m0\">printf</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-s0\">\"%d \"</span><span class=\"enlighter-text\">, ptr</span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">i</span><span class=\"enlighter-g1\">])</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-c0\"> // Modifying the values</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k1\">for</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">i = 0; i </span><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-text\"> N; ++i</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">        ptr</span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">i</span><span class=\"enlighter-g1\">]</span><span class=\"enlighter-text\"> = 100;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-m0\">printf</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-s0\">\"\\n\\nValues after modification \\n\"</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k1\">for</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">i = 0; i </span><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-text\"> N; ++i</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">        </span><span class=\"enlighter-m0\">printf</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-s0\">\"%d \"</span><span class=\"enlighter-text\">, ptr</span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">i</span><span class=\"enlighter-g1\">])</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">main</span><span class=\"enlighter-g1\">()</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> i;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k2\">struct</span><span class=\"enlighter-text\"> Wrapper obj;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-c0\"> // assigning values to a array</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k1\">for</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">i=0; i</span><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-text\">N; i++</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">        obj.</span><span class=\"enlighter-m3\">arr</span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">i</span><span class=\"enlighter-g1\">]</span><span class=\"enlighter-text\"> = 10;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-c0\"> // function call</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-m0\">compute</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">obj</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-c0\"> // Display array contents</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-m0\">printf</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-s0\">\"\\n\\nValues after calling function \\n\"</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k1\">for</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">i = 0; i </span><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-text\"> N; ++i</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">        </span><span class=\"enlighter-m0\">printf</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-s0\">\"%d \"</span><span class=\"enlighter-text\">, obj.</span><span class=\"enlighter-m3\">arr</span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">i</span><span class=\"enlighter-g1\">])</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-m0\">printf</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-s0\">\"\\n\"</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k0\">return</span><span class=\"enlighter-text\"> 0;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">}</span></div></div></div><div class=\"enlighter-raw\">// Passing an array by value to function using structures.\n#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\n# define N 5\n// Wrapper for array\nstruct Wrapper{\n    int arr[N];\n};\n  \n// Array is passed by value wrapped in tmp\nvoid compute(struct Wrapper tmp)\n{\n    int *ptr = tmp.arr;\n    int i;\n    // Printing original array values\n    printf(\"Values before modification \\n\");\n    for (i = 0; i &lt; N; ++i)\n        printf(\"%d \", ptr[i]);\n  \n    // Modifying the values\n    for (i = 0; i &lt; N; ++i)\n        ptr[i] = 100;\n  \n    printf(\"\\n\\nValues after modification \\n\");\n    for (i = 0; i &lt; N; ++i)\n        printf(\"%d \", ptr[i]);\n}\n \nint main()\n{\n    int i;\n    struct Wrapper obj;\n    // assigning values to a array\n    for (i=0; i&lt;N; i++)\n        obj.arr[i] = 10;\n    // function call\n    compute(obj);\n    // Display array contents\n    printf(\"\\n\\nValues after calling function \\n\");\n    for (i = 0; i &lt; N; ++i)\n        printf(\"%d \", obj.arr[i]);\n  \n    printf(\"\\n\");\n  \n    return 0;\n}</div><div class=\"enlighter-toolbar-bottom enlighter-toolbar\"></div></div><pre class=\"EnlighterJSRAW enlighter-origin\" data-enlighter-language=\"cpp\" data-enlighter-theme=\"atomic\" data-enlighter-linenumbers=\"false\">// Passing an array by value to function using structures.\n#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\n# define N 5\n// Wrapper for array\nstruct Wrapper{\n    int arr[N];\n};\n  \n// Array is passed by value wrapped in tmp\nvoid compute(struct Wrapper tmp)\n{\n    int *ptr = tmp.arr;\n    int i;\n    // Printing original array values\n    printf(\"Values before modification \\n\");\n    for (i = 0; i &lt; N; ++i)\n        printf(\"%d \", ptr[i]);\n  \n    // Modifying the values\n    for (i = 0; i &lt; N; ++i)\n        ptr[i] = 100;\n  \n    printf(\"\\n\\nValues after modification \\n\");\n    for (i = 0; i &lt; N; ++i)\n        printf(\"%d \", ptr[i]);\n}\n \nint main()\n{\n    int i;\n    struct Wrapper obj;\n    // assigning values to a array\n    for (i=0; i&lt;N; i++)\n        obj.arr[i] = 10;\n    // function call\n    compute(obj);\n    // Display array contents\n    printf(\"\\n\\nValues after calling function \\n\");\n    for (i = 0; i &lt; N; ++i)\n        printf(\"%d \", obj.arr[i]);\n  \n    printf(\"\\n\");\n  \n    return 0;\n}</pre>\n\n\n<h2 id=\"returning-array-from-the-function-in-cc\">Returning Array From the Function in C/C++</h2>\n\n\n\n<p><span style=\"font-weight: 400;\">We know that a function can not return more than one variable in C/C++. In some problems, we may need to return multiple values from a function, in such cases, an array could be returned from the function. To return an array from a function we have to return the pointer of a data type of the array. Lets try to implement this with a simple </span><b>sorting </b><span style=\"font-weight: 400;\">example.</span></p>\n\n\n\n<p><span style=\"font-weight: 400;\">The function call (</span><b>sort</b><span style=\"font-weight: 400;\">) accepts an array as an function argument and will return an array with the sorted values.&nbsp;</span></p>\n\n\n<div class=\"enlighter-default enlighter-v-standard enlighter-t-atomic enlighter-hover \"><div class=\"enlighter-toolbar-top enlighter-toolbar\"><div class=\"enlighter-btn enlighter-btn-raw\" title=\"Plain text\"></div><div class=\"enlighter-btn enlighter-btn-copy\" title=\"Copy to clipboard\"></div><div class=\"enlighter-btn enlighter-btn-window\" title=\"Open code in new window\"></div><div class=\"enlighter-btn enlighter-btn-website\" title=\"EnlighterJS 3 Syntax Highlighter\"></div></div><div class=\"enlighter\" style=\"\"><div class=\"\"><div><span class=\"enlighter-c0\">// Returning array from a function</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-k4\">#include&lt;stdio.h&gt;   </span><span class=\"enlighter-c0\"></span></div></div><div class=\"\"><div><span class=\"enlighter-c0\">// Function accepting a array as argument as returning sorted array</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\">* </span><span class=\"enlighter-m0\">sort</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> a</span><span class=\"enlighter-g1\">[]</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">  </span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\">  </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> i, j,tmp;     </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k1\">for</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">i = 0; i</span><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-text\">10; i++</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">    </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\">    </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">        </span><span class=\"enlighter-k1\">for</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">j = i+1; j</span><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-text\">10; j++</span><span class=\"enlighter-g1\">){</span><span class=\"enlighter-text\">    </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">            </span><span class=\"enlighter-k1\">if</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">a</span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">j</span><span class=\"enlighter-g1\">]</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-text\"> a</span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">i</span><span class=\"enlighter-g1\">]){</span><span class=\"enlighter-text\">    </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">                tmp = a</span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">i</span><span class=\"enlighter-g1\">]</span><span class=\"enlighter-text\">;    </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">                a</span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">i</span><span class=\"enlighter-g1\">]</span><span class=\"enlighter-text\"> = a</span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">j</span><span class=\"enlighter-g1\">]</span><span class=\"enlighter-text\">;    </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">                a</span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">j</span><span class=\"enlighter-g1\">]</span><span class=\"enlighter-text\"> = tmp;     </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">            </span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\">     </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">        </span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\">     </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\">     </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k0\">return</span><span class=\"enlighter-text\"> a;  </span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\">   </span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-k5\">void</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">main</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">()</span><span class=\"enlighter-text\">    </span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\">    </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> arr</span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">10</span><span class=\"enlighter-g1\">]</span><span class=\"enlighter-text\"> = </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"> 4, 3, 7, 12, 34, 76, 100, 76, 56, 1 </span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\">;   </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> i;  </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> *p = </span><span class=\"enlighter-m0\">sort</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">arr</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">; </span><span class=\"enlighter-c0\"> // calling function and storing returned array</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-m0\">printf</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-s0\">\"Sorted elements are \\n\"</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;  </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k1\">for</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">i=0;i</span><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-text\">10;i++</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">  </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\">  </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">        </span><span class=\"enlighter-m0\">printf</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-s0\">\"%d \"</span><span class=\"enlighter-text\">,*</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">p+i</span><span class=\"enlighter-g1\">))</span><span class=\"enlighter-text\">; </span><span class=\"enlighter-c0\"> // accessing values of array</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\">  </span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">}</span></div></div></div><div class=\"enlighter-raw\">// Returning array from a function\n#include&lt;stdio.h&gt;   \n// Function accepting a array as argument as returning sorted array\nint* sort( int a[] )  \n{  \n    int i, j,tmp;     \n    for(i = 0; i&lt;10; i++)    \n    {    \n        for(j = i+1; j&lt;10; j++){    \n            if(a[j] &lt; a[i]){    \n                tmp = a[i];    \n                a[i] = a[j];    \n                a[j] = tmp;     \n            }     \n        }     \n    }     \n    return a;  \n}   \n \nvoid main ()    \n{    \n    int arr[10] = { 4, 3, 7, 12, 34, 76, 100, 76, 56, 1 };   \n    int i;  \n    int *p = sort(arr);  // calling function and storing returned array\n    printf(\"Sorted elements are \\n\");  \n    for(i=0;i&lt;10;i++)  \n    {  \n        printf(\"%d \",*(p+i));  // accessing values of array\n    }  \n}</div><div class=\"enlighter-toolbar-bottom enlighter-toolbar\"></div></div><pre class=\"EnlighterJSRAW enlighter-origin\" data-enlighter-language=\"cpp\" data-enlighter-theme=\"atomic\" data-enlighter-linenumbers=\"false\">// Returning array from a function\n#include&lt;stdio.h&gt;   \n// Function accepting a array as argument as returning sorted array\nint* sort( int a[] )  \n{  \n    int i, j,tmp;     \n    for(i = 0; i&lt;10; i++)    \n    {    \n        for(j = i+1; j&lt;10; j++){    \n            if(a[j] &lt; a[i]){    \n                tmp = a[i];    \n                a[i] = a[j];    \n                a[j] = tmp;     \n            }     \n        }     \n    }     \n    return a;  \n}   \n \nvoid main ()    \n{    \n    int arr[10] = { 4, 3, 7, 12, 34, 76, 100, 76, 56, 1 };   \n    int i;  \n    int *p = sort(arr);  // calling function and storing returned array\n    printf(\"Sorted elements are \\n\");  \n    for(i=0;i&lt;10;i++)  \n    {  \n        printf(\"%d \",*(p+i));  // accessing values of array\n    }  \n}</pre>\n\n\n<h2 id=\"summary\">Summary</h2>\n\n\n\n<ol><li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">An array is a collection of homogeneous(same data-type) elements stored in a contiguous memory location and most widely used data structure in programming.</span></li><li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Arrays could be of </span><b>single-dimensional (1-D)</b><span style=\"font-weight: 400;\"> and </span><b>multi-dimensional (2-D/3-D/N-D)</b><span style=\"font-weight: 400;\">.</span></li><li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Arrays are declared and initialized before using them in a program.</span></li><li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">In C/C++ an array when passed as a function argument is always treated as a pointer by a function.&nbsp;</span></li><li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Ways to pass an array to a function in C/C++ </span><b>Formal parameters as pointers, Formal parameters as sized arrays, Formal parameters as unsized arrays.</b></li><li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Call-By-Value can be invoked using a wrapper of structure, where an array is wrapped inside a structure.</span></li><li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">It is possible to return an array from a function by changing return type of function to pointer of data type of the array.</span></li></ol>\n\n<!-- MOLONGUI AUTHORSHIP PLUGIN 4.3.3 -->\n<!-- https://www.molongui.com/authorship/ -->\n<div class=\"molongui-clearfix\"></div>\n<div id=\"mab-2399973195\" class=\"m-a-box \" data-plugin-release=\"4.3.3\" data-plugin-version=\"free\" data-box-layout=\"slim\" data-box-position=\"below\" data-multiauthor=\"false\" data-author-type=\"guest\" itemscope=\"\" itemtype=\"https://schema.org/Person\" style=\"width: 100%;            margin: 20px auto;\">\n\n\t\n    <div class=\"m-a-box-container\n                molongui-border-right-none molongui-border-left-none                molongui-border-style-solid                molongui-border-width-3-px\n                m-a-box-shadow-right\" style=\"border-color: #adadad;                background-color: #efefef;\">\n\n        <div class=\"m-a-box-tab m-a-box-content m-a-box-profile\" data-profile-layout=\"layout-1\" data-author-ref=\"guest-408\">\n            \n<div class=\"m-a-box-content-top\">\n\n\t\n</div><!-- End of .m-a-box-content-top -->\n\n<div class=\"m-a-box-content-middle\">\n\n    <!-- Author picture -->\n    \n\t<div class=\"m-a-box-item m-a-box-avatar \">\n\t\t                <span>\n                    <img alt=\"\" src=\"https://secure.gravatar.com/avatar/?s=150&amp;d=mp&amp;r=g\" srcset=\"https://secure.gravatar.com/avatar/?s=300&amp;d=mp&amp;r=g 2x\" class=\"avatar avatar-150 photo avatar-default m-radius-none molongui-border-style-solid molongui-border-width-2-px\" height=\"150\" width=\"150\" style=\"border-color:#bfbfbf;\" itemprop=\"image\" loading=\"lazy\">                </span>\n                \t</div>\n\n    <!-- Author social -->\n    \n    <!-- Author data -->\n    <div class=\"m-a-box-item m-a-box-data \">\n\n        <!-- Author name -->\n        \n<div class=\"m-a-box-title\">\n\t<h5 class=\"molongui-font-size-22-px\n\t        molongui-text-align-left                        molongui-text-case-none\" style=\"color: inherit\" itemprop=\"name\">\n                        <span class=\"molongui-font-size-22-px molongui-text-align-left\" style=\"color:inherit;\">\n\t\t\t        Abhishek Deshmukh                </span>\n\t            \t</h5>\n</div>\n        <!-- Author metadata -->\n        \n<div class=\"m-a-box-item m-a-box-meta\n            molongui-font-size-12-px\n            molongui-text-align-left                        molongui-text-case-none\" style=\"color: inherit\">\n\n    \n    \n    \n\t\n\t\n\t\n\t        \t\t<script type=\"text/javascript\" language=\"JavaScript\">\n\t\t\tif ( typeof window.ToggleAuthorshipData === 'undefined' )\n\t\t\t{\n\t\t\t\tfunction ToggleAuthorshipData(id, author)\n\t\t\t\t{\n\t\t\t\t\tvar box_selector = '#mab-' + id;\n                    var box = document.querySelector(box_selector);\n                    if ( box.getAttribute('data-multiauthor') ) box_selector = '#mab-' + id + ' [data-author-ref=\"' + author + '\"]';\n\t\t\t\t\tvar label = document.querySelector(box_selector + ' ' + '.m-a-box-data-toggle');\n\t\t\t\t\tlabel.innerHTML = ( label.text.trim() === \"+ posts\" ? \" <span class=\\\"m-a-box-string-bio\\\">Bio</span>\" : \" <span class=\\\"m-a-box-string-more-posts\\\">+ posts</span>\" );\n\t\t\t\t\tvar bio     = document.querySelector(box_selector + ' ' + '.m-a-box-bio');\n\t\t\t\t\tvar related = document.querySelector(box_selector + ' ' + '.m-a-box-related-entries');\n\n\t\t\t\t\tif ( related.style.display === \"none\" )\n\t\t\t\t\t{\n\t\t\t\t\t\trelated.style.display = \"block\";\n\t\t\t\t\t\tbio.style.display     = \"none\";\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\trelated.style.display = \"none\";\n\t\t\t\t\t\tbio.style.display     = \"block\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t</script>\n\t\t<a href=\"javascript:ToggleAuthorshipData(2399973195, 'guest-408')\" class=\"m-a-box-data-toggle\" style=\"color: inherit\" rel=\"nofollow\"> <span class=\"m-a-box-string-more-posts\">+ posts</span> </a>\n\t\n</div><!-- End of .m-a-box-meta -->\n\n        <!-- Author bio -->\n        \n<div class=\"m-a-box-bio\" itemprop=\"description\">\n\t<div class=\"molongui-font-size-14-px molongui-text-align-justify  molongui-line-height-10\" style=\"color: inherit\">\n\t    \t</div>\n</div>\n\n        \n            <!-- Author related posts -->\n            <div class=\"m-a-box-related\" data-related-layout=\"layout-1\">\n                <div class=\"m-a-box-item m-a-box-related-entries\" style=\"display: none;\">\n\n                                        <ul class=\"molongui-font-size-14-px \" style=\"color: inherit\">\n                            <li>\n        <div class=\"m-a-box-related-entry\" itemscope=\"\" itemtype=\"http://schema.org/CreativeWork\">\n            <div class=\"molongui-display-none\" itemprop=\"author\" itemscope=\"\" itemtype=\"http://schema.org/Person\">\n                <div itemprop=\"name\">Abhishek Deshmukh</div>\n                <div itemprop=\"url\">#molongui-disabled-link</div>\n            </div>\n            <div class=\"m-a-box-related-entry-title\">\n                <i class=\"m-a-icon-doc\"></i>\n                <a class=\"molongui-remove-text-underline\" itemprop=\"url\" href=\"https://www.scaler.com/topics/boolean-in-c/\">\n                    <span itemprop=\"headline\">Boolean in C</span>\n                </a>\n            </div>\n        </div>\n    </li>\n        <li>\n        <div class=\"m-a-box-related-entry\" itemscope=\"\" itemtype=\"http://schema.org/CreativeWork\">\n            <div class=\"molongui-display-none\" itemprop=\"author\" itemscope=\"\" itemtype=\"http://schema.org/Person\">\n                <div itemprop=\"name\">Abhishek Deshmukh</div>\n                <div itemprop=\"url\">#molongui-disabled-link</div>\n            </div>\n            <div class=\"m-a-box-related-entry-title\">\n                <i class=\"m-a-icon-doc\"></i>\n                <a class=\"molongui-remove-text-underline\" itemprop=\"url\" href=\"https://www.scaler.com/topics/convert-decimal-to-binary-in-python/\">\n                    <span itemprop=\"headline\">Convert Decimal to Binary in Python</span>\n                </a>\n            </div>\n        </div>\n    </li>\n                        </ul>\n\n                </div><!-- End of .m-a-box-related-entries -->\n            </div><!-- End of .m-a-box-related -->\n\n        \n    </div><!-- End of .m-a-box-data -->\n\n</div><!-- End of .m-a-box-content-middle -->\n\n<div class=\"m-a-box-content-bottom\"></div><!-- End of .m-a-box-content-bottom -->        </div><!-- End of .m-a-box-profile -->\n\n        \n    </div><!-- End of .m-a-box-container -->\n\n\t\n</div><!-- End of .m-a-box -->\t</div><!-- .entry-content -->\n\t</div>\n\t<footer class=\"entry-footer\">\n\t\t<span class=\"cat-links\">Posted in <a href=\"https://www.scaler.com/topics/category/c/\" rel=\"category tag\">C</a>, <a href=\"https://www.scaler.com/topics/category/c-2/\" rel=\"category tag\">C++</a></span> | <span class=\"tags-links\">Tagged <a href=\"https://www.scaler.com/topics/tag/passing-array-in-c/\" rel=\"tag\">passing array in c</a>, <a href=\"https://www.scaler.com/topics/tag/passing-array-in-c-2/\" rel=\"tag\">passing array in c++</a></span>\t</footer><!-- .entry-footer -->\n</article><!-- #post-## -->\n\n\n\n\t<nav class=\"navigation post-navigation\" role=\"navigation\" aria-label=\"Posts\">\n\t\t<h2 class=\"screen-reader-text\">Post navigation</h2>\n\t\t<div class=\"nav-links\"><div class=\"nav-previous\"><a href=\"https://www.scaler.com/topics/transpose-of-a-matrix-in-c/\" rel=\"prev\">Transpose of a Matrix in C</a></div><div class=\"nav-next\"><a href=\"https://www.scaler.com/topics/list-to-array-in-java/\" rel=\"next\">List to Array in Java</a></div></div>\n\t</nav>\n<div id=\"comments\" class=\"comments-area\">\n\n    \n    \t<div id=\"respond\" class=\"comment-respond\">\n\t\t<h3 id=\"reply-title\" class=\"comment-reply-title\">Leave a Reply <small><a rel=\"nofollow\" id=\"cancel-comment-reply-link\" href=\"/topics/passing-array-to-function-in-c-cpp/#respond\" style=\"display:none;\">Cancel Reply</a></small></h3><p class=\"must-log-in\">You must be <a href=\"https://www.scaler.com/topics/wp-login.php?redirect_to=https%3A%2F%2Fwww.scaler.com%2Ftopics%2Fpassing-array-to-function-in-c-cpp%2F\">logged in</a> to post a comment.</p>\t</div><!-- #respond -->\n\t\n</div><!-- #comments -->\n\n\t\t</div><!-- #main -->\n\t</section><!-- #primary -->\n\n\t\t\t</div><!-- .row -->\n\t\t</div><!-- .container -->\n\t</div><!-- #content -->\n    \t<footer id=\"colophon\" class=\"site-footer navbar-light bg-light\" role=\"contentinfo\">\n\t\t<div class=\"container pt-3 pb-3\">\n            <div class=\"site-info text-center\">\n\t\t\t\tCopyright © 2021 InterviewBit Technologies Pte. Ltd. All Rights Reserved\n            </div><!-- close .site-info -->\n\t\t</div>\n\t</footer><!-- #colophon -->\n</div><!-- #page -->\n\n<script type=\"text/javascript\" id=\"molongui-authorship-js-extra\">\n/* <![CDATA[ */\nvar molongui_authorship = {\"byline_prefix\":\"\",\"byline_suffix\":\"\",\"byline_separator\":\", \",\"byline_last_separator\":\" and \",\"byline_link_title\":\"View all posts by\",\"byline_dom_tree\":\"\"};\n/* ]]> */\n</script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/plugins/molongui-authorship/public/js/molongui-authorship.5a1d.min.js?ver=4.3.3\" id=\"molongui-authorship-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/js/popper.min.js?ver=5.7.2\" id=\"wp-bootstrap-starter-popper-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/js/bootstrap.min.js?ver=5.7.2\" id=\"wp-bootstrap-starter-bootstrapjs-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/js/theme-script.min.js?ver=5.7.2\" id=\"wp-bootstrap-starter-themejs-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/js/skip-link-focus-fix.min.js?ver=20151215\" id=\"wp-bootstrap-starter-skip-link-focus-fix-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-includes/js/comment-reply.min.js?ver=5.7.2\" id=\"comment-reply-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/plugins/gutentoc-advance-table-of-content/dist/toc.js?ver=5.7.2\" id=\"gutentocjs-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/plugins/enlighter/cache/enlighterjs.min.js?ver=0UVtrfqVvCkLefk\" id=\"enlighterjs-js\"></script>\n<script type=\"text/javascript\" id=\"enlighterjs-js-after\">\n!function(e,n){if(\"undefined\"!=typeof EnlighterJS){var o={\"selectors\":{\"block\":\"pre.EnlighterJSRAW\",\"inline\":\"code.EnlighterJSRAW\"},\"options\":{\"indent\":2,\"ampersandCleanup\":true,\"linehover\":true,\"rawcodeDbclick\":false,\"textOverflow\":\"break\",\"linenumbers\":true,\"theme\":\"classic\",\"language\":\"generic\",\"retainCssClasses\":false,\"collapse\":false,\"toolbarOuter\":\"\",\"toolbarTop\":\"{BTN_RAW}{BTN_COPY}{BTN_WINDOW}{BTN_WEBSITE}\",\"toolbarBottom\":\"\"}};(e.EnlighterJSINIT=function(){EnlighterJS.init(o.selectors.block,o.selectors.inline,o.options)})()}else{(n&&(n.error||n.log)||function(){})(\"Error: EnlighterJS resources not loaded yet!\")}}(window,console);\n</script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-includes/js/wp-embed.min.js?ver=5.7.2\" id=\"wp-embed-js\"></script>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/css-element-queries@1.2.2/src/ResizeSensor.min.js?ver=1.2.2\" id=\"molongui-resizesensor-js\"></script>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/css-element-queries@1.2.2/src/ElementQueries.min.js?ver=1.2.2\" id=\"molongui-elementqueries-js\"></script>\n<script>\n\nfunction is_logged_in()\n{\n\nlet xhr = new XMLHttpRequest();\n\nxhr.open('GET', 'https://www.interviewbit.com/get_user_options/', false);\n\ntry {\n  xhr.send();\n  if (xhr.status != 200) {\n   console.log(`Error ${xhr.status}: ${xhr.statusText}`);\n  } else {\n\n  if(JSON.parse(xhr.response).logged_in == true){\n  return true;\n  }\n  else{\n  return false;\n  }\n     \n  }\n} catch(err) { // instead of onerror\n  console.log(\"Request failed\");\n}\n\t\n}\n\n\t\n</script>\n\n</body>", slug: 'hello-world')


Article.create(title: 'Transpose of a Matrix in C',content: "<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <link rel=\"profile\" href=\"http://gmpg.org/xfn/11\">\n\n<!-- Author Meta Tags by Molongui Authorship 4.3.3, visit: https://wordpress.org/plugins/molongui-authorship/ -->\n<meta name=\"author\" content=\"Kashish Garg\">\n<!-- /Molongui Authorship -->\n\n<title>Transpose of a Matrix in C Programming - Scaler Topics</title>\n\n<!-- The SEO Framework by Sybre Waaijer -->\n<meta name=\"robots\" content=\"max-snippet:-1,max-image-preview:standard,max-video-preview:-1\">\n<meta name=\"description\" content=\"In the article, learn what is the transpose of a matrix in C. Scaler Topics displays a simple algorithm with an example program to find the transpose of a matrix using C.\">\n<meta property=\"og:image\" content=\"https://www.scaler.com/topics/media/Transpose-of-matrix-using-C.png\">\n<meta property=\"og:image:width\" content=\"2134\">\n<meta property=\"og:image:height\" content=\"1042\">\n<meta property=\"og:image:alt\" content=\"Transpose of matrix using C\">\n<meta property=\"og:locale\" content=\"en_US\">\n<meta property=\"og:type\" content=\"article\">\n<meta property=\"og:title\" content=\"Transpose of a Matrix in C Programming - Scaler Topics\">\n<meta property=\"og:description\" content=\"In the article, learn what is the transpose of a matrix in C. Scaler Topics displays a simple algorithm with an example program to find the transpose of a matrix using C.\">\n<meta property=\"og:url\" content=\"https://www.scaler.com/topics/transpose-of-a-matrix-in-c/\">\n<meta property=\"og:site_name\" content=\"Scaler Topics\">\n<meta property=\"og:updated_time\" content=\"2021-07-22\">\n<meta property=\"article:published_time\" content=\"2021-07-21\">\n<meta property=\"article:modified_time\" content=\"2021-07-22\">\n<meta name=\"twitter:card\" content=\"summary_large_image\">\n<meta name=\"twitter:title\" content=\"Transpose of a Matrix in C Programming - Scaler Topics\">\n<meta name=\"twitter:description\" content=\"In the article, learn what is the transpose of a matrix in C. Scaler Topics displays a simple algorithm with an example program to find the transpose of a matrix using C.\">\n<meta name=\"twitter:image\" content=\"https://www.scaler.com/topics/media/Transpose-of-matrix-using-C.png\">\n<meta name=\"twitter:image:width\" content=\"2134\">\n<meta name=\"twitter:image:height\" content=\"1042\">\n<meta name=\"twitter:image:alt\" content=\"Transpose of matrix using C\">\n<link rel=\"canonical\" href=\"https://www.scaler.com/topics/transpose-of-a-matrix-in-c/\">\n<script type=\"text/javascript\" async=\"\" src=\"https://www.google-analytics.com/analytics.js\"></script><script type=\"application/ld+json\">{\"@context\":\"https://schema.org\",\"@type\":\"BreadcrumbList\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"item\":{\"@id\":\"https://www.scaler.com/topics/\",\"name\":\"Scaler Topics\"}},{\"@type\":\"ListItem\",\"position\":2,\"item\":{\"@id\":\"https://www.scaler.com/topics/category/c/\",\"name\":\"C\"}},{\"@type\":\"ListItem\",\"position\":3,\"item\":{\"@id\":\"https://www.scaler.com/topics/transpose-of-a-matrix-in-c/\",\"name\":\"Transpose of a Matrix in C Programming &#x2d; Scaler Topics\"}}]}</script>\n<meta name=\"p:domain_verify\" content=\"7e10627c0f88fb1a4f4c6ae8c0d34b16\">\n<!-- / The SEO Framework by Sybre Waaijer | 4.12ms meta | 0.36ms boot -->\n\n<link rel=\"dns-prefetch\" href=\"//fonts.googleapis.com\">\n<link rel=\"dns-prefetch\" href=\"//s.w.org\">\n<link rel=\"alternate\" type=\"application/rss+xml\" title=\"Scaler Topics » Feed\" href=\"https://www.scaler.com/topics/feed/\">\n<link rel=\"alternate\" type=\"application/rss+xml\" title=\"Scaler Topics » Comments Feed\" href=\"https://www.scaler.com/topics/comments/feed/\">\n<link rel=\"alternate\" type=\"application/rss+xml\" title=\"Scaler Topics » Transpose of a Matrix in C Comments Feed\" href=\"https://www.scaler.com/topics/transpose-of-a-matrix-in-c/feed/\">\n\t\t<script type=\"text/javascript\">\n\t\t\twindow._wpemojiSettings = {\"baseUrl\":\"https:\\/\\/s.w.org\\/images\\/core\\/emoji\\/13.0.1\\/72x72\\/\",\"ext\":\".png\",\"svgUrl\":\"https:\\/\\/s.w.org\\/images\\/core\\/emoji\\/13.0.1\\/svg\\/\",\"svgExt\":\".svg\",\"source\":{\"concatemoji\":\"https:\\/\\/www.scaler.com\\/topics\\/wp-includes\\/js\\/wp-emoji-release.min.js?ver=5.7.2\"}};\n\t\t\t!function(e,a,t){var n,r,o,i=a.createElement(\"canvas\"),p=i.getContext&&i.getContext(\"2d\");function s(e,t){var a=String.fromCharCode;p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,e),0,0);e=i.toDataURL();return p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,t),0,0),e===i.toDataURL()}function c(e){var t=a.createElement(\"script\");t.src=e,t.defer=t.type=\"text/javascript\",a.getElementsByTagName(\"head\")[0].appendChild(t)}for(o=Array(\"flag\",\"emoji\"),t.supports={everything:!0,everythingExceptFlag:!0},r=0;r<o.length;r++)t.supports[o[r]]=function(e){if(!p||!p.fillText)return!1;switch(p.textBaseline=\"top\",p.font=\"600 32px Arial\",e){case\"flag\":return s([127987,65039,8205,9895,65039],[127987,65039,8203,9895,65039])?!1:!s([55356,56826,55356,56819],[55356,56826,8203,55356,56819])&&!s([55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447],[55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447]);case\"emoji\":return!s([55357,56424,8205,55356,57212],[55357,56424,8203,55356,57212])}return!1}(o[r]),t.supports.everything=t.supports.everything&&t.supports[o[r]],\"flag\"!==o[r]&&(t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&t.supports[o[r]]);t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&!t.supports.flag,t.DOMReady=!1,t.readyCallback=function(){t.DOMReady=!0},t.supports.everything||(n=function(){t.readyCallback()},a.addEventListener?(a.addEventListener(\"DOMContentLoaded\",n,!1),e.addEventListener(\"load\",n,!1)):(e.attachEvent(\"onload\",n),a.attachEvent(\"onreadystatechange\",function(){\"complete\"===a.readyState&&t.readyCallback()})),(n=t.source||{}).concatemoji?c(n.concatemoji):n.wpemoji&&n.twemoji&&(c(n.twemoji),c(n.wpemoji)))}(window,document,window._wpemojiSettings);\n\t\t</script><script src=\"https://www.scaler.com/topics/wp-includes/js/wp-emoji-release.min.js?ver=5.7.2\" type=\"text/javascript\" defer=\"\"></script>\n\t\t<style type=\"text/css\">\nimg.wp-smiley,\nimg.emoji {\n\tdisplay: inline !important;\n\tborder: none !important;\n\tbox-shadow: none !important;\n\theight: 1em !important;\n\twidth: 1em !important;\n\tmargin: 0 .07em !important;\n\tvertical-align: -0.1em !important;\n\tbackground: none !important;\n\tpadding: 0 !important;\n}\n</style>\n\t<link rel=\"stylesheet\" id=\"wp-quicklatex-format-css\" href=\"https://www.scaler.com/topics/wp-content/plugins/wp-quicklatex/css/quicklatex-format.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-block-library-css\" href=\"https://www.scaler.com/topics/wp-includes/css/dist/block-library/style.min.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"gutentocwp-cgb-style-css-css\" href=\"https://www.scaler.com/topics/wp-content/plugins/gutentoc-advance-table-of-content/dist/blocks.style.build.css\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"child-theme-generator-css\" href=\"https://www.scaler.com/topics/wp-content/plugins/child-theme-generator/public/css/child-theme-generator-public.css?ver=1.0.0\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"molongui-authorship-css\" href=\"https://www.scaler.com/topics/wp-content/plugins/molongui-authorship/public/css/molongui-authorship.27a7.min.css?ver=4.3.3\" type=\"text/css\" media=\"all\">\n<style id=\"molongui-authorship-inline-css\" type=\"text/css\">\n:root{ --m-a-box-bp: 600px; --m-a-box-bp-l: 599px; }\n</style>\n<link rel=\"stylesheet\" id=\"parente2-style-css\" href=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/style.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"childe2-style-css\" href=\"https://www.scaler.com/topics/wp-content/themes/InterviewBit/style.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-bootstrap-starter-bootstrap-css-css\" href=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/css/bootstrap.min.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-bootstrap-starter-fontawesome-cdn-css\" href=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/css/fontawesome.min.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-bootstrap-starter-style-css\" href=\"https://www.scaler.com/topics/wp-content/themes/InterviewBit/style.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-bootstrap-starter-litera-css\" href=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/css/presets/theme-option/litera.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-bootstrap-starter-montserrat-opensans-font-css\" href=\"https://fonts.googleapis.com/css?family=Montserrat%7COpen+Sans%3A300%2C300i%2C400%2C400i%2C600%2C600i%2C700%2C800&amp;ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-bootstrap-starter-montserrat-opensans-css\" href=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/css/presets/typography/montserrat-opensans.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"enlighterjs-css\" href=\"https://www.scaler.com/topics/wp-content/plugins/enlighter/cache/enlighterjs.min.css?ver=0UVtrfqVvCkLefk\" type=\"text/css\" media=\"all\">\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-includes/js/jquery/jquery.min.js?ver=3.5.1\" id=\"jquery-core-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-includes/js/jquery/jquery-migrate.min.js?ver=3.3.2\" id=\"jquery-migrate-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/plugins/child-theme-generator/public/js/child-theme-generator-public.js?ver=1.0.0\" id=\"child-theme-generator-js\"></script>\n<!--[if lt IE 9]>\n<script type='text/javascript' src='https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/js/html5.js?ver=3.7.0' id='html5hiv-js'></script>\n<![endif]-->\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/plugins/wp-quicklatex/js/wp-quicklatex-frontend.js?ver=1.0\" id=\"wp-quicklatex-frontend-js\"></script>\n<link rel=\"https://api.w.org/\" href=\"https://www.scaler.com/topics/wp-json/\"><link rel=\"alternate\" type=\"application/json\" href=\"https://www.scaler.com/topics/wp-json/wp/v2/posts/76\"><link rel=\"EditURI\" type=\"application/rsd+xml\" title=\"RSD\" href=\"https://www.scaler.com/topics/xmlrpc.php?rsd\">\n<link rel=\"wlwmanifest\" type=\"application/wlwmanifest+xml\" href=\"https://www.scaler.com/topics/wp-includes/wlwmanifest.xml\"> \n<link rel=\"alternate\" type=\"application/json+oembed\" href=\"https://www.scaler.com/topics/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.scaler.com%2Ftopics%2Ftranspose-of-a-matrix-in-c%2F\">\n<link rel=\"alternate\" type=\"text/xml+oembed\" href=\"https://www.scaler.com/topics/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.scaler.com%2Ftopics%2Ftranspose-of-a-matrix-in-c%2F&amp;format=xml\">\n<link rel=\"pingback\" href=\"https://www.scaler.com/topics/xmlrpc.php\">    <style type=\"text/css\">\n        #page-sub-header { background: #fff; }\n    </style>\n    <link rel=\"icon\" href=\"https://www.scaler.com/topics/media/cropped-android-chrome-512x512-1-32x32.png\" sizes=\"32x32\">\n<link rel=\"icon\" href=\"https://www.scaler.com/topics/media/cropped-android-chrome-512x512-1-192x192.png\" sizes=\"192x192\">\n<link rel=\"apple-touch-icon\" href=\"https://www.scaler.com/topics/media/cropped-android-chrome-512x512-1-180x180.png\">\n<meta name=\"msapplication-TileImage\" content=\"https://www.scaler.com/topics/media/cropped-android-chrome-512x512-1-270x270.png\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\n<link href=\"https://fonts.googleapis.com/css2?family=Roboto&amp;display=swap\" rel=\"stylesheet\">\n\t<!-- Global site tag (gtag.js) - Google Analytics -->\n<script async=\"\" src=\"https://www.googletagmanager.com/gtag/js?id=UA-56207880-1\"></script>\n<script>\n  window.dataLayer = window.dataLayer || [];\n  function gtag(){dataLayer.push(arguments);}\n  gtag('js', new Date());\n\n  gtag('config', 'UA-56207880-1');\n</script>\n<style type=\"text/css\">[responsive-image] > img, [data-responsive-image] {overflow: hidden; padding: 0; } [responsive-image] > img, [data-responsive-image] > img {width: 100%;}\n@keyframes element-queries { 0% { visibility: inherit; } }</style></head>\n\n<body class=\"post-template-default single single-post postid-76 single-format-standard topics group-blog theme-preset-active\">\n\n\n<div id=\"page\" class=\"site\">\n\t<!-- #masthead -->\n    \t<div id=\"content\" class=\"site-content\">\n\t\t<div class=\"container\">\n\t\t\t<div class=\"row\">\n                \n\t<section id=\"primary\" class=\"content-area col-sm-12 col-lg-8 mx-auto\">\n\t\t<div id=\"main\" class=\"site-main\" role=\"main\">\n\n\t\t\n\n\n<article id=\"post-76\" class=\"post-76 post type-post status-publish format-standard has-post-thumbnail hentry category-c tag-c-program-for-transpose-of-matrix tag-transpose-of-a-matrix tag-transpose-of-a-matrix-in-c\">\n\t<div class=\"post-thumbnail mb-3\">\n\t\t<img width=\"2134\" height=\"1042\" src=\"https://www.scaler.com/topics/media/Transpose-of-matrix-using-C.png\" class=\"attachment-post-thumbnail size-post-thumbnail wp-post-image\" alt=\"Transpose of matrix using C\" loading=\"lazy\" srcset=\"https://www.scaler.com/topics/media/Transpose-of-matrix-using-C.png 2134w, https://www.scaler.com/topics/media/Transpose-of-matrix-using-C-300x146.png 300w, https://www.scaler.com/topics/media/Transpose-of-matrix-using-C-1024x500.png 1024w, https://www.scaler.com/topics/media/Transpose-of-matrix-using-C-768x375.png 768w, https://www.scaler.com/topics/media/Transpose-of-matrix-using-C-1536x750.png 1536w, https://www.scaler.com/topics/media/Transpose-of-matrix-using-C-2048x1000.png 2048w\" sizes=\"(max-width: 2134px) 100vw, 2134px\">\t</div>\n\t<div class=\"post-content-here\">\n\n\t<header class=\"entry-header\">\n\t\t<h1 class=\"entry-title\">Transpose of a Matrix in C</h1>\t\t<div class=\"entry-meta\">\n<!-- \t\t\t<span class=\"posted-on\">Posted on <a href=\"https://www.scaler.com/topics/transpose-of-a-matrix-in-c/\" rel=\"bookmark\"><time class=\"entry-date published\" datetime=\"2021-07-21T17:18:12+05:30\">July 21, 2021</time></a></span> | <span class=\"byline\"> by <span class=\"author vcard\"><a class=\"url fn n\" href=\"#molongui-disabled-link\">Kashish Garg</a></span></span> -->\n\t\t</div><!-- .entry-meta -->\n\t\t\t</header><!-- .entry-header -->\n\t<div class=\"entry-content\">\n\t\t\n<div class=\"gutentoc tocactive nostyle\"><div class=\"gutentoc-toc-wrap\"><div class=\"gutentoc-toc-title-wrap\"><div class=\"gutentoc-toc-title\">Table Of Contents</div><div id=\"open\" class=\"toggleone\">show</div></div><div id=\"toclist\"><div class=\"gutentoc-toc__list-wrap\"><ul class=\"gutentoc-toc__list\"><li><a href=\"#introduction\">Introduction</a></li><li><a href=\"#what-is-the-transpose-of-a-matrix-in-c\">What is the Transpose of a Matrix in C?</a></li><li><a href=\"#algorithm-for-finding-transpose-of-a-matrix-in-c\">Algorithm for Finding Transpose of a Matrix in C</a></li><li><a href=\"#c-program-to-find-the-transpose-of--a-matrix\">C Program to find the Transpose of&nbsp; a Matrix</a></li><li><a href=\"#-conclusion-\"><b>Conclusion</b></a></li></ul></div></div></div></div>\n\n\n\n<h2 id=\"introduction\">Introduction</h2>\n\n\n\n<p><span style=\"font-weight: 400;\">In this article, we will look at what is a transpose of a matrix and how we can find the transpose of a given matrix by following a simple algorithm. Later on, we’ll cover how to write a C program to find the transpose of a matrix.</span></p>\n\n\n\n<h2 id=\"what-is-the-transpose-of-a-matrix-in-c\">What is the Transpose of a Matrix in C?</h2>\n\n\n\n<p><span style=\"font-weight: 400;\">A transpose of a matrix is obtained by interchanging rows of the original matrix with columns and vice-versa. This could be imagined as if there are two matrices P and Q, such that rows of matrix Q are the columns of matrix P and columns of matrix Q are rows of matrix P, then it is said that the matrix Q is the transpose of matrix P.</span></p>\n\n\n\n<p><span style=\"font-weight: 400;\">This operation can be simply represented as follows:</span></p>\n\n\n<div class=\"enlighter-default enlighter-v-standard enlighter-t-atomic enlighter-hover \"><div class=\"enlighter-toolbar-top enlighter-toolbar\"><div class=\"enlighter-btn enlighter-btn-raw\" title=\"Plain text\"></div><div class=\"enlighter-btn enlighter-btn-copy\" title=\"Copy to clipboard\"></div><div class=\"enlighter-btn enlighter-btn-window\" title=\"Open code in new window\"></div><div class=\"enlighter-btn enlighter-btn-website\" title=\"EnlighterJS 3 Syntax Highlighter\"></div></div><div class=\"enlighter\" style=\"\"><div class=\"\"><div><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\"> P </span><span class=\"enlighter-g1\">]</span><span class=\"enlighter-text\">ij = </span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\"> Q </span><span class=\"enlighter-g1\">]</span><span class=\"enlighter-text\">ji</span></div></div></div><div class=\"enlighter-raw\">[ P ]ij = [ Q ]ji</div><div class=\"enlighter-toolbar-bottom enlighter-toolbar\"></div></div><pre class=\"EnlighterJSRAW enlighter-origin\" data-enlighter-language=\"c\" data-enlighter-theme=\"atomic\" data-enlighter-linenumbers=\"false\">[ P ]ij = [ Q ]ji</pre>\n\n\n<p><span style=\"font-weight: 400;\">where i and j represent the rows and columns respectively.</span></p>\n\n\n\n<p><b><strong>Example –</strong></b></p>\n\n\n\n<figure class=\"wp-block-gallery columns-1 is-cropped\"><ul class=\"blocks-gallery-grid\"><li class=\"blocks-gallery-item\"><figure><img loading=\"lazy\" width=\"981\" height=\"519\" src=\"https://www.scaler.com/topics/media/transpose-of-a-matrix-in-c.jpg\" alt=\"\" data-id=\"1356\" data-full-url=\"https://www.scaler.com/topics/media/transpose-of-a-matrix-in-c.jpg\" data-link=\"https://www.scaler.com/topics/?attachment_id=1356\" class=\"wp-image-1356\" srcset=\"https://www.scaler.com/topics/media/transpose-of-a-matrix-in-c.jpg 981w, https://www.scaler.com/topics/media/transpose-of-a-matrix-in-c-300x159.jpg 300w, https://www.scaler.com/topics/media/transpose-of-a-matrix-in-c-768x406.jpg 768w\" sizes=\"(max-width: 981px) 100vw, 981px\"></figure></li></ul></figure>\n\n\n\n<p><span style=\"font-weight: 400;\">In this example, the order of the matrix remains the same, since it is a square matrix. But, if the order of the original matrix is say 2×3 then the order of the transposed matrix would be 3×2, as shown in the figure below.</span></p>\n\n\n\n<figure class=\"wp-block-gallery columns-1 is-cropped\"><ul class=\"blocks-gallery-grid\"><li class=\"blocks-gallery-item\"><figure><img loading=\"lazy\" width=\"980\" height=\"442\" src=\"https://www.scaler.com/topics/media/transpose-of-a-matrix.jpg\" alt=\"transpose of a matrix in c\" data-id=\"1357\" data-full-url=\"https://www.scaler.com/topics/media/transpose-of-a-matrix.jpg\" data-link=\"https://www.scaler.com/topics/?attachment_id=1357\" class=\"wp-image-1357\" srcset=\"https://www.scaler.com/topics/media/transpose-of-a-matrix.jpg 980w, https://www.scaler.com/topics/media/transpose-of-a-matrix-300x135.jpg 300w, https://www.scaler.com/topics/media/transpose-of-a-matrix-768x346.jpg 768w\" sizes=\"(max-width: 980px) 100vw, 980px\"></figure></li></ul></figure>\n\n\n\n<p><span style=\"font-weight: 400;\">Now, before moving onto the program for finding the transpose of a matrix in C, let us first look at an algorithm to understand the approach to be followed.</span></p>\n\n\n\n<h2 id=\"algorithm-for-finding-transpose-of-a-matrix-in-c\">Algorithm for Finding Transpose of a Matrix in C</h2>\n\n\n\n<ol><li>Declare and initialize a 2-D array p[a][b] of order axb.<br></li><li>Read the matrix p[a][b] from the user.<br></li><li>Declare another 2-dimensional array <strong>t</strong> to store the transpose of the matrix. This array will have the reversed dimensions as of the original matrix.<br></li><li>The next step is to loop through the original array and to convert its rows to the columns of matrix <strong>t</strong>.<ul><li>Declare 2 variables i and j.</li><li>Set both i,j=0</li><li>Repeat until i&lt;b<ul><li>Repeat until j&lt;a<ul><li>t[i][j] = p[j][i]</li><li>j=j+1</li></ul></li></ul></li><li>i=i+1</li></ul></li></ol>\n\n\n\n<p>5. <span style=\"font-weight: 400;\">The last step is to display the elements of the transposed matrix </span><b>t</b><span style=\"font-weight: 400;\">.</span></p>\n\n\n\n<h2 id=\"c-program-to-find-the-transpose-of--a-matrix\">C Program to find the Transpose of&nbsp; a Matrix</h2>\n\n\n<div class=\"enlighter-default enlighter-v-standard enlighter-t-atomic enlighter-hover \"><div class=\"enlighter-toolbar-top enlighter-toolbar\"><div class=\"enlighter-btn enlighter-btn-raw\" title=\"Plain text\"></div><div class=\"enlighter-btn enlighter-btn-copy\" title=\"Copy to clipboard\"></div><div class=\"enlighter-btn enlighter-btn-window\" title=\"Open code in new window\"></div><div class=\"enlighter-btn enlighter-btn-website\" title=\"EnlighterJS 3 Syntax Highlighter\"></div></div><div class=\"enlighter\" style=\"\"><div class=\"\"><div><span class=\"enlighter-k4\">#include&lt;stdio.h&gt;</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-k5\">void</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">transpose</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> p</span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">3</span><span class=\"enlighter-g1\">][</span><span class=\"enlighter-text\">3</span><span class=\"enlighter-g1\">]</span><span class=\"enlighter-text\">, </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> t</span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">3</span><span class=\"enlighter-g1\">][</span><span class=\"enlighter-text\">3</span><span class=\"enlighter-g1\">])</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">main</span><span class=\"enlighter-g1\">()</span><span class=\"enlighter-text\">                                   </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\">  i, j;            </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\">   p</span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">3</span><span class=\"enlighter-g1\">][</span><span class=\"enlighter-text\">3</span><span class=\"enlighter-g1\">]</span><span class=\"enlighter-text\">, t</span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">3</span><span class=\"enlighter-g1\">][</span><span class=\"enlighter-text\">3</span><span class=\"enlighter-g1\">]</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-m0\">printf</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-s0\">\"Enter matrix P\\n\"</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-k1\">for</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">i=0; i</span><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-text\">3; i++</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">                     </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k1\">for</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">j=0; j</span><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-text\">3; j++</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">      </span><span class=\"enlighter-m0\">printf</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-s0\">\"Enter the elements of matrix P [%d,%d]: \"</span><span class=\"enlighter-text\">, i, j</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">      </span><span class=\"enlighter-m0\">scanf</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-s0\">\"%d\"</span><span class=\"enlighter-text\">, &amp;p</span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">i</span><span class=\"enlighter-g1\">][</span><span class=\"enlighter-text\">j</span><span class=\"enlighter-g1\">])</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-m0\">transpose</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">p, t</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;                                  </span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-m0\">printf</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-s0\">\"Transpose of matrix P is:\\n\\n\"</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-k1\">for</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">i=0; i</span><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-text\">3; i++</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\">              </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k1\">for</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">j=0; j</span><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-text\">3; j++</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">      </span><span class=\"enlighter-m0\">printf</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-s0\">\"%d \"</span><span class=\"enlighter-text\">, t</span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">i</span><span class=\"enlighter-g1\">][</span><span class=\"enlighter-text\">j</span><span class=\"enlighter-g1\">])</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-m0\">printf</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-s0\">\"\\n\"</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-k5\">void</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">transpose</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> p</span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">3</span><span class=\"enlighter-g1\">][</span><span class=\"enlighter-text\">3</span><span class=\"enlighter-g1\">]</span><span class=\"enlighter-text\">, </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> t</span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">3</span><span class=\"enlighter-g1\">][</span><span class=\"enlighter-text\">3</span><span class=\"enlighter-g1\">])</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\">  row, col;        </span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-k1\">for</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">row=0; row</span><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-text\">3; row++</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k1\">for</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">col=0; col</span><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-text\">3; col++</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">      t</span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">row</span><span class=\"enlighter-g1\">][</span><span class=\"enlighter-text\">col</span><span class=\"enlighter-g1\">]</span><span class=\"enlighter-text\"> = p</span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">col</span><span class=\"enlighter-g1\">][</span><span class=\"enlighter-text\">row</span><span class=\"enlighter-g1\">]</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-g1\">}</span></div></div></div><div class=\"enlighter-raw\">#include&lt;stdio.h&gt;\nvoid transpose(int p[3][3], int t[3][3]);\n    \n  int main()                                   \n  {\n  int  i, j;            \n  int   p[3][3], t[3][3];\n\n  printf(\"Enter matrix P\\n\");\n \n  for (i=0; i&lt;3; i++)                     \n    for (j=0; j&lt;3; j++) {\n      printf(\"Enter the elements of matrix P [%d,%d]: \", i, j);\n      scanf(\"%d\", &amp;p[i][j]);\n    }\n\n  transpose(p, t);                                  \n\n  printf(\"Transpose of matrix P is:\\n\\n\");\n\n  for (i=0; i&lt;3; i++) {              \n    for (j=0; j&lt;3; j++)\n      printf(\"%d \", t[i][j]);\n    printf(\"\\n\");\n  }\n\n  }\n\n   void transpose(int p[3][3], int t[3][3])\n  {\n    \n  int  row, col;        \n\n  for (row=0; row&lt;3; row++)\n    for (col=0; col&lt;3; col++)\n      t[row][col] = p[col][row];\n\n  }</div><div class=\"enlighter-toolbar-bottom enlighter-toolbar\"></div></div><pre class=\"EnlighterJSRAW enlighter-origin\" data-enlighter-language=\"c\" data-enlighter-theme=\"atomic\" data-enlighter-linenumbers=\"false\">#include&lt;stdio.h&gt;\nvoid transpose(int p[3][3], int t[3][3]);\n    \n  int main()                                \t \n  {\n  int  i, j;         \t \n  int   p[3][3], t[3][3];\n\n  printf(\"Enter matrix P\\n\");\n \n  for (i=0; i&lt;3; i++)                  \t \n  \tfor (j=0; j&lt;3; j++) {\n    \tprintf(\"Enter the elements of matrix P [%d,%d]: \", i, j);\n    \tscanf(\"%d\", &amp;p[i][j]);\n  \t}\n\n  transpose(p, t);                               \t \n\n  printf(\"Transpose of matrix P is:\\n\\n\");\n\n  for (i=0; i&lt;3; i++) {           \t \n  \tfor (j=0; j&lt;3; j++)\n    \tprintf(\"%d \", t[i][j]);\n  \tprintf(\"\\n\");\n  }\n\n  }\n\n   void transpose(int p[3][3], int t[3][3])\n  {\n    \n  int  row, col;     \t \n\n  for (row=0; row&lt;3; row++)\n  \tfor (col=0; col&lt;3; col++)\n    \tt[row][col] = p[col][row];\n\n  }</pre>\n\n\n<p><b><strong>Output –</strong></b></p>\n\n\n<div class=\"enlighter-default enlighter-v-standard enlighter-t-atomic enlighter-hover \"><div class=\"enlighter-toolbar-top enlighter-toolbar\"><div class=\"enlighter-btn enlighter-btn-raw\" title=\"Plain text\"></div><div class=\"enlighter-btn enlighter-btn-copy\" title=\"Copy to clipboard\"></div><div class=\"enlighter-btn enlighter-btn-window\" title=\"Open code in new window\"></div><div class=\"enlighter-btn enlighter-btn-website\" title=\"EnlighterJS 3 Syntax Highlighter\"></div></div><div class=\"enlighter\" style=\"\"><div class=\"\"><div><span class=\"enlighter-text\">Enter matrix P</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">Enter the elements of matrix P </span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">0,0</span><span class=\"enlighter-g1\">]</span><span class=\"enlighter-text\">: 1</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">Enter the elements of matrix P </span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">0,1</span><span class=\"enlighter-g1\">]</span><span class=\"enlighter-text\">: 2</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">Enter the elements of matrix P </span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">0,2</span><span class=\"enlighter-g1\">]</span><span class=\"enlighter-text\">: 3</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">Enter the elements of matrix P </span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">1,0</span><span class=\"enlighter-g1\">]</span><span class=\"enlighter-text\">: 4</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">Enter the elements of matrix P </span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">1,1</span><span class=\"enlighter-g1\">]</span><span class=\"enlighter-text\">: 5</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">Enter the elements of matrix P </span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">1,2</span><span class=\"enlighter-g1\">]</span><span class=\"enlighter-text\">: 6</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">Enter the elements of matrix P </span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">2,0</span><span class=\"enlighter-g1\">]</span><span class=\"enlighter-text\">: 7</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">Enter the elements of matrix P </span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">2,1</span><span class=\"enlighter-g1\">]</span><span class=\"enlighter-text\">: 8</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">Enter the elements of matrix P </span><span class=\"enlighter-g1\">[</span><span class=\"enlighter-text\">2,2</span><span class=\"enlighter-g1\">]</span><span class=\"enlighter-text\">: 9</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">1 4 7</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">2 5 8</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">3 6 9</span></div></div></div><div class=\"enlighter-raw\">Enter matrix P\nEnter the elements of matrix P [0,0]: 1\nEnter the elements of matrix P [0,1]: 2\nEnter the elements of matrix P [0,2]: 3\nEnter the elements of matrix P [1,0]: 4\nEnter the elements of matrix P [1,1]: 5\nEnter the elements of matrix P [1,2]: 6\nEnter the elements of matrix P [2,0]: 7\nEnter the elements of matrix P [2,1]: 8\nEnter the elements of matrix P [2,2]: 9\n\n1 4 7\n2 5 8\n3 6 9</div><div class=\"enlighter-toolbar-bottom enlighter-toolbar\"></div></div><pre class=\"EnlighterJSRAW enlighter-origin\" data-enlighter-language=\"c\" data-enlighter-theme=\"atomic\" data-enlighter-linenumbers=\"false\">Enter matrix P\nEnter the elements of matrix P [0,0]: 1\nEnter the elements of matrix P [0,1]: 2\nEnter the elements of matrix P [0,2]: 3\nEnter the elements of matrix P [1,0]: 4\nEnter the elements of matrix P [1,1]: 5\nEnter the elements of matrix P [1,2]: 6\nEnter the elements of matrix P [2,0]: 7\nEnter the elements of matrix P [2,1]: 8\nEnter the elements of matrix P [2,2]: 9\n\n1 4 7\n2 5 8\n3 6 9</pre>\n\n\n<p><span style=\"font-weight: 400;\">The matrix used in the program is the same as that mentioned in the example in the beginning of the article.</span></p>\n\n\n\n<h2 id=\"-conclusion-\"><b>Conclusion</b></h2>\n\n\n\n<p><span style=\"font-weight: 400;\">In this article, we learnt about transpose of a matrix and wrote a program to find the transpose of a matrix using C.&nbsp;</span></p>\n\n\n\n<p><span style=\"font-weight: 400;\">This question has been previously asked in the recruitment drive of Wipro, so if you are preparing to appear for Wipro placement drive do have a look at this program once.</span></p>\n\n<!-- MOLONGUI AUTHORSHIP PLUGIN 4.3.3 -->\n<!-- https://www.molongui.com/authorship/ -->\n<div class=\"molongui-clearfix\"></div>\n<div id=\"mab-2748546660\" class=\"m-a-box \" data-plugin-release=\"4.3.3\" data-plugin-version=\"free\" data-box-layout=\"slim\" data-box-position=\"below\" data-multiauthor=\"false\" data-author-type=\"guest\" itemscope=\"\" itemtype=\"https://schema.org/Person\" style=\"width: 100%;            margin: 20px auto;\">\n\n\t\n    <div class=\"m-a-box-container\n                molongui-border-right-none molongui-border-left-none                molongui-border-style-solid                molongui-border-width-3-px\n                m-a-box-shadow-right\" style=\"border-color: #adadad;                background-color: #efefef;\">\n\n        <div class=\"m-a-box-tab m-a-box-content m-a-box-profile\" data-profile-layout=\"layout-1\" data-author-ref=\"guest-1355\">\n            \n<div class=\"m-a-box-content-top\">\n\n\t\n</div><!-- End of .m-a-box-content-top -->\n\n<div class=\"m-a-box-content-middle\">\n\n    <!-- Author picture -->\n    \n\t<div class=\"m-a-box-item m-a-box-avatar \">\n\t\t                <span>\n                    <img alt=\"\" src=\"https://secure.gravatar.com/avatar/?s=150&amp;d=mp&amp;r=g\" srcset=\"https://secure.gravatar.com/avatar/?s=300&amp;d=mp&amp;r=g 2x\" class=\"avatar avatar-150 photo avatar-default m-radius-none molongui-border-style-solid molongui-border-width-2-px\" height=\"150\" width=\"150\" style=\"border-color:#bfbfbf;\" itemprop=\"image\" loading=\"lazy\">                </span>\n                \t</div>\n\n    <!-- Author social -->\n    \n    <!-- Author data -->\n    <div class=\"m-a-box-item m-a-box-data \">\n\n        <!-- Author name -->\n        \n<div class=\"m-a-box-title\">\n\t<h5 class=\"molongui-font-size-22-px\n\t        molongui-text-align-left                        molongui-text-case-none\" style=\"color: inherit\" itemprop=\"name\">\n                        <span class=\"molongui-font-size-22-px molongui-text-align-left\" style=\"color:inherit;\">\n\t\t\t        Kashish Garg                </span>\n\t            \t</h5>\n</div>\n        <!-- Author metadata -->\n        \n<div class=\"m-a-box-item m-a-box-meta\n            molongui-font-size-12-px\n            molongui-text-align-left                        molongui-text-case-none\" style=\"color: inherit\">\n\n    \n    \n    \n\t\n\t\n\t\n\t        \t\t<script type=\"text/javascript\" language=\"JavaScript\">\n\t\t\tif ( typeof window.ToggleAuthorshipData === 'undefined' )\n\t\t\t{\n\t\t\t\tfunction ToggleAuthorshipData(id, author)\n\t\t\t\t{\n\t\t\t\t\tvar box_selector = '#mab-' + id;\n                    var box = document.querySelector(box_selector);\n                    if ( box.getAttribute('data-multiauthor') ) box_selector = '#mab-' + id + ' [data-author-ref=\"' + author + '\"]';\n\t\t\t\t\tvar label = document.querySelector(box_selector + ' ' + '.m-a-box-data-toggle');\n\t\t\t\t\tlabel.innerHTML = ( label.text.trim() === \"+ posts\" ? \" <span class=\\\"m-a-box-string-bio\\\">Bio</span>\" : \" <span class=\\\"m-a-box-string-more-posts\\\">+ posts</span>\" );\n\t\t\t\t\tvar bio     = document.querySelector(box_selector + ' ' + '.m-a-box-bio');\n\t\t\t\t\tvar related = document.querySelector(box_selector + ' ' + '.m-a-box-related-entries');\n\n\t\t\t\t\tif ( related.style.display === \"none\" )\n\t\t\t\t\t{\n\t\t\t\t\t\trelated.style.display = \"block\";\n\t\t\t\t\t\tbio.style.display     = \"none\";\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\trelated.style.display = \"none\";\n\t\t\t\t\t\tbio.style.display     = \"block\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t</script>\n\t\t<a href=\"javascript:ToggleAuthorshipData(2748546660, 'guest-1355')\" class=\"m-a-box-data-toggle\" style=\"color: inherit\" rel=\"nofollow\"> <span class=\"m-a-box-string-more-posts\">+ posts</span> </a>\n\t\n</div><!-- End of .m-a-box-meta -->\n\n        <!-- Author bio -->\n        \n<div class=\"m-a-box-bio\" itemprop=\"description\">\n\t<div class=\"molongui-font-size-14-px molongui-text-align-justify  molongui-line-height-10\" style=\"color: inherit\">\n\t    \t</div>\n</div>\n\n        \n            <!-- Author related posts -->\n            <div class=\"m-a-box-related\" data-related-layout=\"layout-1\">\n                <div class=\"m-a-box-item m-a-box-related-entries\" style=\"display: none;\">\n\n                                        <ul class=\"molongui-font-size-14-px \" style=\"color: inherit\">\n                         <span class=\"m-a-box-string-no-related-posts\">This author does not have any more posts.</span>                    </ul>\n\n                </div><!-- End of .m-a-box-related-entries -->\n            </div><!-- End of .m-a-box-related -->\n\n        \n    </div><!-- End of .m-a-box-data -->\n\n</div><!-- End of .m-a-box-content-middle -->\n\n<div class=\"m-a-box-content-bottom\"></div><!-- End of .m-a-box-content-bottom -->        </div><!-- End of .m-a-box-profile -->\n\n        \n    </div><!-- End of .m-a-box-container -->\n\n\t\n</div><!-- End of .m-a-box -->\t</div><!-- .entry-content -->\n\t</div>\n\t<footer class=\"entry-footer\">\n\t\t<span class=\"cat-links\">Posted in <a href=\"https://www.scaler.com/topics/category/c/\" rel=\"category tag\">C</a></span> | <span class=\"tags-links\">Tagged <a href=\"https://www.scaler.com/topics/tag/c-program-for-transpose-of-matrix/\" rel=\"tag\">c program for transpose of matrix</a>, <a href=\"https://www.scaler.com/topics/tag/transpose-of-a-matrix/\" rel=\"tag\">transpose of a matrix</a>, <a href=\"https://www.scaler.com/topics/tag/transpose-of-a-matrix-in-c/\" rel=\"tag\">transpose of a matrix in C</a></span>\t</footer><!-- .entry-footer -->\n</article><!-- #post-## -->\n\n\n\n\t<nav class=\"navigation post-navigation\" role=\"navigation\" aria-label=\"Posts\">\n\t\t<h2 class=\"screen-reader-text\">Post navigation</h2>\n\t\t<div class=\"nav-links\"><div class=\"nav-previous\"><a href=\"https://www.scaler.com/topics/difference-between-function-overloading-and-overriding-in-cpp/\" rel=\"prev\">Difference Between Function Overloading and Overriding in C++</a></div><div class=\"nav-next\"><a href=\"https://www.scaler.com/topics/passing-array-to-function-in-c-cpp/\" rel=\"next\">Passing Array to Function in C/C++</a></div></div>\n\t</nav>\n<div id=\"comments\" class=\"comments-area\">\n\n    \n    \t<div id=\"respond\" class=\"comment-respond\">\n\t\t<h3 id=\"reply-title\" class=\"comment-reply-title\">Leave a Reply <small><a rel=\"nofollow\" id=\"cancel-comment-reply-link\" href=\"/topics/transpose-of-a-matrix-in-c/#respond\" style=\"display:none;\">Cancel Reply</a></small></h3><p class=\"must-log-in\">You must be <a href=\"https://www.scaler.com/topics/wp-login.php?redirect_to=https%3A%2F%2Fwww.scaler.com%2Ftopics%2Ftranspose-of-a-matrix-in-c%2F\">logged in</a> to post a comment.</p>\t</div><!-- #respond -->\n\t\n</div><!-- #comments -->\n\n\t\t</div><!-- #main -->\n\t</section><!-- #primary -->\n\n\t\t\t</div><!-- .row -->\n\t\t</div><!-- .container -->\n\t</div><!-- #content -->\n    \t<footer id=\"colophon\" class=\"site-footer navbar-light bg-light\" role=\"contentinfo\">\n\t\t<div class=\"container pt-3 pb-3\">\n            <div class=\"site-info text-center\">\n\t\t\t\tCopyright © 2021 InterviewBit Technologies Pte. Ltd. All Rights Reserved\n            </div><!-- close .site-info -->\n\t\t</div>\n\t</footer><!-- #colophon -->\n</div><!-- #page -->\n\n<script type=\"text/javascript\" id=\"molongui-authorship-js-extra\">\n/* <![CDATA[ */\nvar molongui_authorship = {\"byline_prefix\":\"\",\"byline_suffix\":\"\",\"byline_separator\":\", \",\"byline_last_separator\":\" and \",\"byline_link_title\":\"View all posts by\",\"byline_dom_tree\":\"\"};\n/* ]]> */\n</script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/plugins/molongui-authorship/public/js/molongui-authorship.5a1d.min.js?ver=4.3.3\" id=\"molongui-authorship-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/js/popper.min.js?ver=5.7.2\" id=\"wp-bootstrap-starter-popper-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/js/bootstrap.min.js?ver=5.7.2\" id=\"wp-bootstrap-starter-bootstrapjs-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/js/theme-script.min.js?ver=5.7.2\" id=\"wp-bootstrap-starter-themejs-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/js/skip-link-focus-fix.min.js?ver=20151215\" id=\"wp-bootstrap-starter-skip-link-focus-fix-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-includes/js/comment-reply.min.js?ver=5.7.2\" id=\"comment-reply-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/plugins/gutentoc-advance-table-of-content/dist/toc.js?ver=5.7.2\" id=\"gutentocjs-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/plugins/enlighter/cache/enlighterjs.min.js?ver=0UVtrfqVvCkLefk\" id=\"enlighterjs-js\"></script>\n<script type=\"text/javascript\" id=\"enlighterjs-js-after\">\n!function(e,n){if(\"undefined\"!=typeof EnlighterJS){var o={\"selectors\":{\"block\":\"pre.EnlighterJSRAW\",\"inline\":\"code.EnlighterJSRAW\"},\"options\":{\"indent\":2,\"ampersandCleanup\":true,\"linehover\":true,\"rawcodeDbclick\":false,\"textOverflow\":\"break\",\"linenumbers\":true,\"theme\":\"classic\",\"language\":\"generic\",\"retainCssClasses\":false,\"collapse\":false,\"toolbarOuter\":\"\",\"toolbarTop\":\"{BTN_RAW}{BTN_COPY}{BTN_WINDOW}{BTN_WEBSITE}\",\"toolbarBottom\":\"\"}};(e.EnlighterJSINIT=function(){EnlighterJS.init(o.selectors.block,o.selectors.inline,o.options)})()}else{(n&&(n.error||n.log)||function(){})(\"Error: EnlighterJS resources not loaded yet!\")}}(window,console);\n</script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-includes/js/wp-embed.min.js?ver=5.7.2\" id=\"wp-embed-js\"></script>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/css-element-queries@1.2.2/src/ResizeSensor.min.js?ver=1.2.2\" id=\"molongui-resizesensor-js\"></script>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/css-element-queries@1.2.2/src/ElementQueries.min.js?ver=1.2.2\" id=\"molongui-elementqueries-js\"></script>\n<script>\n\nfunction is_logged_in()\n{\n\nlet xhr = new XMLHttpRequest();\n\nxhr.open('GET', 'https://www.interviewbit.com/get_user_options/', false);\n\ntry {\n  xhr.send();\n  if (xhr.status != 200) {\n   console.log(`Error ${xhr.status}: ${xhr.statusText}`);\n  } else {\n\n  if(JSON.parse(xhr.response).logged_in == true){\n  return true;\n  }\n  else{\n  return false;\n  }\n     \n  }\n} catch(err) { // instead of onerror\n  console.log(\"Request failed\");\n}\n\t\n}\n\n\t\n</script>\n\n</body>", slug: 'hello-world')




Article.create(title: 'Difference Between Function Overloading and Overriding in C++',content: "<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <link rel=\"profile\" href=\"http://gmpg.org/xfn/11\">\n\n<!-- Author Meta Tags by Molongui Authorship 4.3.3, visit: https://wordpress.org/plugins/molongui-authorship/ -->\n<meta name=\"author\" content=\"Yash Dusing\">\n<!-- /Molongui Authorship -->\n\n<title>Difference Between Function Overloading and Overriding in C++ - Scaler Topics</title>\n\n<!-- The SEO Framework by Sybre Waaijer -->\n<meta name=\"robots\" content=\"max-snippet:-1,max-image-preview:standard,max-video-preview:-1\">\n<meta name=\"description\" content=\"Learn what is function overloading and function overriding in C++. Scaler Topics explains the difference between function overloading and overriding in C++ along with example programs.\">\n<meta property=\"og:image\" content=\"https://www.scaler.com/topics/media/overloading-vs-overriding-in-cpp.png\">\n<meta property=\"og:image:width\" content=\"2134\">\n<meta property=\"og:image:height\" content=\"1042\">\n<meta property=\"og:image:alt\" content=\"overloading vs overriding in C++\">\n<meta property=\"og:locale\" content=\"en_US\">\n<meta property=\"og:type\" content=\"article\">\n<meta property=\"og:title\" content=\"Difference Between Function Overloading and Overriding in C++ - Scaler Topics\">\n<meta property=\"og:description\" content=\"Learn what is function overloading and function overriding in C++. Scaler Topics explains the difference between function overloading and overriding in C++ along with example programs.\">\n<meta property=\"og:url\" content=\"https://www.scaler.com/topics/difference-between-function-overloading-and-overriding-in-cpp/\">\n<meta property=\"og:site_name\" content=\"Scaler Topics\">\n<meta property=\"og:updated_time\" content=\"2021-07-22\">\n<meta property=\"article:published_time\" content=\"2021-07-21\">\n<meta property=\"article:modified_time\" content=\"2021-07-22\">\n<meta name=\"twitter:card\" content=\"summary_large_image\">\n<meta name=\"twitter:title\" content=\"Difference Between Function Overloading and Overriding in C++ - Scaler Topics\">\n<meta name=\"twitter:description\" content=\"Learn what is function overloading and function overriding in C++. Scaler Topics explains the difference between function overloading and overriding in C++ along with example programs.\">\n<meta name=\"twitter:image\" content=\"https://www.scaler.com/topics/media/overloading-vs-overriding-in-cpp.png\">\n<meta name=\"twitter:image:width\" content=\"2134\">\n<meta name=\"twitter:image:height\" content=\"1042\">\n<meta name=\"twitter:image:alt\" content=\"overloading vs overriding in C++\">\n<link rel=\"canonical\" href=\"https://www.scaler.com/topics/difference-between-function-overloading-and-overriding-in-cpp/\">\n<script type=\"text/javascript\" async=\"\" src=\"https://www.google-analytics.com/analytics.js\"></script><script type=\"application/ld+json\">{\"@context\":\"https://schema.org\",\"@type\":\"BreadcrumbList\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"item\":{\"@id\":\"https://www.scaler.com/topics/\",\"name\":\"Scaler Topics\"}},{\"@type\":\"ListItem\",\"position\":2,\"item\":{\"@id\":\"https://www.scaler.com/topics/category/c-2/\",\"name\":\"C++\"}},{\"@type\":\"ListItem\",\"position\":3,\"item\":{\"@id\":\"https://www.scaler.com/topics/difference-between-function-overloading-and-overriding-in-cpp/\",\"name\":\"Difference Between Function Overloading and Overriding in C++ &#x2d; Scaler Topics\"}}]}</script>\n<meta name=\"p:domain_verify\" content=\"7e10627c0f88fb1a4f4c6ae8c0d34b16\">\n<!-- / The SEO Framework by Sybre Waaijer | 3.95ms meta | 0.44ms boot -->\n\n<link rel=\"dns-prefetch\" href=\"//fonts.googleapis.com\">\n<link rel=\"dns-prefetch\" href=\"//s.w.org\">\n<link rel=\"alternate\" type=\"application/rss+xml\" title=\"Scaler Topics » Feed\" href=\"https://www.scaler.com/topics/feed/\">\n<link rel=\"alternate\" type=\"application/rss+xml\" title=\"Scaler Topics » Comments Feed\" href=\"https://www.scaler.com/topics/comments/feed/\">\n<link rel=\"alternate\" type=\"application/rss+xml\" title=\"Scaler Topics » Difference Between Function Overloading and Overriding in C++ Comments Feed\" href=\"https://www.scaler.com/topics/difference-between-function-overloading-and-overriding-in-cpp/feed/\">\n\t\t<script type=\"text/javascript\">\n\t\t\twindow._wpemojiSettings = {\"baseUrl\":\"https:\\/\\/s.w.org\\/images\\/core\\/emoji\\/13.0.1\\/72x72\\/\",\"ext\":\".png\",\"svgUrl\":\"https:\\/\\/s.w.org\\/images\\/core\\/emoji\\/13.0.1\\/svg\\/\",\"svgExt\":\".svg\",\"source\":{\"concatemoji\":\"https:\\/\\/www.scaler.com\\/topics\\/wp-includes\\/js\\/wp-emoji-release.min.js?ver=5.7.2\"}};\n\t\t\t!function(e,a,t){var n,r,o,i=a.createElement(\"canvas\"),p=i.getContext&&i.getContext(\"2d\");function s(e,t){var a=String.fromCharCode;p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,e),0,0);e=i.toDataURL();return p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,t),0,0),e===i.toDataURL()}function c(e){var t=a.createElement(\"script\");t.src=e,t.defer=t.type=\"text/javascript\",a.getElementsByTagName(\"head\")[0].appendChild(t)}for(o=Array(\"flag\",\"emoji\"),t.supports={everything:!0,everythingExceptFlag:!0},r=0;r<o.length;r++)t.supports[o[r]]=function(e){if(!p||!p.fillText)return!1;switch(p.textBaseline=\"top\",p.font=\"600 32px Arial\",e){case\"flag\":return s([127987,65039,8205,9895,65039],[127987,65039,8203,9895,65039])?!1:!s([55356,56826,55356,56819],[55356,56826,8203,55356,56819])&&!s([55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447],[55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447]);case\"emoji\":return!s([55357,56424,8205,55356,57212],[55357,56424,8203,55356,57212])}return!1}(o[r]),t.supports.everything=t.supports.everything&&t.supports[o[r]],\"flag\"!==o[r]&&(t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&t.supports[o[r]]);t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&!t.supports.flag,t.DOMReady=!1,t.readyCallback=function(){t.DOMReady=!0},t.supports.everything||(n=function(){t.readyCallback()},a.addEventListener?(a.addEventListener(\"DOMContentLoaded\",n,!1),e.addEventListener(\"load\",n,!1)):(e.attachEvent(\"onload\",n),a.attachEvent(\"onreadystatechange\",function(){\"complete\"===a.readyState&&t.readyCallback()})),(n=t.source||{}).concatemoji?c(n.concatemoji):n.wpemoji&&n.twemoji&&(c(n.twemoji),c(n.wpemoji)))}(window,document,window._wpemojiSettings);\n\t\t</script><script src=\"https://www.scaler.com/topics/wp-includes/js/wp-emoji-release.min.js?ver=5.7.2\" type=\"text/javascript\" defer=\"\"></script>\n\t\t<style type=\"text/css\">\nimg.wp-smiley,\nimg.emoji {\n\tdisplay: inline !important;\n\tborder: none !important;\n\tbox-shadow: none !important;\n\theight: 1em !important;\n\twidth: 1em !important;\n\tmargin: 0 .07em !important;\n\tvertical-align: -0.1em !important;\n\tbackground: none !important;\n\tpadding: 0 !important;\n}\n</style>\n\t<link rel=\"stylesheet\" id=\"wp-quicklatex-format-css\" href=\"https://www.scaler.com/topics/wp-content/plugins/wp-quicklatex/css/quicklatex-format.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-block-library-css\" href=\"https://www.scaler.com/topics/wp-includes/css/dist/block-library/style.min.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"gutentocwp-cgb-style-css-css\" href=\"https://www.scaler.com/topics/wp-content/plugins/gutentoc-advance-table-of-content/dist/blocks.style.build.css\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"child-theme-generator-css\" href=\"https://www.scaler.com/topics/wp-content/plugins/child-theme-generator/public/css/child-theme-generator-public.css?ver=1.0.0\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"molongui-authorship-css\" href=\"https://www.scaler.com/topics/wp-content/plugins/molongui-authorship/public/css/molongui-authorship.27a7.min.css?ver=4.3.3\" type=\"text/css\" media=\"all\">\n<style id=\"molongui-authorship-inline-css\" type=\"text/css\">\n:root{ --m-a-box-bp: 600px; --m-a-box-bp-l: 599px; }\n</style>\n<link rel=\"stylesheet\" id=\"parente2-style-css\" href=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/style.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"childe2-style-css\" href=\"https://www.scaler.com/topics/wp-content/themes/InterviewBit/style.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-bootstrap-starter-bootstrap-css-css\" href=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/css/bootstrap.min.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-bootstrap-starter-fontawesome-cdn-css\" href=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/css/fontawesome.min.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-bootstrap-starter-style-css\" href=\"https://www.scaler.com/topics/wp-content/themes/InterviewBit/style.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-bootstrap-starter-litera-css\" href=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/css/presets/theme-option/litera.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-bootstrap-starter-montserrat-opensans-font-css\" href=\"https://fonts.googleapis.com/css?family=Montserrat%7COpen+Sans%3A300%2C300i%2C400%2C400i%2C600%2C600i%2C700%2C800&amp;ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-bootstrap-starter-montserrat-opensans-css\" href=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/css/presets/typography/montserrat-opensans.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"enlighterjs-css\" href=\"https://www.scaler.com/topics/wp-content/plugins/enlighter/cache/enlighterjs.min.css?ver=0UVtrfqVvCkLefk\" type=\"text/css\" media=\"all\">\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-includes/js/jquery/jquery.min.js?ver=3.5.1\" id=\"jquery-core-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-includes/js/jquery/jquery-migrate.min.js?ver=3.3.2\" id=\"jquery-migrate-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/plugins/child-theme-generator/public/js/child-theme-generator-public.js?ver=1.0.0\" id=\"child-theme-generator-js\"></script>\n<!--[if lt IE 9]>\n<script type='text/javascript' src='https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/js/html5.js?ver=3.7.0' id='html5hiv-js'></script>\n<![endif]-->\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/plugins/wp-quicklatex/js/wp-quicklatex-frontend.js?ver=1.0\" id=\"wp-quicklatex-frontend-js\"></script>\n<link rel=\"https://api.w.org/\" href=\"https://www.scaler.com/topics/wp-json/\"><link rel=\"alternate\" type=\"application/json\" href=\"https://www.scaler.com/topics/wp-json/wp/v2/posts/74\"><link rel=\"EditURI\" type=\"application/rsd+xml\" title=\"RSD\" href=\"https://www.scaler.com/topics/xmlrpc.php?rsd\">\n<link rel=\"wlwmanifest\" type=\"application/wlwmanifest+xml\" href=\"https://www.scaler.com/topics/wp-includes/wlwmanifest.xml\"> \n<link rel=\"alternate\" type=\"application/json+oembed\" href=\"https://www.scaler.com/topics/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.scaler.com%2Ftopics%2Fdifference-between-function-overloading-and-overriding-in-cpp%2F\">\n<link rel=\"alternate\" type=\"text/xml+oembed\" href=\"https://www.scaler.com/topics/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.scaler.com%2Ftopics%2Fdifference-between-function-overloading-and-overriding-in-cpp%2F&amp;format=xml\">\n<link rel=\"pingback\" href=\"https://www.scaler.com/topics/xmlrpc.php\">    <style type=\"text/css\">\n        #page-sub-header { background: #fff; }\n    </style>\n    <link rel=\"icon\" href=\"https://www.scaler.com/topics/media/cropped-android-chrome-512x512-1-32x32.png\" sizes=\"32x32\">\n<link rel=\"icon\" href=\"https://www.scaler.com/topics/media/cropped-android-chrome-512x512-1-192x192.png\" sizes=\"192x192\">\n<link rel=\"apple-touch-icon\" href=\"https://www.scaler.com/topics/media/cropped-android-chrome-512x512-1-180x180.png\">\n<meta name=\"msapplication-TileImage\" content=\"https://www.scaler.com/topics/media/cropped-android-chrome-512x512-1-270x270.png\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\n<link href=\"https://fonts.googleapis.com/css2?family=Roboto&amp;display=swap\" rel=\"stylesheet\">\n\t<!-- Global site tag (gtag.js) - Google Analytics -->\n<script async=\"\" src=\"https://www.googletagmanager.com/gtag/js?id=UA-56207880-1\"></script>\n<script>\n  window.dataLayer = window.dataLayer || [];\n  function gtag(){dataLayer.push(arguments);}\n  gtag('js', new Date());\n\n  gtag('config', 'UA-56207880-1');\n</script>\n<style type=\"text/css\">[responsive-image] > img, [data-responsive-image] {overflow: hidden; padding: 0; } [responsive-image] > img, [data-responsive-image] > img {width: 100%;}\n@keyframes element-queries { 0% { visibility: inherit; } }</style></head>\n\n<body class=\"post-template-default single single-post postid-74 single-format-standard topics group-blog theme-preset-active\">\n\n\n<div id=\"page\" class=\"site\">\n\t<!-- #masthead -->\n    \t<div id=\"content\" class=\"site-content\">\n\t\t<div class=\"container\">\n\t\t\t<div class=\"row\">\n                \n\t<section id=\"primary\" class=\"content-area col-sm-12 col-lg-8 mx-auto\">\n\t\t<div id=\"main\" class=\"site-main\" role=\"main\">\n\n\t\t\n\n\n<article id=\"post-74\" class=\"post-74 post type-post status-publish format-standard has-post-thumbnail hentry category-c-2 tag-difference-between-overloading-and-overriding tag-function-overloading tag-function-overloading-in-c tag-function-overriding tag-function-overriding-in-c tag-overloading-in-c\">\n\t<div class=\"post-thumbnail mb-3\">\n\t\t<img width=\"2134\" height=\"1042\" src=\"https://www.scaler.com/topics/media/overloading-vs-overriding-in-cpp.png\" class=\"attachment-post-thumbnail size-post-thumbnail wp-post-image\" alt=\"overloading vs overriding in C++\" loading=\"lazy\" srcset=\"https://www.scaler.com/topics/media/overloading-vs-overriding-in-cpp.png 2134w, https://www.scaler.com/topics/media/overloading-vs-overriding-in-cpp-300x146.png 300w, https://www.scaler.com/topics/media/overloading-vs-overriding-in-cpp-1024x500.png 1024w, https://www.scaler.com/topics/media/overloading-vs-overriding-in-cpp-768x375.png 768w, https://www.scaler.com/topics/media/overloading-vs-overriding-in-cpp-1536x750.png 1536w, https://www.scaler.com/topics/media/overloading-vs-overriding-in-cpp-2048x1000.png 2048w\" sizes=\"(max-width: 2134px) 100vw, 2134px\">\t</div>\n\t<div class=\"post-content-here\">\n\n\t<header class=\"entry-header\">\n\t\t<h1 class=\"entry-title\">Difference Between Function Overloading and Overriding in C++</h1>\t\t<div class=\"entry-meta\">\n<!-- \t\t\t<span class=\"posted-on\">Posted on <a href=\"https://www.scaler.com/topics/difference-between-function-overloading-and-overriding-in-cpp/\" rel=\"bookmark\"><time class=\"entry-date published\" datetime=\"2021-07-21T16:17:00+05:30\">July 21, 2021</time></a></span> | <span class=\"byline\"> by <span class=\"author vcard\"><a class=\"url fn n\" href=\"#molongui-disabled-link\">Yash Dusing</a></span></span> -->\n\t\t</div><!-- .entry-meta -->\n\t\t\t</header><!-- .entry-header -->\n\t<div class=\"entry-content\">\n\t\t\n<div class=\"gutentoc tocactive nostyle\"><div class=\"gutentoc-toc-wrap\"><div class=\"gutentoc-toc-title-wrap\"><div class=\"gutentoc-toc-title\">Table Of Contents</div><div id=\"open\" class=\"toggleone\">show</div></div><div id=\"toclist\"><div class=\"gutentoc-toc__list-wrap\"><ul class=\"gutentoc-toc__list\"><li><a href=\"#introduction\">Introduction</a></li><li><a href=\"#function-overloading-in-c\">Function Overloading in C++</a></li><li><a href=\"#function-overriding-in-c\">Function overriding in C++</a></li><li><a href=\"#function-overloading-vs-function-overriding-in-c\">Function Overloading vs Function Overriding in C++</a></li><li><a href=\"#conclusion\">Conclusion</a></li></ul></div></div></div></div>\n\n\n\n<p><span style=\"font-weight: 400;\"><strong>Pre-requisites :</strong>&nbsp;<br></span></p>\n\n\n\n<ol><li>An understanding of functions</li><li>C++ inheritance, constructor and basic knowledge of C++</li></ol>\n\n\n\n<h2 id=\"introduction\">Introduction</h2>\n\n\n\n<p>Functions are a way to bind together code that is meant to be called repeatedly. After all, you wouldn’t want to copy paste that code of yours again and again, right ? What if you needed to modify that code ? You would need to change the code at every instance mindlessly. That is one of the reasons functions are one of the essential parts of procedural programming.&nbsp;</p>\n\n\n\n<p>But, there are instances where you would need the alias (the name) of the function to be reused depending upon the context. This is what we call polymorphism.<strong> Polymorphism literally means multiple forms (poly-morphisms)</strong> so in our instance we mean that the function alias will have multiple forms ! One good example of polymorphism is:&nbsp;</p>\n\n\n\n<p>We make sound via talking but so do other animals. So, if we were to design an interface for Animals, makeSound() would be a common interface for all.</p>\n\n\n\n<h2 id=\"function-overloading-in-c\">Function Overloading in C++</h2>\n\n\n\n<p>1. Let’s consider a situation: Say you wanted to create a program that would return the area of the rectangle. Say if I provided length(say x) and breadth(say y) you would return x*y. You would probably write this code:</p>\n\n\n<div class=\"enlighter-default enlighter-v-standard enlighter-t-atomic enlighter-hover \"><div class=\"enlighter-toolbar-top enlighter-toolbar\"><div class=\"enlighter-btn enlighter-btn-raw\" title=\"Plain text\"></div><div class=\"enlighter-btn enlighter-btn-copy\" title=\"Copy to clipboard\"></div><div class=\"enlighter-btn enlighter-btn-window\" title=\"Open code in new window\"></div><div class=\"enlighter-btn enlighter-btn-website\" title=\"EnlighterJS 3 Syntax Highlighter\"></div></div><div class=\"enlighter\" style=\"\"><div class=\"\"><div><span class=\"enlighter-k4\">#include &lt;iostream&gt;</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">area</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> x, </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> y</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k0\">return</span><span class=\"enlighter-text\"> x*y;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">main</span><span class=\"enlighter-g1\">()</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> areaOfRect = </span><span class=\"enlighter-m0\">area</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">5, 2</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">; </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    std::cout </span><span class=\"enlighter-g1\">&lt;&lt;</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-s0\">\"Area of rectangle with length 5 and breadth 2 is \"</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">&lt;&lt;</span><span class=\"enlighter-text\"> areaOfRect </span><span class=\"enlighter-g1\">&lt;&lt;</span><span class=\"enlighter-text\"> std::endl;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k0\">return</span><span class=\"enlighter-text\"> 0;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">}</span></div></div></div><div class=\"enlighter-raw\">#include &lt;iostream&gt;\n \nint area(int x, int y) {\n    return x*y;\n}\n \nint main() {\n \n    int areaOfRect = area(5, 2); \n    \n    std::cout &lt;&lt; \"Area of rectangle with length 5 and breadth 2 is \" &lt;&lt; areaOfRect &lt;&lt; std::endl;\n \n    return 0;\n}</div><div class=\"enlighter-toolbar-bottom enlighter-toolbar\"></div></div><pre class=\"EnlighterJSRAW enlighter-origin\" data-enlighter-language=\"cpp\" data-enlighter-theme=\"atomic\" data-enlighter-linenumbers=\"false\">#include &lt;iostream&gt;\n \nint area(int x, int y) {\n    return x*y;\n}\n \nint main() {\n \n    int areaOfRect = area(5, 2); \n    \n    std::cout &lt;&lt; \"Area of rectangle with length 5 and breadth 2 is \" &lt;&lt; areaOfRect &lt;&lt; std::endl;\n \n    return 0;\n}</pre>\n\n\n<p>2. So far so good.Until your supervisor tells you that people also want to calculate the area of a square using the same function. Now, you want to calculate the area based on<strong> how many arguments </strong>are passed to the function. Say if I was provided just x (just 1 argument) you would assume that I’m calculating the area of a square and return x*x. But if I was providing x and y (so 2 argument), you would return x*y. You would write the code something similar to this:</p>\n\n\n<div class=\"enlighter-default enlighter-v-standard enlighter-t-atomic enlighter-hover \"><div class=\"enlighter-toolbar-top enlighter-toolbar\"><div class=\"enlighter-btn enlighter-btn-raw\" title=\"Plain text\"></div><div class=\"enlighter-btn enlighter-btn-copy\" title=\"Copy to clipboard\"></div><div class=\"enlighter-btn enlighter-btn-window\" title=\"Open code in new window\"></div><div class=\"enlighter-btn enlighter-btn-website\" title=\"EnlighterJS 3 Syntax Highlighter\"></div></div><div class=\"enlighter\" style=\"\"><div class=\"\"><div><span class=\"enlighter-k4\">#include &lt;iostream&gt;</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">area</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> x</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k0\">return</span><span class=\"enlighter-text\"> x*x;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">area</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> x, </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> y</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k0\">return</span><span class=\"enlighter-text\"> x*y;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">main</span><span class=\"enlighter-g1\">()</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> areaOfSquare = </span><span class=\"enlighter-m0\">area</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">5</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> areaOfRect = </span><span class=\"enlighter-m0\">area</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">5, 2</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">; </span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    std::cout </span><span class=\"enlighter-g1\">&lt;&lt;</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-s0\">\"Area of square with side length 5 is \"</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">&lt;&lt;</span><span class=\"enlighter-text\"> areaOfSquare </span><span class=\"enlighter-g1\">&lt;&lt;</span><span class=\"enlighter-text\"> std::endl;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    std::cout </span><span class=\"enlighter-g1\">&lt;&lt;</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-s0\">\"Area of rectangle with length 5 and breadth 2 is \"</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">&lt;&lt;</span><span class=\"enlighter-text\"> areaOfRect </span><span class=\"enlighter-g1\">&lt;&lt;</span><span class=\"enlighter-text\"> std::endl;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k0\">return</span><span class=\"enlighter-text\"> 0;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">}</span></div></div></div><div class=\"enlighter-raw\">#include &lt;iostream&gt;\n \nint area(int x) {\n    return x*x;\n}\n \nint area(int x, int y) {\n    return x*y;\n}\n \nint main() {\n \n    int areaOfSquare = area(5);\n    int areaOfRect = area(5, 2); \n \n    std::cout &lt;&lt; \"Area of square with side length 5 is \" &lt;&lt; areaOfSquare &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"Area of rectangle with length 5 and breadth 2 is \" &lt;&lt; areaOfRect &lt;&lt; std::endl;\n \n    return 0;\n}</div><div class=\"enlighter-toolbar-bottom enlighter-toolbar\"></div></div><pre class=\"EnlighterJSRAW enlighter-origin\" data-enlighter-language=\"cpp\" data-enlighter-theme=\"atomic\" data-enlighter-linenumbers=\"false\">#include &lt;iostream&gt;\n \nint area(int x) {\n    return x*x;\n}\n \nint area(int x, int y) {\n    return x*y;\n}\n \nint main() {\n \n    int areaOfSquare = area(5);\n    int areaOfRect = area(5, 2); \n \n    std::cout &lt;&lt; \"Area of square with side length 5 is \" &lt;&lt; areaOfSquare &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"Area of rectangle with length 5 and breadth 2 is \" &lt;&lt; areaOfRect &lt;&lt; std::endl;\n \n    return 0;\n}</pre>\n\n\n<p>C++ is able to distinguish between the two contexts of function calls because the number of arguments is different in both instances.</p>\n\n\n\n<p>3. Apart from distinguishing based on the number of arguments, C++ can also distinguish the function calls based on the <strong>data type of the arguments </strong>passed to the function. Now, the supervisor is impressed and also wants you to code for the condition of the circle if the user provided a floating value input. So if I were to pass a float value you would return the area of circle (3.14 * r * r) and if I were to pass int value you would return x * x as before. I can define a third function which distinguishes based on data type passed.</p>\n\n\n<div class=\"enlighter-default enlighter-v-standard enlighter-t-atomic enlighter-hover \"><div class=\"enlighter-toolbar-top enlighter-toolbar\"><div class=\"enlighter-btn enlighter-btn-raw\" title=\"Plain text\"></div><div class=\"enlighter-btn enlighter-btn-copy\" title=\"Copy to clipboard\"></div><div class=\"enlighter-btn enlighter-btn-window\" title=\"Open code in new window\"></div><div class=\"enlighter-btn enlighter-btn-website\" title=\"EnlighterJS 3 Syntax Highlighter\"></div></div><div class=\"enlighter\" style=\"\"><div class=\"\"><div><span class=\"enlighter-k4\">#include &lt;iostream&gt;</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">area</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> x</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k0\">return</span><span class=\"enlighter-text\"> x*x;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">area</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> x, </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> y</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k0\">return</span><span class=\"enlighter-text\"> x*y;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-k5\">float</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">area</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-k5\">float</span><span class=\"enlighter-text\"> r</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k0\">return</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-n0\">3.14</span><span class=\"enlighter-text\"> * r * r;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">main</span><span class=\"enlighter-g1\">()</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> areaOfSquare = </span><span class=\"enlighter-m0\">area</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">5</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> areaOfRect = </span><span class=\"enlighter-m0\">area</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">5, 2</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">; </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k5\">float</span><span class=\"enlighter-text\"> areaOfCircle = </span><span class=\"enlighter-m0\">area</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-n0\">5.0</span><span class=\"enlighter-text\">f</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    std::cout </span><span class=\"enlighter-g1\">&lt;&lt;</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-s0\">\"Area of square with side length 5 is \"</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">&lt;&lt;</span><span class=\"enlighter-text\"> areaOfSquare </span><span class=\"enlighter-g1\">&lt;&lt;</span><span class=\"enlighter-text\"> std::endl;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    std::cout </span><span class=\"enlighter-g1\">&lt;&lt;</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-s0\">\"Area of rectangle with length 5 and breadth 2 is \"</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">&lt;&lt;</span><span class=\"enlighter-text\"> areaOfRect </span><span class=\"enlighter-g1\">&lt;&lt;</span><span class=\"enlighter-text\"> std::endl;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    std::cout </span><span class=\"enlighter-g1\">&lt;&lt;</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-s0\">\"Area of circle with radius 5.0 is \"</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">&lt;&lt;</span><span class=\"enlighter-text\"> areaOfCircle </span><span class=\"enlighter-g1\">&lt;&lt;</span><span class=\"enlighter-text\"> std::endl;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k0\">return</span><span class=\"enlighter-text\"> 0;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">}</span></div></div></div><div class=\"enlighter-raw\">#include &lt;iostream&gt;\n \nint area(int x) {\n    return x*x;\n}\n \nint area(int x, int y) {\n    return x*y;\n}\n \nfloat area(float r) {\n    return 3.14 * r * r;\n}\n \nint main() {\n \n    int areaOfSquare = area(5);\n    int areaOfRect = area(5, 2); \n    float areaOfCircle = area(5.0f);\n \n    std::cout &lt;&lt; \"Area of square with side length 5 is \" &lt;&lt; areaOfSquare &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"Area of rectangle with length 5 and breadth 2 is \" &lt;&lt; areaOfRect &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"Area of circle with radius 5.0 is \" &lt;&lt; areaOfCircle &lt;&lt; std::endl;\n \n    return 0;\n}</div><div class=\"enlighter-toolbar-bottom enlighter-toolbar\"></div></div><pre class=\"EnlighterJSRAW enlighter-origin\" data-enlighter-language=\"cpp\" data-enlighter-theme=\"atomic\" data-enlighter-linenumbers=\"false\">#include &lt;iostream&gt;\n \nint area(int x) {\n    return x*x;\n}\n \nint area(int x, int y) {\n    return x*y;\n}\n \nfloat area(float r) {\n    return 3.14 * r * r;\n}\n \nint main() {\n \n    int areaOfSquare = area(5);\n    int areaOfRect = area(5, 2); \n    float areaOfCircle = area(5.0f);\n \n    std::cout &lt;&lt; \"Area of square with side length 5 is \" &lt;&lt; areaOfSquare &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"Area of rectangle with length 5 and breadth 2 is \" &lt;&lt; areaOfRect &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"Area of circle with radius 5.0 is \" &lt;&lt; areaOfCircle &lt;&lt; std::endl;\n \n    return 0;\n}</pre>\n\n\n<p><strong>Side Note:</strong> One subtle problem with distinguishing based on data type of function is type casting (i.e. say a char type can be promoted to int or float or double). The C++ compiler follows a series of priorities when matching the function application:</p>\n\n\n\n<ol><li>It first tries to match exact type (int to int / float to float)</li><li>If no match is found, it promotes the data type and retries (conversion between int to char and char to int or float to double and double to float)</li><li>If still no match is found, C++ compiler throws an error.</li></ol>\n\n\n\n<p>As can be seen, if functions are</p>\n\n\n<div class=\"enlighter-default enlighter-v-standard enlighter-t-atomic enlighter-hover \"><div class=\"enlighter-toolbar-top enlighter-toolbar\"><div class=\"enlighter-btn enlighter-btn-raw\" title=\"Plain text\"></div><div class=\"enlighter-btn enlighter-btn-copy\" title=\"Copy to clipboard\"></div><div class=\"enlighter-btn enlighter-btn-window\" title=\"Open code in new window\"></div><div class=\"enlighter-btn enlighter-btn-website\" title=\"EnlighterJS 3 Syntax Highlighter\"></div></div><div class=\"enlighter\" style=\"\"><div class=\"\"><div><span class=\"enlighter-k5\">void</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">foo</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\">, </span><span class=\"enlighter-k5\">char</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    std::cout </span><span class=\"enlighter-g1\">&lt;&lt;</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-s0\">\"func 1\"</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">&lt;&lt;</span><span class=\"enlighter-text\"> std::endl;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-k5\">void</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">foo</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-k5\">char</span><span class=\"enlighter-text\">, </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    std::cout </span><span class=\"enlighter-g1\">&lt;&lt;</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-s0\">\"func 2\"</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">&lt;&lt;</span><span class=\"enlighter-text\"> std::endl;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">}</span></div></div></div><div class=\"enlighter-raw\">void foo(int, char) {\n    std::cout &lt;&lt; \"func 1\" &lt;&lt; std::endl;\n}\n \nvoid foo(char, int) {\n    std::cout &lt;&lt; \"func 2\" &lt;&lt; std::endl;\n}</div><div class=\"enlighter-toolbar-bottom enlighter-toolbar\"></div></div><pre class=\"EnlighterJSRAW enlighter-origin\" data-enlighter-language=\"cpp\" data-enlighter-theme=\"atomic\" data-enlighter-linenumbers=\"false\">void foo(int, char) {\n    std::cout &lt;&lt; \"func 1\" &lt;&lt; std::endl;\n}\n \nvoid foo(char, int) {\n    std::cout &lt;&lt; \"func 2\" &lt;&lt; std::endl;\n}</pre>\n\n\n<p>and if you called foo(‘a’, ‘a’) or foo(21, 21), the function call would be ambiguous and C++ compiler would throw an error however foo(‘a’, 21) or foo(21, ‘a’) would compile correctly. This is because the (char, char) or (int, int) can be internally promoted to either (char, int) or (int, char) which is why it is ambigious. However, (char, int) and (int, char) have specific implementations.</p>\n\n\n\n<p>This is what we basically call<strong> Function Overloading</strong>. We overload (redefine) the function alias to have different implementations and distinguish these based on either the number of arguments or the data type of arguments.</p>\n\n\n\n<p>These function overloading instances are a type of compile-time polymorphism. The C++ compiler at compile-time can easily deduce which function is being called by inspecting based on above conditions. Internally, both the functions have different signatures (signature meaning the structure / layout of the function – the number/type of argument it accepts) and the compiled object code references the correct functions.</p>\n\n\n\n<h2 id=\"function-overriding-in-c\">Function overriding in C++</h2>\n\n\n\n<p>Say instead of writing functions, I wanted to instead define an OOP based solution. First, we need to have a mapping of how we want to design these structures. One solution is : say I have a Rectangle class. Since we know that a Square is a Rectangle, we can create a subclass Square off of class Rectangle.</p>\n\n\n<div class=\"enlighter-default enlighter-v-standard enlighter-t-atomic enlighter-hover \"><div class=\"enlighter-toolbar-top enlighter-toolbar\"><div class=\"enlighter-btn enlighter-btn-raw\" title=\"Plain text\"></div><div class=\"enlighter-btn enlighter-btn-copy\" title=\"Copy to clipboard\"></div><div class=\"enlighter-btn enlighter-btn-window\" title=\"Open code in new window\"></div><div class=\"enlighter-btn enlighter-btn-website\" title=\"EnlighterJS 3 Syntax Highlighter\"></div></div><div class=\"enlighter\" style=\"\"><div class=\"\"><div><span class=\"enlighter-k4\">#include &lt;iostream&gt;</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-k0\">class</span><span class=\"enlighter-text\"> Rectangle </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k0\">private</span><span class=\"enlighter-text\">:</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">        </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> length, breadth;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k0\">public</span><span class=\"enlighter-text\">:</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">        </span><span class=\"enlighter-m0\">Rectangle</span><span class=\"enlighter-g1\">()</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">            length = 0, breadth = 0;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">        </span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">        </span><span class=\"enlighter-m0\">Rectangle</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> l, </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> b</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">            length = l;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">            breadth = b;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">        </span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">        </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">area</span><span class=\"enlighter-g1\">()</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">            </span><span class=\"enlighter-k0\">return</span><span class=\"enlighter-text\"> length * breadth;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">        </span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">        </span><span class=\"enlighter-k5\">void</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">helloFromRectangle</span><span class=\"enlighter-g1\">()</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">            std::cout </span><span class=\"enlighter-g1\">&lt;&lt;</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-s0\">\"Hello from Rectangle\"</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">&lt;&lt;</span><span class=\"enlighter-text\"> std::endl;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">        </span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-k0\">class</span><span class=\"enlighter-text\"> Square: </span><span class=\"enlighter-k0\">public</span><span class=\"enlighter-text\"> Rectangle </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k0\">private</span><span class=\"enlighter-text\">:</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">        </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> side;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k0\">public</span><span class=\"enlighter-text\">:</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">        </span><span class=\"enlighter-m0\">Square</span><span class=\"enlighter-g1\">()</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">            side = 0;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">        </span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">        </span><span class=\"enlighter-m0\">Square</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> s</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">            side = s;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">        </span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">        </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">area</span><span class=\"enlighter-g1\">()</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">            </span><span class=\"enlighter-k0\">return</span><span class=\"enlighter-text\"> side * side;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">        </span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">main</span><span class=\"enlighter-g1\">()</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    Rectangle </span><span class=\"enlighter-m0\">rect</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">5, 2</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    Square </span><span class=\"enlighter-m0\">square</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">5</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    std::cout </span><span class=\"enlighter-g1\">&lt;&lt;</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-s0\">\"Area of rectangle is \"</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">&lt;&lt;</span><span class=\"enlighter-text\"> rect.</span><span class=\"enlighter-m3\">area</span><span class=\"enlighter-g1\">()</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">&lt;&lt;</span><span class=\"enlighter-text\"> std::endl;    </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    std::cout </span><span class=\"enlighter-g1\">&lt;&lt;</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-s0\">\"Area of square is \"</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">&lt;&lt;</span><span class=\"enlighter-text\"> square.</span><span class=\"enlighter-m3\">area</span><span class=\"enlighter-g1\">()</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">&lt;&lt;</span><span class=\"enlighter-text\"> std::endl;    </span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   </span><span class=\"enlighter-c0\"> // child class inherits all functions as is except the overridden function</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    rect.</span><span class=\"enlighter-m3\">helloFromRectangle</span><span class=\"enlighter-g1\">()</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    square.</span><span class=\"enlighter-m3\">helloFromRectangle</span><span class=\"enlighter-g1\">()</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-k0\">return</span><span class=\"enlighter-text\"> 0;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-c1\">/* OUTPUT</span></div></div><div class=\"\"><div><span class=\"enlighter-c1\">Area of rectangle is 10</span></div></div><div class=\"\"><div><span class=\"enlighter-c1\">Area of square is 25</span></div></div><div class=\"\"><div><span class=\"enlighter-c1\">Hello from Rectangle</span></div></div><div class=\"\"><div><span class=\"enlighter-c1\">Hello from Rectangle</span></div></div><div class=\"\"><div><span class=\"enlighter-c1\">*/</span></div></div></div><div class=\"enlighter-raw\">#include &lt;iostream&gt;\n \nclass Rectangle {\n    private:\n        int length, breadth;\n \n    public:\n        Rectangle() {\n            length = 0, breadth = 0;\n        }\n \n        Rectangle(int l, int b) {\n            length = l;\n            breadth = b;\n        }\n \n        int area() {\n            return length * breadth;\n        }\n \n        void helloFromRectangle() {\n            std::cout &lt;&lt; \"Hello from Rectangle\" &lt;&lt; std::endl;\n        }\n};\n \nclass Square: public Rectangle {\n    private:\n        int side;\n \n    public:\n        Square() {\n            side = 0;\n        }\n \n        Square(int s) {\n            side = s;\n        }\n \n        int area() {\n            return side * side;\n        }\n};\n \nint main() {\n \n    Rectangle rect(5, 2);\n    Square square(5);\n \n    std::cout &lt;&lt; \"Area of rectangle is \" &lt;&lt; rect.area() &lt;&lt; std::endl;    \n    std::cout &lt;&lt; \"Area of square is \" &lt;&lt; square.area() &lt;&lt; std::endl;    \n \n    // child class inherits all functions as is except the overridden function\n    rect.helloFromRectangle();\n    square.helloFromRectangle();\n \n    return 0;\n}\n \n/* OUTPUT\nArea of rectangle is 10\nArea of square is 25\nHello from Rectangle\nHello from Rectangle\n*/</div><div class=\"enlighter-toolbar-bottom enlighter-toolbar\"></div></div><pre class=\"EnlighterJSRAW enlighter-origin\" data-enlighter-language=\"cpp\" data-enlighter-theme=\"atomic\" data-enlighter-linenumbers=\"false\">#include &lt;iostream&gt;\n \nclass Rectangle {\n    private:\n        int length, breadth;\n \n    public:\n        Rectangle() {\n            length = 0, breadth = 0;\n        }\n \n        Rectangle(int l, int b) {\n            length = l;\n            breadth = b;\n        }\n \n        int area() {\n            return length * breadth;\n        }\n \n        void helloFromRectangle() {\n            std::cout &lt;&lt; \"Hello from Rectangle\" &lt;&lt; std::endl;\n        }\n};\n \nclass Square: public Rectangle {\n    private:\n        int side;\n \n    public:\n        Square() {\n            side = 0;\n        }\n \n        Square(int s) {\n            side = s;\n        }\n \n        int area() {\n            return side * side;\n        }\n};\n \nint main() {\n \n    Rectangle rect(5, 2);\n    Square square(5);\n \n    std::cout &lt;&lt; \"Area of rectangle is \" &lt;&lt; rect.area() &lt;&lt; std::endl;    \n    std::cout &lt;&lt; \"Area of square is \" &lt;&lt; square.area() &lt;&lt; std::endl;    \n \n    // child class inherits all functions as is except the overridden function\n    rect.helloFromRectangle();\n    square.helloFromRectangle();\n \n    return 0;\n}\n \n/* OUTPUT\nArea of rectangle is 10\nArea of square is 25\nHello from Rectangle\nHello from Rectangle\n*/</pre>\n\n\n<p>We know that child classes inherit all public data and methods from the parent class. So the Square class also inherits the area function. However, we redefine the area function to be side*side. This redefinition of the area function is an example of <strong>function overriding.</strong> Basically, C++ knows that you specifically redefined the area function for the Square class. This overriding of function is a type of <strong>runtime polymorphism.</strong> C++ distinguishes the function call at runtime instead of knowing it during compilation because the function signature is similar at compile time.</p>\n\n\n\n<h2 id=\"function-overloading-vs-function-overriding-in-c\">Function Overloading vs Function Overriding in C++</h2>\n\n\n\n<p>As we’ve seen before, function overloading and function overriding play a similar role. They both provide an abstraction over the interface so that the end user doesn’t have to think much about the context and simply pass in the arguments. However, there are subtle differences in the two approaches.</p>\n\n\n\n<figure class=\"wp-block-table is-style-stripes\"><table class=\"has-fixed-layout\"><tbody><tr><td class=\"has-text-align-center\" data-align=\"center\"><strong>Function Overloading</strong></td><td class=\"has-text-align-center\" data-align=\"center\"><strong>Function Overriding</strong></td></tr><tr><td class=\"has-text-align-center\" data-align=\"center\">Function overriding is applicable exclusively to an inherited class (or in other words a subclass)</td><td class=\"has-text-align-center\" data-align=\"center\">Function overloading can be used in normal functions as well as in classes (for eg: constructor overloading is a classic example where you would vary the number/type of arguments for different initialisations)</td></tr><tr><td class=\"has-text-align-center\" data-align=\"center\">Function overloading is resolved at compile-time</td><td class=\"has-text-align-center\" data-align=\"center\">Function overriding is resolved at run-time.</td></tr><tr><td class=\"has-text-align-center\" data-align=\"center\">Overloaded functions are in same scope</td><td class=\"has-text-align-center\" data-align=\"center\">Overridden functions are in different scopes</td></tr><tr><td class=\"has-text-align-center\" data-align=\"center\">Overloaded functions have different function signatures</td><td class=\"has-text-align-center\" data-align=\"center\">Overridden functions have same function signatures</td></tr></tbody></table></figure>\n\n\n\n<p>The key-takeaway from this article is that both of these approaches are similar but at the same time quite different.</p>\n\n\n\n<h2 id=\"conclusion\">Conclusion</h2>\n\n\n\n<p>Function overloading and function overriding both seek to improve the interface and provide a consistent interface that should be intuitive to the user.They are used in different contexts. Function overloading is used when we want multiple functions providing similar implementation.</p>\n\n\n\n<p>However, function overriding is used when we want to add some additional functionality on top of base-class implementation.</p>\n\n<!-- MOLONGUI AUTHORSHIP PLUGIN 4.3.3 -->\n<!-- https://www.molongui.com/authorship/ -->\n<div class=\"molongui-clearfix\"></div>\n<div id=\"mab-3480863505\" class=\"m-a-box \" data-plugin-release=\"4.3.3\" data-plugin-version=\"free\" data-box-layout=\"slim\" data-box-position=\"below\" data-multiauthor=\"false\" data-author-type=\"guest\" itemscope=\"\" itemtype=\"https://schema.org/Person\" style=\"width: 100%;            margin: 20px auto;\">\n\n\t\n    <div class=\"m-a-box-container\n                molongui-border-right-none molongui-border-left-none                molongui-border-style-solid                molongui-border-width-3-px\n                m-a-box-shadow-right\" style=\"border-color: #adadad;                background-color: #efefef;\">\n\n        <div class=\"m-a-box-tab m-a-box-content m-a-box-profile\" data-profile-layout=\"layout-1\" data-author-ref=\"guest-701\">\n            \n<div class=\"m-a-box-content-top\">\n\n\t\n</div><!-- End of .m-a-box-content-top -->\n\n<div class=\"m-a-box-content-middle\">\n\n    <!-- Author picture -->\n    \n\t<div class=\"m-a-box-item m-a-box-avatar \">\n\t\t                <span>\n                    <img alt=\"\" src=\"https://secure.gravatar.com/avatar/?s=150&amp;d=mp&amp;r=g\" srcset=\"https://secure.gravatar.com/avatar/?s=300&amp;d=mp&amp;r=g 2x\" class=\"avatar avatar-150 photo avatar-default m-radius-none molongui-border-style-solid molongui-border-width-2-px\" height=\"150\" width=\"150\" style=\"border-color:#bfbfbf;\" itemprop=\"image\" loading=\"lazy\">                </span>\n                \t</div>\n\n    <!-- Author social -->\n    \n    <!-- Author data -->\n    <div class=\"m-a-box-item m-a-box-data \">\n\n        <!-- Author name -->\n        \n<div class=\"m-a-box-title\">\n\t<h5 class=\"molongui-font-size-22-px\n\t        molongui-text-align-left                        molongui-text-case-none\" style=\"color: inherit\" itemprop=\"name\">\n                        <span class=\"molongui-font-size-22-px molongui-text-align-left\" style=\"color:inherit;\">\n\t\t\t        Yash Dusing                </span>\n\t            \t</h5>\n</div>\n        <!-- Author metadata -->\n        \n<div class=\"m-a-box-item m-a-box-meta\n            molongui-font-size-12-px\n            molongui-text-align-left                        molongui-text-case-none\" style=\"color: inherit\">\n\n    \n    \n    \n\t\n\t\n\t\n\t        \t\t<script type=\"text/javascript\" language=\"JavaScript\">\n\t\t\tif ( typeof window.ToggleAuthorshipData === 'undefined' )\n\t\t\t{\n\t\t\t\tfunction ToggleAuthorshipData(id, author)\n\t\t\t\t{\n\t\t\t\t\tvar box_selector = '#mab-' + id;\n                    var box = document.querySelector(box_selector);\n                    if ( box.getAttribute('data-multiauthor') ) box_selector = '#mab-' + id + ' [data-author-ref=\"' + author + '\"]';\n\t\t\t\t\tvar label = document.querySelector(box_selector + ' ' + '.m-a-box-data-toggle');\n\t\t\t\t\tlabel.innerHTML = ( label.text.trim() === \"+ posts\" ? \" <span class=\\\"m-a-box-string-bio\\\">Bio</span>\" : \" <span class=\\\"m-a-box-string-more-posts\\\">+ posts</span>\" );\n\t\t\t\t\tvar bio     = document.querySelector(box_selector + ' ' + '.m-a-box-bio');\n\t\t\t\t\tvar related = document.querySelector(box_selector + ' ' + '.m-a-box-related-entries');\n\n\t\t\t\t\tif ( related.style.display === \"none\" )\n\t\t\t\t\t{\n\t\t\t\t\t\trelated.style.display = \"block\";\n\t\t\t\t\t\tbio.style.display     = \"none\";\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\trelated.style.display = \"none\";\n\t\t\t\t\t\tbio.style.display     = \"block\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t</script>\n\t\t<a href=\"javascript:ToggleAuthorshipData(3480863505, 'guest-701')\" class=\"m-a-box-data-toggle\" style=\"color: inherit\" rel=\"nofollow\"> <span class=\"m-a-box-string-more-posts\">+ posts</span> </a>\n\t\n</div><!-- End of .m-a-box-meta -->\n\n        <!-- Author bio -->\n        \n<div class=\"m-a-box-bio\" itemprop=\"description\">\n\t<div class=\"molongui-font-size-14-px molongui-text-align-justify  molongui-line-height-10\" style=\"color: inherit\">\n\t    \t</div>\n</div>\n\n        \n            <!-- Author related posts -->\n            <div class=\"m-a-box-related\" data-related-layout=\"layout-1\">\n                <div class=\"m-a-box-item m-a-box-related-entries\" style=\"display: none;\">\n\n                                        <ul class=\"molongui-font-size-14-px \" style=\"color: inherit\">\n                            <li>\n        <div class=\"m-a-box-related-entry\" itemscope=\"\" itemtype=\"http://schema.org/CreativeWork\">\n            <div class=\"molongui-display-none\" itemprop=\"author\" itemscope=\"\" itemtype=\"http://schema.org/Person\">\n                <div itemprop=\"name\">Yash Dusing</div>\n                <div itemprop=\"url\">#molongui-disabled-link</div>\n            </div>\n            <div class=\"m-a-box-related-entry-title\">\n                <i class=\"m-a-icon-doc\"></i>\n                <a class=\"molongui-remove-text-underline\" itemprop=\"url\" href=\"https://www.scaler.com/topics/matrix-multiplication-in-java/\">\n                    <span itemprop=\"headline\">Matrix Multiplication in Java</span>\n                </a>\n            </div>\n        </div>\n    </li>\n                        </ul>\n\n                </div><!-- End of .m-a-box-related-entries -->\n            </div><!-- End of .m-a-box-related -->\n\n        \n    </div><!-- End of .m-a-box-data -->\n\n</div><!-- End of .m-a-box-content-middle -->\n\n<div class=\"m-a-box-content-bottom\"></div><!-- End of .m-a-box-content-bottom -->        </div><!-- End of .m-a-box-profile -->\n\n        \n    </div><!-- End of .m-a-box-container -->\n\n\t\n</div><!-- End of .m-a-box -->\t</div><!-- .entry-content -->\n\t</div>\n\t<footer class=\"entry-footer\">\n\t\t<span class=\"cat-links\">Posted in <a href=\"https://www.scaler.com/topics/category/c-2/\" rel=\"category tag\">C++</a></span> | <span class=\"tags-links\">Tagged <a href=\"https://www.scaler.com/topics/tag/difference-between-overloading-and-overriding/\" rel=\"tag\">difference between overloading and overriding</a>, <a href=\"https://www.scaler.com/topics/tag/function-overloading/\" rel=\"tag\">function overloading</a>, <a href=\"https://www.scaler.com/topics/tag/function-overloading-in-c/\" rel=\"tag\">function overloading in c++</a>, <a href=\"https://www.scaler.com/topics/tag/function-overriding/\" rel=\"tag\">function overriding</a>, <a href=\"https://www.scaler.com/topics/tag/function-overriding-in-c/\" rel=\"tag\">function overriding in c++</a>, <a href=\"https://www.scaler.com/topics/tag/overloading-in-c/\" rel=\"tag\">overloading in c++</a></span>\t</footer><!-- .entry-footer -->\n</article><!-- #post-## -->\n\n\n\n\t<nav class=\"navigation post-navigation\" role=\"navigation\" aria-label=\"Posts\">\n\t\t<h2 class=\"screen-reader-text\">Post navigation</h2>\n\t\t<div class=\"nav-links\"><div class=\"nav-previous\"><a href=\"https://www.scaler.com/topics/boolean-in-c/\" rel=\"prev\">Boolean in C</a></div><div class=\"nav-next\"><a href=\"https://www.scaler.com/topics/transpose-of-a-matrix-in-c/\" rel=\"next\">Transpose of a Matrix in C</a></div></div>\n\t</nav>\n<div id=\"comments\" class=\"comments-area\">\n\n    \n    \t<div id=\"respond\" class=\"comment-respond\">\n\t\t<h3 id=\"reply-title\" class=\"comment-reply-title\">Leave a Reply <small><a rel=\"nofollow\" id=\"cancel-comment-reply-link\" href=\"/topics/difference-between-function-overloading-and-overriding-in-cpp/#respond\" style=\"display:none;\">Cancel Reply</a></small></h3><p class=\"must-log-in\">You must be <a href=\"https://www.scaler.com/topics/wp-login.php?redirect_to=https%3A%2F%2Fwww.scaler.com%2Ftopics%2Fdifference-between-function-overloading-and-overriding-in-cpp%2F\">logged in</a> to post a comment.</p>\t</div><!-- #respond -->\n\t\n</div><!-- #comments -->\n\n\t\t</div><!-- #main -->\n\t</section><!-- #primary -->\n\n\t\t\t</div><!-- .row -->\n\t\t</div><!-- .container -->\n\t</div><!-- #content -->\n    \t<footer id=\"colophon\" class=\"site-footer navbar-light bg-light\" role=\"contentinfo\">\n\t\t<div class=\"container pt-3 pb-3\">\n            <div class=\"site-info text-center\">\n\t\t\t\tCopyright © 2021 InterviewBit Technologies Pte. Ltd. All Rights Reserved\n            </div><!-- close .site-info -->\n\t\t</div>\n\t</footer><!-- #colophon -->\n</div><!-- #page -->\n\n<script type=\"text/javascript\" id=\"molongui-authorship-js-extra\">\n/* <![CDATA[ */\nvar molongui_authorship = {\"byline_prefix\":\"\",\"byline_suffix\":\"\",\"byline_separator\":\", \",\"byline_last_separator\":\" and \",\"byline_link_title\":\"View all posts by\",\"byline_dom_tree\":\"\"};\n/* ]]> */\n</script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/plugins/molongui-authorship/public/js/molongui-authorship.5a1d.min.js?ver=4.3.3\" id=\"molongui-authorship-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/js/popper.min.js?ver=5.7.2\" id=\"wp-bootstrap-starter-popper-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/js/bootstrap.min.js?ver=5.7.2\" id=\"wp-bootstrap-starter-bootstrapjs-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/js/theme-script.min.js?ver=5.7.2\" id=\"wp-bootstrap-starter-themejs-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/js/skip-link-focus-fix.min.js?ver=20151215\" id=\"wp-bootstrap-starter-skip-link-focus-fix-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-includes/js/comment-reply.min.js?ver=5.7.2\" id=\"comment-reply-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/plugins/gutentoc-advance-table-of-content/dist/toc.js?ver=5.7.2\" id=\"gutentocjs-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/plugins/enlighter/cache/enlighterjs.min.js?ver=0UVtrfqVvCkLefk\" id=\"enlighterjs-js\"></script>\n<script type=\"text/javascript\" id=\"enlighterjs-js-after\">\n!function(e,n){if(\"undefined\"!=typeof EnlighterJS){var o={\"selectors\":{\"block\":\"pre.EnlighterJSRAW\",\"inline\":\"code.EnlighterJSRAW\"},\"options\":{\"indent\":2,\"ampersandCleanup\":true,\"linehover\":true,\"rawcodeDbclick\":false,\"textOverflow\":\"break\",\"linenumbers\":true,\"theme\":\"classic\",\"language\":\"generic\",\"retainCssClasses\":false,\"collapse\":false,\"toolbarOuter\":\"\",\"toolbarTop\":\"{BTN_RAW}{BTN_COPY}{BTN_WINDOW}{BTN_WEBSITE}\",\"toolbarBottom\":\"\"}};(e.EnlighterJSINIT=function(){EnlighterJS.init(o.selectors.block,o.selectors.inline,o.options)})()}else{(n&&(n.error||n.log)||function(){})(\"Error: EnlighterJS resources not loaded yet!\")}}(window,console);\n</script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-includes/js/wp-embed.min.js?ver=5.7.2\" id=\"wp-embed-js\"></script>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/css-element-queries@1.2.2/src/ResizeSensor.min.js?ver=1.2.2\" id=\"molongui-resizesensor-js\"></script>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/css-element-queries@1.2.2/src/ElementQueries.min.js?ver=1.2.2\" id=\"molongui-elementqueries-js\"></script>\n<script>\n\nfunction is_logged_in()\n{\n\nlet xhr = new XMLHttpRequest();\n\nxhr.open('GET', 'https://www.interviewbit.com/get_user_options/', false);\n\ntry {\n  xhr.send();\n  if (xhr.status != 200) {\n   console.log(`Error ${xhr.status}: ${xhr.statusText}`);\n  } else {\n\n  if(JSON.parse(xhr.response).logged_in == true){\n  return true;\n  }\n  else{\n  return false;\n  }\n     \n  }\n} catch(err) { // instead of onerror\n  console.log(\"Request failed\");\n}\n\t\n}\n\n\t\n</script>\n\n</body>", slug: 'hello-world')





Article.create(title: 'How to Change Font and Text Color Using CSS',content: "<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <link rel=\"profile\" href=\"http://gmpg.org/xfn/11\">\n\n<!-- Author Meta Tags by Molongui Authorship 4.3.3, visit: https://wordpress.org/plugins/molongui-authorship/ -->\n<meta name=\"author\" content=\"Jasleen Sondhi\">\n<!-- /Molongui Authorship -->\n\n<title>How to Change Font and Text Color Using CSS - Scaler Topics</title>\n\n<!-- The SEO Framework by Sybre Waaijer -->\n<meta name=\"robots\" content=\"max-snippet:-1,max-image-preview:standard,max-video-preview:-1\">\n<meta name=\"description\" content=\"Learn how to change text or font color using CSS using color keywords, hexadecimal values and RGBA color values. In this article, Scaler Topics explains 3 different ways to change text color using CSS.\">\n<meta property=\"og:image\" content=\"https://www.scaler.com/topics/media/change-font-color-using-css.png\">\n<meta property=\"og:image:width\" content=\"2134\">\n<meta property=\"og:image:height\" content=\"1042\">\n<meta property=\"og:image:alt\" content=\"How to Change Font and Text Color Using CSS\">\n<meta property=\"og:locale\" content=\"en_US\">\n<meta property=\"og:type\" content=\"article\">\n<meta property=\"og:title\" content=\"How to Change Font and Text Color Using CSS - Scaler Topics\">\n<meta property=\"og:description\" content=\"Learn how to change text or font color using CSS using color keywords, hexadecimal values and RGBA color values. In this article, Scaler Topics explains 3 different ways to change text color using CSS.\">\n<meta property=\"og:url\" content=\"https://www.scaler.com/topics/change-font-color-using-css/\">\n<meta property=\"og:site_name\" content=\"Scaler Topics\">\n<meta property=\"og:updated_time\" content=\"2021-07-22\">\n<meta property=\"article:published_time\" content=\"2021-07-19\">\n<meta property=\"article:modified_time\" content=\"2021-07-22\">\n<meta name=\"twitter:card\" content=\"summary_large_image\">\n<meta name=\"twitter:title\" content=\"How to Change Font and Text Color Using CSS - Scaler Topics\">\n<meta name=\"twitter:description\" content=\"Learn how to change text or font color using CSS using color keywords, hexadecimal values and RGBA color values. In this article, Scaler Topics explains 3 different ways to change text color using CSS.\">\n<meta name=\"twitter:image\" content=\"https://www.scaler.com/topics/media/change-font-color-using-css.png\">\n<meta name=\"twitter:image:width\" content=\"2134\">\n<meta name=\"twitter:image:height\" content=\"1042\">\n<meta name=\"twitter:image:alt\" content=\"How to Change Font and Text Color Using CSS\">\n<link rel=\"canonical\" href=\"https://www.scaler.com/topics/change-font-color-using-css/\">\n<script type=\"text/javascript\" async=\"\" src=\"https://www.google-analytics.com/analytics.js\"></script><script type=\"application/ld+json\">{\"@context\":\"https://schema.org\",\"@type\":\"BreadcrumbList\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"item\":{\"@id\":\"https://www.scaler.com/topics/\",\"name\":\"Scaler Topics\"}},{\"@type\":\"ListItem\",\"position\":2,\"item\":{\"@id\":\"https://www.scaler.com/topics/category/css/\",\"name\":\"CSS\"}},{\"@type\":\"ListItem\",\"position\":3,\"item\":{\"@id\":\"https://www.scaler.com/topics/change-font-color-using-css/\",\"name\":\"How to Change Font and Text Color Using CSS &#x2d; Scaler Topics\"}}]}</script>\n<meta name=\"p:domain_verify\" content=\"7e10627c0f88fb1a4f4c6ae8c0d34b16\">\n<!-- / The SEO Framework by Sybre Waaijer | 3.24ms meta | 0.36ms boot -->\n\n<link rel=\"dns-prefetch\" href=\"//fonts.googleapis.com\">\n<link rel=\"dns-prefetch\" href=\"//s.w.org\">\n<link rel=\"alternate\" type=\"application/rss+xml\" title=\"Scaler Topics » Feed\" href=\"https://www.scaler.com/topics/feed/\">\n<link rel=\"alternate\" type=\"application/rss+xml\" title=\"Scaler Topics » Comments Feed\" href=\"https://www.scaler.com/topics/comments/feed/\">\n<link rel=\"alternate\" type=\"application/rss+xml\" title=\"Scaler Topics » How to Change Font and Text Color Using CSS Comments Feed\" href=\"https://www.scaler.com/topics/change-font-color-using-css/feed/\">\n\t\t<script type=\"text/javascript\">\n\t\t\twindow._wpemojiSettings = {\"baseUrl\":\"https:\\/\\/s.w.org\\/images\\/core\\/emoji\\/13.0.1\\/72x72\\/\",\"ext\":\".png\",\"svgUrl\":\"https:\\/\\/s.w.org\\/images\\/core\\/emoji\\/13.0.1\\/svg\\/\",\"svgExt\":\".svg\",\"source\":{\"concatemoji\":\"https:\\/\\/www.scaler.com\\/topics\\/wp-includes\\/js\\/wp-emoji-release.min.js?ver=5.7.2\"}};\n\t\t\t!function(e,a,t){var n,r,o,i=a.createElement(\"canvas\"),p=i.getContext&&i.getContext(\"2d\");function s(e,t){var a=String.fromCharCode;p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,e),0,0);e=i.toDataURL();return p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,t),0,0),e===i.toDataURL()}function c(e){var t=a.createElement(\"script\");t.src=e,t.defer=t.type=\"text/javascript\",a.getElementsByTagName(\"head\")[0].appendChild(t)}for(o=Array(\"flag\",\"emoji\"),t.supports={everything:!0,everythingExceptFlag:!0},r=0;r<o.length;r++)t.supports[o[r]]=function(e){if(!p||!p.fillText)return!1;switch(p.textBaseline=\"top\",p.font=\"600 32px Arial\",e){case\"flag\":return s([127987,65039,8205,9895,65039],[127987,65039,8203,9895,65039])?!1:!s([55356,56826,55356,56819],[55356,56826,8203,55356,56819])&&!s([55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447],[55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447]);case\"emoji\":return!s([55357,56424,8205,55356,57212],[55357,56424,8203,55356,57212])}return!1}(o[r]),t.supports.everything=t.supports.everything&&t.supports[o[r]],\"flag\"!==o[r]&&(t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&t.supports[o[r]]);t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&!t.supports.flag,t.DOMReady=!1,t.readyCallback=function(){t.DOMReady=!0},t.supports.everything||(n=function(){t.readyCallback()},a.addEventListener?(a.addEventListener(\"DOMContentLoaded\",n,!1),e.addEventListener(\"load\",n,!1)):(e.attachEvent(\"onload\",n),a.attachEvent(\"onreadystatechange\",function(){\"complete\"===a.readyState&&t.readyCallback()})),(n=t.source||{}).concatemoji?c(n.concatemoji):n.wpemoji&&n.twemoji&&(c(n.twemoji),c(n.wpemoji)))}(window,document,window._wpemojiSettings);\n\t\t</script><script src=\"https://www.scaler.com/topics/wp-includes/js/wp-emoji-release.min.js?ver=5.7.2\" type=\"text/javascript\" defer=\"\"></script>\n\t\t<style type=\"text/css\">\nimg.wp-smiley,\nimg.emoji {\n\tdisplay: inline !important;\n\tborder: none !important;\n\tbox-shadow: none !important;\n\theight: 1em !important;\n\twidth: 1em !important;\n\tmargin: 0 .07em !important;\n\tvertical-align: -0.1em !important;\n\tbackground: none !important;\n\tpadding: 0 !important;\n}\n</style>\n\t<link rel=\"stylesheet\" id=\"wp-quicklatex-format-css\" href=\"https://www.scaler.com/topics/wp-content/plugins/wp-quicklatex/css/quicklatex-format.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-block-library-css\" href=\"https://www.scaler.com/topics/wp-includes/css/dist/block-library/style.min.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"gutentocwp-cgb-style-css-css\" href=\"https://www.scaler.com/topics/wp-content/plugins/gutentoc-advance-table-of-content/dist/blocks.style.build.css\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"child-theme-generator-css\" href=\"https://www.scaler.com/topics/wp-content/plugins/child-theme-generator/public/css/child-theme-generator-public.css?ver=1.0.0\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"molongui-authorship-css\" href=\"https://www.scaler.com/topics/wp-content/plugins/molongui-authorship/public/css/molongui-authorship.27a7.min.css?ver=4.3.3\" type=\"text/css\" media=\"all\">\n<style id=\"molongui-authorship-inline-css\" type=\"text/css\">\n:root{ --m-a-box-bp: 600px; --m-a-box-bp-l: 599px; }\n</style>\n<link rel=\"stylesheet\" id=\"parente2-style-css\" href=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/style.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"childe2-style-css\" href=\"https://www.scaler.com/topics/wp-content/themes/InterviewBit/style.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-bootstrap-starter-bootstrap-css-css\" href=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/css/bootstrap.min.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-bootstrap-starter-fontawesome-cdn-css\" href=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/css/fontawesome.min.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-bootstrap-starter-style-css\" href=\"https://www.scaler.com/topics/wp-content/themes/InterviewBit/style.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-bootstrap-starter-litera-css\" href=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/css/presets/theme-option/litera.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-bootstrap-starter-montserrat-opensans-font-css\" href=\"https://fonts.googleapis.com/css?family=Montserrat%7COpen+Sans%3A300%2C300i%2C400%2C400i%2C600%2C600i%2C700%2C800&amp;ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-bootstrap-starter-montserrat-opensans-css\" href=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/css/presets/typography/montserrat-opensans.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"enlighterjs-css\" href=\"https://www.scaler.com/topics/wp-content/plugins/enlighter/cache/enlighterjs.min.css?ver=0UVtrfqVvCkLefk\" type=\"text/css\" media=\"all\">\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-includes/js/jquery/jquery.min.js?ver=3.5.1\" id=\"jquery-core-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-includes/js/jquery/jquery-migrate.min.js?ver=3.3.2\" id=\"jquery-migrate-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/plugins/child-theme-generator/public/js/child-theme-generator-public.js?ver=1.0.0\" id=\"child-theme-generator-js\"></script>\n<!--[if lt IE 9]>\n<script type='text/javascript' src='https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/js/html5.js?ver=3.7.0' id='html5hiv-js'></script>\n<![endif]-->\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/plugins/wp-quicklatex/js/wp-quicklatex-frontend.js?ver=1.0\" id=\"wp-quicklatex-frontend-js\"></script>\n<link rel=\"https://api.w.org/\" href=\"https://www.scaler.com/topics/wp-json/\"><link rel=\"alternate\" type=\"application/json\" href=\"https://www.scaler.com/topics/wp-json/wp/v2/posts/68\"><link rel=\"EditURI\" type=\"application/rsd+xml\" title=\"RSD\" href=\"https://www.scaler.com/topics/xmlrpc.php?rsd\">\n<link rel=\"wlwmanifest\" type=\"application/wlwmanifest+xml\" href=\"https://www.scaler.com/topics/wp-includes/wlwmanifest.xml\"> \n<link rel=\"alternate\" type=\"application/json+oembed\" href=\"https://www.scaler.com/topics/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.scaler.com%2Ftopics%2Fchange-font-color-using-css%2F\">\n<link rel=\"alternate\" type=\"text/xml+oembed\" href=\"https://www.scaler.com/topics/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.scaler.com%2Ftopics%2Fchange-font-color-using-css%2F&amp;format=xml\">\n<link rel=\"pingback\" href=\"https://www.scaler.com/topics/xmlrpc.php\">    <style type=\"text/css\">\n        #page-sub-header { background: #fff; }\n    </style>\n    <link rel=\"icon\" href=\"https://www.scaler.com/topics/media/cropped-android-chrome-512x512-1-32x32.png\" sizes=\"32x32\">\n<link rel=\"icon\" href=\"https://www.scaler.com/topics/media/cropped-android-chrome-512x512-1-192x192.png\" sizes=\"192x192\">\n<link rel=\"apple-touch-icon\" href=\"https://www.scaler.com/topics/media/cropped-android-chrome-512x512-1-180x180.png\">\n<meta name=\"msapplication-TileImage\" content=\"https://www.scaler.com/topics/media/cropped-android-chrome-512x512-1-270x270.png\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\n<link href=\"https://fonts.googleapis.com/css2?family=Roboto&amp;display=swap\" rel=\"stylesheet\">\n\t<!-- Global site tag (gtag.js) - Google Analytics -->\n<script async=\"\" src=\"https://www.googletagmanager.com/gtag/js?id=UA-56207880-1\"></script>\n<script>\n  window.dataLayer = window.dataLayer || [];\n  function gtag(){dataLayer.push(arguments);}\n  gtag('js', new Date());\n\n  gtag('config', 'UA-56207880-1');\n</script>\n<style type=\"text/css\">[responsive-image] > img, [data-responsive-image] {overflow: hidden; padding: 0; } [responsive-image] > img, [data-responsive-image] > img {width: 100%;}\n@keyframes element-queries { 0% { visibility: inherit; } }</style></head>\n\n<body class=\"post-template-default single single-post postid-68 single-format-standard topics group-blog theme-preset-active\">\n\n\n<div id=\"page\" class=\"site\">\n\t<!-- #masthead -->\n    \t<div id=\"content\" class=\"site-content\">\n\t\t<div class=\"container\">\n\t\t\t<div class=\"row\">\n                \n\t<section id=\"primary\" class=\"content-area col-sm-12 col-lg-8 mx-auto\">\n\t\t<div id=\"main\" class=\"site-main\" role=\"main\">\n\n\t\t\n\n\n<article id=\"post-68\" class=\"post-68 post type-post status-publish format-standard has-post-thumbnail hentry category-css tag-change-font-color-in-css tag-change-text-color-in-css\">\n\t<div class=\"post-thumbnail mb-3\">\n\t\t<img width=\"2134\" height=\"1042\" src=\"https://www.scaler.com/topics/media/change-font-color-using-css.png\" class=\"attachment-post-thumbnail size-post-thumbnail wp-post-image\" alt=\"How to Change Font and Text Color Using CSS\" loading=\"lazy\" srcset=\"https://www.scaler.com/topics/media/change-font-color-using-css.png 2134w, https://www.scaler.com/topics/media/change-font-color-using-css-300x146.png 300w, https://www.scaler.com/topics/media/change-font-color-using-css-1024x500.png 1024w, https://www.scaler.com/topics/media/change-font-color-using-css-768x375.png 768w, https://www.scaler.com/topics/media/change-font-color-using-css-1536x750.png 1536w, https://www.scaler.com/topics/media/change-font-color-using-css-2048x1000.png 2048w\" sizes=\"(max-width: 2134px) 100vw, 2134px\">\t</div>\n\t<div class=\"post-content-here\">\n\n\t<header class=\"entry-header\">\n\t\t<h1 class=\"entry-title\">How to Change Font and Text Color Using CSS</h1>\t\t<div class=\"entry-meta\">\n<!-- \t\t\t<span class=\"posted-on\">Posted on <a href=\"https://www.scaler.com/topics/change-font-color-using-css/\" rel=\"bookmark\"><time class=\"entry-date published\" datetime=\"2021-07-19T17:02:07+05:30\">July 19, 2021</time></a></span> | <span class=\"byline\"> by <span class=\"author vcard\"><a class=\"url fn n\" href=\"#molongui-disabled-link\">Jasleen Sondhi</a></span></span> -->\n\t\t</div><!-- .entry-meta -->\n\t\t\t</header><!-- .entry-header -->\n\t<div class=\"entry-content\">\n\t\t\n<div class=\"gutentoc tocactive nostyle\"><div class=\"gutentoc-toc-wrap\"><div class=\"gutentoc-toc-title-wrap\"><div class=\"gutentoc-toc-title\">Table Of Contents</div><div id=\"open\" class=\"toggleone\">show</div></div><div id=\"toclist\"><div class=\"gutentoc-toc__list-wrap\"><ul class=\"gutentoc-toc__list\"><li><a href=\"#setting-up-a-html-file\">Setting up a HTML file</a></li><li><a href=\"#learning-how-to-change-text-color-in-css\">Learning how to change text color in CSS</a></li><li><a href=\"#using-color-keywords-to-change-text-color-in-css\">Using color keywords to change text color in CSS</a></li><li><a href=\"#using-hexadecimal-values-to-change-text-colors-in-css\">Using Hexadecimal values to change text colors in CSS</a></li><li><a href=\"#using-rgba-color-values-to-change-text-color-in-css\">Using RGBA color values to change text color in CSS</a></li><li><a href=\"#conclusion\">Conclusion</a></li></ul></div></div></div></div>\n\n\n\n<p><span style=\"font-weight: 400;\">The presentation of a document written in markup languages such as HTML is described using a style sheet language known as CSS. HTML stands for</span><b><i> HyperText Markup Language</i></b><span style=\"font-weight: 400;\"> whereas CSS is the abbreviation for </span><b><i>Cascading Style Sheets</i></b><span style=\"font-weight: 400;\">. They are unique in their syntax. While HTML could be regarded as the structure of a website, CSS is the styling done on the structure.</span></p>\n\n\n\n<p><span style=\"font-weight: 400;\">It is quite interesting to note that several websites could very well have the same HTML code but their styling or CSS is what would make them different! Talking about CSS in particular, a graphic designer displays their creativity through it. Not only does it give the web designer control over the appearance of the web pages but also aids in creating a visual-hierarchy through parameters like shape,color, space and size.</span></p>\n\n\n\n<p><span style=\"font-weight: 400;\">So let’s dive into this tutorial and learn the different ways of how we can </span><b>change font color</b><span style=\"font-weight: 400;\"> and also </span><b>change text color in CSS</b><span style=\"font-weight: 400;\">.</span></p>\n\n\n\n<figure class=\"wp-block-gallery aligncenter columns-1 is-cropped\"><ul class=\"blocks-gallery-grid\"><li class=\"blocks-gallery-item\"><figure><img loading=\"lazy\" width=\"1024\" height=\"549\" src=\"https://www.scaler.com/topics/media/change-font-color-in-css-1024x549.jpg\" alt=\"\" data-id=\"1194\" data-full-url=\"https://www.scaler.com/topics/media/change-font-color-in-css.jpg\" data-link=\"https://www.scaler.com/topics/?attachment_id=1194\" class=\"wp-image-1194\" srcset=\"https://www.scaler.com/topics/media/change-font-color-in-css-1024x549.jpg 1024w, https://www.scaler.com/topics/media/change-font-color-in-css-300x161.jpg 300w, https://www.scaler.com/topics/media/change-font-color-in-css-768x412.jpg 768w, https://www.scaler.com/topics/media/change-font-color-in-css.jpg 1188w\" sizes=\"(max-width: 1024px) 100vw, 1024px\"></figure></li></ul></figure>\n\n\n\n<h2 id=\"setting-up-a-html-file\">Setting up a HTML file</h2>\n\n\n\n<p><span style=\"font-weight: 400;\">Let’s create a HTML file named </span><i><span style=\"font-weight: 400;\">Index.html</span></i><span style=\"font-weight: 400;\">. We will call its CSS file as </span><i><span style=\"font-weight: 400;\">style.css</span></i><span style=\"font-weight: 400;\">. Using this file, you will learn how to </span><b>change text color in CSS</b><span style=\"font-weight: 400;\">.</span></p>\n\n\n\n<p><span style=\"font-weight: 400;\">After adding the required boilerplate, the contents </span><i><span style=\"font-weight: 400;\">Index.html </span></i><span style=\"font-weight: 400;\">are as follows –</span></p>\n\n\n<div class=\"enlighter-default enlighter-v-standard enlighter-t-atomic enlighter-hover \"><div class=\"enlighter-toolbar-top enlighter-toolbar\"><div class=\"enlighter-btn enlighter-btn-raw\" title=\"Plain text\"></div><div class=\"enlighter-btn enlighter-btn-copy\" title=\"Copy to clipboard\"></div><div class=\"enlighter-btn enlighter-btn-window\" title=\"Open code in new window\"></div><div class=\"enlighter-btn enlighter-btn-website\" title=\"EnlighterJS 3 Syntax Highlighter\"></div></div><div class=\"enlighter\" style=\"\"><div class=\"\"><div><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-text\">!doctype html</span><span class=\"enlighter-g1\">&gt;</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-text\">html</span><span class=\"enlighter-g1\">&gt;</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-text\">head</span><span class=\"enlighter-g1\">&gt;</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-text\">link href=</span><span class=\"enlighter-s0\">\"style.css\"</span><span class=\"enlighter-text\"> rel=</span><span class=\"enlighter-s0\">\"stylesheet\"</span><span class=\"enlighter-text\"> /</span><span class=\"enlighter-g1\">&gt;</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-text\">/head</span><span class=\"enlighter-g1\">&gt;</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-text\">body</span><span class=\"enlighter-g1\">&gt;</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-text\">h</span><span class=\"enlighter-x13\">1</span><span class=\"enlighter-g1\">&gt;</span><span class=\"enlighter-text\">Welcome to InterviewBit!</span><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-text\">/h</span><span class=\"enlighter-x13\">1</span><span class=\"enlighter-g1\">&gt;</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-text\">h</span><span class=\"enlighter-x13\">2</span><span class=\"enlighter-g1\">&gt;</span><span class=\"enlighter-text\"> Learning CSS!</span><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-text\">/h</span><span class=\"enlighter-x13\">2</span><span class=\"enlighter-g1\">&gt;</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-text\">p</span><span class=\"enlighter-g1\">&gt;</span><span class=\"enlighter-text\"> Hello World!</span><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-text\">/p</span><span class=\"enlighter-g1\">&gt;</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-text\">/body</span><span class=\"enlighter-g1\">&gt;</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-text\">/html</span><span class=\"enlighter-g1\">&gt;</span></div></div></div><div class=\"enlighter-raw\">&lt;!doctype html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;link href=\"style.css\" rel=\"stylesheet\" /&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;Welcome to InterviewBit!&lt;/h1&gt;\n    &lt;h2&gt; Learning CSS!&lt;/h2&gt;\n    &lt;p&gt; Hello World!&lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;</div><div class=\"enlighter-toolbar-bottom enlighter-toolbar\"></div></div><pre class=\"EnlighterJSRAW enlighter-origin\" data-enlighter-language=\"css\" data-enlighter-theme=\"atomic\" data-enlighter-linenumbers=\"false\">&lt;!doctype html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;link href=\"style.css\" rel=\"stylesheet\" /&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;Welcome to InterviewBit!&lt;/h1&gt;\n    &lt;h2&gt; Learning CSS!&lt;/h2&gt;\n    &lt;p&gt; Hello World!&lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;</pre>\n\n\n<h2 id=\"learning-how-to-change-text-color-in-css\">Learning how to change text color in CSS</h2>\n\n\n\n<p><span style=\"font-weight: 400;\">We can </span><b>change text color in CSS</b><span style=\"font-weight: 400;\"> quite easily. There are three techniques we can use which are as follows-</span></p>\n\n\n\n<ul><li><span style=\"font-weight: 400;\">Using Color Keywords</span></li><li><span style=\"font-weight: 400;\">Using Hexadecimal Values</span></li><li><span style=\"font-weight: 400;\">Using RGBA Color Values</span></li></ul>\n\n\n\n<figure class=\"wp-block-gallery columns-1 is-cropped\"><ul class=\"blocks-gallery-grid\"><li class=\"blocks-gallery-item\"><figure><img loading=\"lazy\" width=\"980\" height=\"442\" src=\"https://www.scaler.com/topics/media/change-text-color-in-css.gif\" alt=\"\" data-id=\"1193\" data-full-url=\"https://www.scaler.com/topics/media/change-text-color-in-css.gif\" data-link=\"https://www.scaler.com/topics/?attachment_id=1193\" class=\"wp-image-1193\"></figure></li></ul></figure>\n\n\n\n<h2 id=\"using-color-keywords-to-change-text-color-in-css\">Using color keywords to change text color in CSS</h2>\n\n\n\n<p><span style=\"font-weight: 400;\">To </span><b>change text color in CSS</b><span style=\"font-weight: 400;\">, you can use the color keywords to achieve this.</span></p>\n\n\n\n<ul><li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Color keywords are nothing but the names of the colors like red, blue, yellow etc.</span></li></ul>\n\n\n\n<ul><li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">We will change the font color of the heading or the </span><b>h1</b><span style=\"font-weight: 400;\"> tag in </span><i><span style=\"font-weight: 400;\">Index.html</span></i><span style=\"font-weight: 400;\"> to red.&nbsp;</span></li></ul>\n\n\n\n<ul><li><span style=\"font-weight: 400;\">To do this, you will go to the external CSS file which is </span><i><span style=\"font-weight: 400;\">style.css</span></i><span style=\"font-weight: 400;\">. You should add the following code to it –</span></li></ul>\n\n\n<div class=\"enlighter-default enlighter-v-standard enlighter-t-atomic enlighter-hover \"><div class=\"enlighter-toolbar-top enlighter-toolbar\"><div class=\"enlighter-btn enlighter-btn-raw\" title=\"Plain text\"></div><div class=\"enlighter-btn enlighter-btn-copy\" title=\"Copy to clipboard\"></div><div class=\"enlighter-btn enlighter-btn-window\" title=\"Open code in new window\"></div><div class=\"enlighter-btn enlighter-btn-website\" title=\"EnlighterJS 3 Syntax Highlighter\"></div></div><div class=\"enlighter\" style=\"\"><div class=\"\"><div><span class=\"enlighter-x16\">h1</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-x12\">color</span><span class=\"enlighter-text\">: red;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-g1\">}</span></div></div></div><div class=\"enlighter-raw\">h1 {\n    color: red;\n    }</div><div class=\"enlighter-toolbar-bottom enlighter-toolbar\"></div></div><pre class=\"EnlighterJSRAW enlighter-origin\" data-enlighter-language=\"css\" data-enlighter-theme=\"atomic\" data-enlighter-linenumbers=\"false\">h1 {\n    color: red;\n    }</pre>\n\n\n<p><span style=\"font-weight: 400;\">The font color will successfully be changed to red from the default color.</span></p>\n\n\n\n<h2 id=\"using-hexadecimal-values-to-change-text-colors-in-css\">Using Hexadecimal values to change text colors in CSS</h2>\n\n\n\n<p><span style=\"font-weight: 400;\">More often than not, while designing a website, there could be a specific color scheme or brand kit that you might be required to use. This cannot be possible if you are using color keywords such as blue, green, red etc. So you can now learn to use the hexadecimal values to change the font color of the paragraph elements.</span></p>\n\n\n\n<figure class=\"wp-block-gallery columns-1 is-cropped\"><ul class=\"blocks-gallery-grid\"><li class=\"blocks-gallery-item\"><figure><img loading=\"lazy\" width=\"800\" height=\"600\" src=\"https://www.scaler.com/topics/media/change-font-color-in-css1.jpg\" alt=\"\" data-id=\"1195\" data-full-url=\"https://www.scaler.com/topics/media/change-font-color-in-css1.jpg\" data-link=\"https://www.scaler.com/topics/?attachment_id=1195\" class=\"wp-image-1195\" srcset=\"https://www.scaler.com/topics/media/change-font-color-in-css1.jpg 800w, https://www.scaler.com/topics/media/change-font-color-in-css1-300x225.jpg 300w, https://www.scaler.com/topics/media/change-font-color-in-css1-768x576.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\"></figure></li></ul></figure>\n\n\n\n<p><span style=\"font-weight: 400;\">Let’s take a look how you can achieve this –</span></p>\n\n\n\n<p><span style=\"font-weight: 400;\">Add the following code to</span><i><span style=\"font-weight: 400;\"> style.css</span></i><span style=\"font-weight: 400;\">. This will change the color of the paragraph elements to a specific shade of blue of our choice.</span></p>\n\n\n<div class=\"enlighter-default enlighter-v-standard enlighter-t-atomic enlighter-hover \"><div class=\"enlighter-toolbar-top enlighter-toolbar\"><div class=\"enlighter-btn enlighter-btn-raw\" title=\"Plain text\"></div><div class=\"enlighter-btn enlighter-btn-copy\" title=\"Copy to clipboard\"></div><div class=\"enlighter-btn enlighter-btn-window\" title=\"Open code in new window\"></div><div class=\"enlighter-btn enlighter-btn-website\" title=\"EnlighterJS 3 Syntax Highlighter\"></div></div><div class=\"enlighter\" style=\"\"><div class=\"\"><div><span class=\"enlighter-x16\">p</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-x12\">color</span><span class=\"enlighter-text\">: </span><span class=\"enlighter-x14\">#347deb</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-g1\">}</span></div></div></div><div class=\"enlighter-raw\">p { \n    color: #347deb;\n  }</div><div class=\"enlighter-toolbar-bottom enlighter-toolbar\"></div></div><pre class=\"EnlighterJSRAW enlighter-origin\" data-enlighter-language=\"css\" data-enlighter-theme=\"atomic\" data-enlighter-linenumbers=\"false\">p { \n    color: #347deb;\n  }</pre>\n\n\n<h2 id=\"using-rgba-color-values-to-change-text-color-in-css\">Using RGBA color values to change text color in CSS</h2>\n\n\n\n<p><span style=\"font-weight: 400;\">RGBA color value manipulation is also a good way to </span><b>change text color in CSS</b><span style=\"font-weight: 400;\">. The RGBA abbreviation stands for Red, Blue, Green and Alpha. The Alpha value controls the transparency of the color. For example, if the value of Alpha is set to 1- it means the color is completely opaque. On the other hand, when it is 0.75, it suggests the color would be only 75% opaque or 25% transparent.</span></p>\n\n\n\n<figure class=\"wp-block-gallery columns-1 is-cropped\"><ul class=\"blocks-gallery-grid\"><li class=\"blocks-gallery-item\"><figure><img loading=\"lazy\" width=\"1024\" height=\"1024\" src=\"https://www.scaler.com/topics/media/how-to-change-font-color-in-css-1024x1024.jpg\" alt=\"how to change font color in css\" data-id=\"1196\" data-full-url=\"https://www.scaler.com/topics/media/how-to-change-font-color-in-css.jpg\" data-link=\"https://www.scaler.com/topics/?attachment_id=1196\" class=\"wp-image-1196\" srcset=\"https://www.scaler.com/topics/media/how-to-change-font-color-in-css-1024x1024.jpg 1024w, https://www.scaler.com/topics/media/how-to-change-font-color-in-css-300x300.jpg 300w, https://www.scaler.com/topics/media/how-to-change-font-color-in-css-150x150.jpg 150w, https://www.scaler.com/topics/media/how-to-change-font-color-in-css-768x768.jpg 768w, https://www.scaler.com/topics/media/how-to-change-font-color-in-css-70x70.jpg 70w, https://www.scaler.com/topics/media/how-to-change-font-color-in-css.jpg 1201w\" sizes=\"(max-width: 1024px) 100vw, 1024px\"></figure></li></ul></figure>\n\n\n\n<p><span style=\"font-weight: 400;\">So here is how you will change the color of our </span><b>h2</b><span style=\"font-weight: 400;\"> tag in </span><i><span style=\"font-weight: 400;\">Index.html</span></i><span style=\"font-weight: 400;\"> using the RGBA color values –</span></p>\n\n\n<div class=\"enlighter-default enlighter-v-standard enlighter-t-atomic enlighter-hover \"><div class=\"enlighter-toolbar-top enlighter-toolbar\"><div class=\"enlighter-btn enlighter-btn-raw\" title=\"Plain text\"></div><div class=\"enlighter-btn enlighter-btn-copy\" title=\"Copy to clipboard\"></div><div class=\"enlighter-btn enlighter-btn-window\" title=\"Open code in new window\"></div><div class=\"enlighter-btn enlighter-btn-website\" title=\"EnlighterJS 3 Syntax Highlighter\"></div></div><div class=\"enlighter\" style=\"\"><div class=\"\"><div><span class=\"enlighter-x16\">h2</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span><span class=\"enlighter-x12\">color</span><span class=\"enlighter-text\">: rgba</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-x13\">47</span><span class=\"enlighter-text\">,</span><span class=\"enlighter-x13\">86</span><span class=\"enlighter-text\">,</span><span class=\"enlighter-x13\">135</span><span class=\"enlighter-text\">,</span><span class=\"enlighter-x13\">1</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">}</span></div></div></div><div class=\"enlighter-raw\">h2 {\n    color: rgba(47,86,135,1);\n}</div><div class=\"enlighter-toolbar-bottom enlighter-toolbar\"></div></div><pre class=\"EnlighterJSRAW enlighter-origin\" data-enlighter-language=\"css\" data-enlighter-theme=\"atomic\" data-enlighter-linenumbers=\"false\">h2 {\n    color: rgba(47,86,135,1);\n}</pre>\n\n\n<p><span style=\"font-weight: 400;\">Once the above code is added to the style.css file, you can say that you know how to </span><b>change font color in CSS</b><span style=\"font-weight: 400;\">.&nbsp;</span></p>\n\n\n\n<h2 id=\"conclusion\">Conclusion</h2>\n\n\n\n<figure class=\"wp-block-gallery columns-1 is-cropped\"><ul class=\"blocks-gallery-grid\"><li class=\"blocks-gallery-item\"><figure><img loading=\"lazy\" width=\"1024\" height=\"520\" src=\"https://www.scaler.com/topics/media/change-text-color-in-css-1024x520.jpg\" alt=\"\" data-id=\"1197\" data-full-url=\"https://www.scaler.com/topics/media/change-text-color-in-css.jpg\" data-link=\"https://www.scaler.com/topics/?attachment_id=1197\" class=\"wp-image-1197\" srcset=\"https://www.scaler.com/topics/media/change-text-color-in-css-1024x520.jpg 1024w, https://www.scaler.com/topics/media/change-text-color-in-css-300x152.jpg 300w, https://www.scaler.com/topics/media/change-text-color-in-css-768x390.jpg 768w, https://www.scaler.com/topics/media/change-text-color-in-css.jpg 1370w\" sizes=\"(max-width: 1024px) 100vw, 1024px\"></figure></li></ul></figure>\n\n\n\n<p><span style=\"font-weight: 400;\">Now you know how to </span><b>change font color in CSS </b><span style=\"font-weight: 400;\">efficiently. Although this can be achieved through internal CSS and inline CSS as well, the best practice remains using an external CSS file just like you did in this tutorial.</span></p>\n\n\n\n<p><span style=\"font-weight: 400;\">So now the next time someone asks you “</span><b>How to change the font color using CSS?</b><span style=\"font-weight: 400;\">”, you will not only be able to tell them how to do that but also share some tips about different font properties as well!</span></p>\n\n\n\n<p><span style=\"font-weight: 400;\">In this tutorial, we covered the three different ways you can </span><b>change font color in CSS</b><span style=\"font-weight: 400;\">. To sum it up, they are-</span></p>\n\n\n\n<ul><li><b>Using color keywords</b><span style=\"font-weight: 400;\">– You can simply use color keywords which are nothing but the name of colors to style your HTML file.</span></li><li><b>Using Hexadecimal values</b><span style=\"font-weight: 400;\">– Hex codes or hexadecimal values enable you to get intermediate colors and specific colors, which is not possible while using color keywords. So now, if you are asked to follow a particular color scheme or a brand kit, you know which technique to use in CSS.</span></li><li><b>Using RGBA values</b><span style=\"font-weight: 400;\">– If you are aware of the values of Red, Blue, Green and Alpha to be used then this is the best way for you to </span><b>change text color in CSS</b><span style=\"font-weight: 400;\">. As a designer, you can also manipulate the transparency of the color using the Alpha attribute of this method.</span></li></ul>\n\n<!-- MOLONGUI AUTHORSHIP PLUGIN 4.3.3 -->\n<!-- https://www.molongui.com/authorship/ -->\n<div class=\"molongui-clearfix\"></div>\n<div id=\"mab-1787499716\" class=\"m-a-box \" data-plugin-release=\"4.3.3\" data-plugin-version=\"free\" data-box-layout=\"slim\" data-box-position=\"below\" data-multiauthor=\"false\" data-author-type=\"guest\" itemscope=\"\" itemtype=\"https://schema.org/Person\" style=\"width: 100%;            margin: 20px auto;\">\n\n\t\n    <div class=\"m-a-box-container\n                molongui-border-right-none molongui-border-left-none                molongui-border-style-solid                molongui-border-width-3-px\n                m-a-box-shadow-right\" style=\"border-color: #adadad;                background-color: #efefef;\">\n\n        <div class=\"m-a-box-tab m-a-box-content m-a-box-profile\" data-profile-layout=\"layout-1\" data-author-ref=\"guest-1188\">\n            \n<div class=\"m-a-box-content-top\">\n\n\t\n</div><!-- End of .m-a-box-content-top -->\n\n<div class=\"m-a-box-content-middle\">\n\n    <!-- Author picture -->\n    \n\t<div class=\"m-a-box-item m-a-box-avatar \">\n\t\t                <span>\n                    <img alt=\"\" src=\"https://secure.gravatar.com/avatar/?s=150&amp;d=mp&amp;r=g\" srcset=\"https://secure.gravatar.com/avatar/?s=300&amp;d=mp&amp;r=g 2x\" class=\"avatar avatar-150 photo avatar-default m-radius-none molongui-border-style-solid molongui-border-width-2-px\" height=\"150\" width=\"150\" style=\"border-color:#bfbfbf;\" itemprop=\"image\" loading=\"lazy\">                </span>\n                \t</div>\n\n    <!-- Author social -->\n    \n    <!-- Author data -->\n    <div class=\"m-a-box-item m-a-box-data \">\n\n        <!-- Author name -->\n        \n<div class=\"m-a-box-title\">\n\t<h5 class=\"molongui-font-size-22-px\n\t        molongui-text-align-left                        molongui-text-case-none\" style=\"color: inherit\" itemprop=\"name\">\n                        <span class=\"molongui-font-size-22-px molongui-text-align-left\" style=\"color:inherit;\">\n\t\t\t        Jasleen Sondhi                </span>\n\t            \t</h5>\n</div>\n        <!-- Author metadata -->\n        \n<div class=\"m-a-box-item m-a-box-meta\n            molongui-font-size-12-px\n            molongui-text-align-left                        molongui-text-case-none\" style=\"color: inherit\">\n\n    \n    \n    \n\t\n\t\n\t\n\t        \t\t<script type=\"text/javascript\" language=\"JavaScript\">\n\t\t\tif ( typeof window.ToggleAuthorshipData === 'undefined' )\n\t\t\t{\n\t\t\t\tfunction ToggleAuthorshipData(id, author)\n\t\t\t\t{\n\t\t\t\t\tvar box_selector = '#mab-' + id;\n                    var box = document.querySelector(box_selector);\n                    if ( box.getAttribute('data-multiauthor') ) box_selector = '#mab-' + id + ' [data-author-ref=\"' + author + '\"]';\n\t\t\t\t\tvar label = document.querySelector(box_selector + ' ' + '.m-a-box-data-toggle');\n\t\t\t\t\tlabel.innerHTML = ( label.text.trim() === \"+ posts\" ? \" <span class=\\\"m-a-box-string-bio\\\">Bio</span>\" : \" <span class=\\\"m-a-box-string-more-posts\\\">+ posts</span>\" );\n\t\t\t\t\tvar bio     = document.querySelector(box_selector + ' ' + '.m-a-box-bio');\n\t\t\t\t\tvar related = document.querySelector(box_selector + ' ' + '.m-a-box-related-entries');\n\n\t\t\t\t\tif ( related.style.display === \"none\" )\n\t\t\t\t\t{\n\t\t\t\t\t\trelated.style.display = \"block\";\n\t\t\t\t\t\tbio.style.display     = \"none\";\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\trelated.style.display = \"none\";\n\t\t\t\t\t\tbio.style.display     = \"block\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t</script>\n\t\t<a href=\"javascript:ToggleAuthorshipData(1787499716, 'guest-1188')\" class=\"m-a-box-data-toggle\" style=\"color: inherit\" rel=\"nofollow\"> <span class=\"m-a-box-string-more-posts\">+ posts</span> </a>\n\t\n</div><!-- End of .m-a-box-meta -->\n\n        <!-- Author bio -->\n        \n<div class=\"m-a-box-bio\" itemprop=\"description\">\n\t<div class=\"molongui-font-size-14-px molongui-text-align-justify  molongui-line-height-10\" style=\"color: inherit\">\n\t    \t</div>\n</div>\n\n        \n            <!-- Author related posts -->\n            <div class=\"m-a-box-related\" data-related-layout=\"layout-1\">\n                <div class=\"m-a-box-item m-a-box-related-entries\" style=\"display: none;\">\n\n                                        <ul class=\"molongui-font-size-14-px \" style=\"color: inherit\">\n                         <span class=\"m-a-box-string-no-related-posts\">This author does not have any more posts.</span>                    </ul>\n\n                </div><!-- End of .m-a-box-related-entries -->\n            </div><!-- End of .m-a-box-related -->\n\n        \n    </div><!-- End of .m-a-box-data -->\n\n</div><!-- End of .m-a-box-content-middle -->\n\n<div class=\"m-a-box-content-bottom\"></div><!-- End of .m-a-box-content-bottom -->        </div><!-- End of .m-a-box-profile -->\n\n        \n    </div><!-- End of .m-a-box-container -->\n\n\t\n</div><!-- End of .m-a-box -->\t</div><!-- .entry-content -->\n\t</div>\n\t<footer class=\"entry-footer\">\n\t\t<span class=\"cat-links\">Posted in <a href=\"https://www.scaler.com/topics/category/css/\" rel=\"category tag\">CSS</a></span> | <span class=\"tags-links\">Tagged <a href=\"https://www.scaler.com/topics/tag/change-font-color-in-css/\" rel=\"tag\">change font color in css</a>, <a href=\"https://www.scaler.com/topics/tag/change-text-color-in-css/\" rel=\"tag\">change text color in css</a></span>\t</footer><!-- .entry-footer -->\n</article><!-- #post-## -->\n\n\n\n\t<nav class=\"navigation post-navigation\" role=\"navigation\" aria-label=\"Posts\">\n\t\t<h2 class=\"screen-reader-text\">Post navigation</h2>\n\t\t<div class=\"nav-links\"><div class=\"nav-previous\"><a href=\"https://www.scaler.com/topics/difference-between-call-by-value-and-call-by-reference/\" rel=\"prev\">Difference Between Call by Value and Call by Reference in C++</a></div><div class=\"nav-next\"><a href=\"https://www.scaler.com/topics/pointers-vs-references-in-cplusplus/\" rel=\"next\">Pointers vs References in C++</a></div></div>\n\t</nav>\n<div id=\"comments\" class=\"comments-area\">\n\n    \n    \t<div id=\"respond\" class=\"comment-respond\">\n\t\t<h3 id=\"reply-title\" class=\"comment-reply-title\">Leave a Reply <small><a rel=\"nofollow\" id=\"cancel-comment-reply-link\" href=\"/topics/change-font-color-using-css/#respond\" style=\"display:none;\">Cancel Reply</a></small></h3><p class=\"must-log-in\">You must be <a href=\"https://www.scaler.com/topics/wp-login.php?redirect_to=https%3A%2F%2Fwww.scaler.com%2Ftopics%2Fchange-font-color-using-css%2F\">logged in</a> to post a comment.</p>\t</div><!-- #respond -->\n\t\n</div><!-- #comments -->\n\n\t\t</div><!-- #main -->\n\t</section><!-- #primary -->\n\n\t\t\t</div><!-- .row -->\n\t\t</div><!-- .container -->\n\t</div><!-- #content -->\n    \t<footer id=\"colophon\" class=\"site-footer navbar-light bg-light\" role=\"contentinfo\">\n\t\t<div class=\"container pt-3 pb-3\">\n            <div class=\"site-info text-center\">\n\t\t\t\tCopyright © 2021 InterviewBit Technologies Pte. Ltd. All Rights Reserved\n            </div><!-- close .site-info -->\n\t\t</div>\n\t</footer><!-- #colophon -->\n</div><!-- #page -->\n\n<script type=\"text/javascript\" id=\"molongui-authorship-js-extra\">\n/* <![CDATA[ */\nvar molongui_authorship = {\"byline_prefix\":\"\",\"byline_suffix\":\"\",\"byline_separator\":\", \",\"byline_last_separator\":\" and \",\"byline_link_title\":\"View all posts by\",\"byline_dom_tree\":\"\"};\n/* ]]> */\n</script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/plugins/molongui-authorship/public/js/molongui-authorship.5a1d.min.js?ver=4.3.3\" id=\"molongui-authorship-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/js/popper.min.js?ver=5.7.2\" id=\"wp-bootstrap-starter-popper-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/js/bootstrap.min.js?ver=5.7.2\" id=\"wp-bootstrap-starter-bootstrapjs-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/js/theme-script.min.js?ver=5.7.2\" id=\"wp-bootstrap-starter-themejs-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/js/skip-link-focus-fix.min.js?ver=20151215\" id=\"wp-bootstrap-starter-skip-link-focus-fix-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-includes/js/comment-reply.min.js?ver=5.7.2\" id=\"comment-reply-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/plugins/gutentoc-advance-table-of-content/dist/toc.js?ver=5.7.2\" id=\"gutentocjs-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/plugins/enlighter/cache/enlighterjs.min.js?ver=0UVtrfqVvCkLefk\" id=\"enlighterjs-js\"></script>\n<script type=\"text/javascript\" id=\"enlighterjs-js-after\">\n!function(e,n){if(\"undefined\"!=typeof EnlighterJS){var o={\"selectors\":{\"block\":\"pre.EnlighterJSRAW\",\"inline\":\"code.EnlighterJSRAW\"},\"options\":{\"indent\":2,\"ampersandCleanup\":true,\"linehover\":true,\"rawcodeDbclick\":false,\"textOverflow\":\"break\",\"linenumbers\":true,\"theme\":\"classic\",\"language\":\"generic\",\"retainCssClasses\":false,\"collapse\":false,\"toolbarOuter\":\"\",\"toolbarTop\":\"{BTN_RAW}{BTN_COPY}{BTN_WINDOW}{BTN_WEBSITE}\",\"toolbarBottom\":\"\"}};(e.EnlighterJSINIT=function(){EnlighterJS.init(o.selectors.block,o.selectors.inline,o.options)})()}else{(n&&(n.error||n.log)||function(){})(\"Error: EnlighterJS resources not loaded yet!\")}}(window,console);\n</script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-includes/js/wp-embed.min.js?ver=5.7.2\" id=\"wp-embed-js\"></script>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/css-element-queries@1.2.2/src/ResizeSensor.min.js?ver=1.2.2\" id=\"molongui-resizesensor-js\"></script>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/css-element-queries@1.2.2/src/ElementQueries.min.js?ver=1.2.2\" id=\"molongui-elementqueries-js\"></script>\n<script>\n\nfunction is_logged_in()\n{\n\nlet xhr = new XMLHttpRequest();\n\nxhr.open('GET', 'https://www.interviewbit.com/get_user_options/', false);\n\ntry {\n  xhr.send();\n  if (xhr.status != 200) {\n   console.log(`Error ${xhr.status}: ${xhr.statusText}`);\n  } else {\n\n  if(JSON.parse(xhr.response).logged_in == true){\n  return true;\n  }\n  else{\n  return false;\n  }\n     \n  }\n} catch(err) { // instead of onerror\n  console.log(\"Request failed\");\n}\n\t\n}\n\n\t\n</script>\n\n</body>",slug: 'hello-world')




Article.create(title: 'LCM of Two Numbers in C',content: "<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <link rel=\"profile\" href=\"http://gmpg.org/xfn/11\">\n\n<!-- Author Meta Tags by Molongui Authorship 4.3.3, visit: https://wordpress.org/plugins/molongui-authorship/ -->\n<meta name=\"author\" content=\"Shubham Gautam\">\n<!-- /Molongui Authorship -->\n\n<title>LCM of Two Numbers in C with Program Example - Scaler Topics</title>\n\n<!-- The SEO Framework by Sybre Waaijer -->\n<meta name=\"robots\" content=\"max-snippet:-1,max-image-preview:standard,max-video-preview:-1\">\n<meta name=\"description\" content=\"Learn how to find LCM of two numbers in C. In this article, Scaler Topics explains various methods using while loop, recursion, GCD to find LCM of two numbers using C. Click here to know more.\">\n<meta property=\"og:image\" content=\"https://www.scaler.com/topics/media/LCM-of-Two-Numbers-in-C.png\">\n<meta property=\"og:image:width\" content=\"2134\">\n<meta property=\"og:image:height\" content=\"1042\">\n<meta property=\"og:image:alt\" content=\"LCM of Two Numbers in C\">\n<meta property=\"og:locale\" content=\"en_US\">\n<meta property=\"og:type\" content=\"article\">\n<meta property=\"og:title\" content=\"LCM of Two Numbers in C with Program Example - Scaler Topics\">\n<meta property=\"og:description\" content=\"Learn how to find LCM of two numbers in C. In this article, Scaler Topics explains various methods using while loop, recursion, GCD to find LCM of two numbers using C. Click here to know more.\">\n<meta property=\"og:url\" content=\"https://www.scaler.com/topics/lcm-of-two-numbers-in-c/\">\n<meta property=\"og:site_name\" content=\"Scaler Topics\">\n<meta property=\"og:updated_time\" content=\"2021-07-20\">\n<meta property=\"article:published_time\" content=\"2021-07-08\">\n<meta property=\"article:modified_time\" content=\"2021-07-20\">\n<meta name=\"twitter:card\" content=\"summary_large_image\">\n<meta name=\"twitter:title\" content=\"LCM of Two Numbers in C with Program Example - Scaler Topics\">\n<meta name=\"twitter:description\" content=\"Learn how to find LCM of two numbers in C. In this article, Scaler Topics explains various methods using while loop, recursion, GCD to find LCM of two numbers using C. Click here to know more.\">\n<meta name=\"twitter:image\" content=\"https://www.scaler.com/topics/media/LCM-of-Two-Numbers-in-C.png\">\n<meta name=\"twitter:image:width\" content=\"2134\">\n<meta name=\"twitter:image:height\" content=\"1042\">\n<meta name=\"twitter:image:alt\" content=\"LCM of Two Numbers in C\">\n<link rel=\"canonical\" href=\"https://www.scaler.com/topics/lcm-of-two-numbers-in-c/\">\n<script type=\"text/javascript\" async=\"\" src=\"https://www.google-analytics.com/analytics.js\"></script><script type=\"application/ld+json\">{\"@context\":\"https://schema.org\",\"@type\":\"BreadcrumbList\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"item\":{\"@id\":\"https://www.scaler.com/topics/\",\"name\":\"Scaler Topics\"}},{\"@type\":\"ListItem\",\"position\":2,\"item\":{\"@id\":\"https://www.scaler.com/topics/category/c/\",\"name\":\"C\"}},{\"@type\":\"ListItem\",\"position\":3,\"item\":{\"@id\":\"https://www.scaler.com/topics/lcm-of-two-numbers-in-c/\",\"name\":\"LCM of Two Numbers in C with Program Example &#x2d; Scaler Topics\"}}]}</script>\n<meta name=\"p:domain_verify\" content=\"7e10627c0f88fb1a4f4c6ae8c0d34b16\">\n<!-- / The SEO Framework by Sybre Waaijer | 4.74ms meta | 0.37ms boot -->\n\n<link rel=\"dns-prefetch\" href=\"//fonts.googleapis.com\">\n<link rel=\"dns-prefetch\" href=\"//s.w.org\">\n<link rel=\"alternate\" type=\"application/rss+xml\" title=\"Scaler Topics » Feed\" href=\"https://www.scaler.com/topics/feed/\">\n<link rel=\"alternate\" type=\"application/rss+xml\" title=\"Scaler Topics » Comments Feed\" href=\"https://www.scaler.com/topics/comments/feed/\">\n<link rel=\"alternate\" type=\"application/rss+xml\" title=\"Scaler Topics » LCM of Two Numbers in C Comments Feed\" href=\"https://www.scaler.com/topics/lcm-of-two-numbers-in-c/feed/\">\n\t\t<script type=\"text/javascript\">\n\t\t\twindow._wpemojiSettings = {\"baseUrl\":\"https:\\/\\/s.w.org\\/images\\/core\\/emoji\\/13.0.1\\/72x72\\/\",\"ext\":\".png\",\"svgUrl\":\"https:\\/\\/s.w.org\\/images\\/core\\/emoji\\/13.0.1\\/svg\\/\",\"svgExt\":\".svg\",\"source\":{\"concatemoji\":\"https:\\/\\/www.scaler.com\\/topics\\/wp-includes\\/js\\/wp-emoji-release.min.js?ver=5.7.2\"}};\n\t\t\t!function(e,a,t){var n,r,o,i=a.createElement(\"canvas\"),p=i.getContext&&i.getContext(\"2d\");function s(e,t){var a=String.fromCharCode;p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,e),0,0);e=i.toDataURL();return p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,t),0,0),e===i.toDataURL()}function c(e){var t=a.createElement(\"script\");t.src=e,t.defer=t.type=\"text/javascript\",a.getElementsByTagName(\"head\")[0].appendChild(t)}for(o=Array(\"flag\",\"emoji\"),t.supports={everything:!0,everythingExceptFlag:!0},r=0;r<o.length;r++)t.supports[o[r]]=function(e){if(!p||!p.fillText)return!1;switch(p.textBaseline=\"top\",p.font=\"600 32px Arial\",e){case\"flag\":return s([127987,65039,8205,9895,65039],[127987,65039,8203,9895,65039])?!1:!s([55356,56826,55356,56819],[55356,56826,8203,55356,56819])&&!s([55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447],[55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447]);case\"emoji\":return!s([55357,56424,8205,55356,57212],[55357,56424,8203,55356,57212])}return!1}(o[r]),t.supports.everything=t.supports.everything&&t.supports[o[r]],\"flag\"!==o[r]&&(t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&t.supports[o[r]]);t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&!t.supports.flag,t.DOMReady=!1,t.readyCallback=function(){t.DOMReady=!0},t.supports.everything||(n=function(){t.readyCallback()},a.addEventListener?(a.addEventListener(\"DOMContentLoaded\",n,!1),e.addEventListener(\"load\",n,!1)):(e.attachEvent(\"onload\",n),a.attachEvent(\"onreadystatechange\",function(){\"complete\"===a.readyState&&t.readyCallback()})),(n=t.source||{}).concatemoji?c(n.concatemoji):n.wpemoji&&n.twemoji&&(c(n.twemoji),c(n.wpemoji)))}(window,document,window._wpemojiSettings);\n\t\t</script><script src=\"https://www.scaler.com/topics/wp-includes/js/wp-emoji-release.min.js?ver=5.7.2\" type=\"text/javascript\" defer=\"\"></script>\n\t\t<style type=\"text/css\">\nimg.wp-smiley,\nimg.emoji {\n\tdisplay: inline !important;\n\tborder: none !important;\n\tbox-shadow: none !important;\n\theight: 1em !important;\n\twidth: 1em !important;\n\tmargin: 0 .07em !important;\n\tvertical-align: -0.1em !important;\n\tbackground: none !important;\n\tpadding: 0 !important;\n}\n</style>\n\t<link rel=\"stylesheet\" id=\"wp-quicklatex-format-css\" href=\"https://www.scaler.com/topics/wp-content/plugins/wp-quicklatex/css/quicklatex-format.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-block-library-css\" href=\"https://www.scaler.com/topics/wp-includes/css/dist/block-library/style.min.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"gutentocwp-cgb-style-css-css\" href=\"https://www.scaler.com/topics/wp-content/plugins/gutentoc-advance-table-of-content/dist/blocks.style.build.css\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"child-theme-generator-css\" href=\"https://www.scaler.com/topics/wp-content/plugins/child-theme-generator/public/css/child-theme-generator-public.css?ver=1.0.0\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"molongui-authorship-css\" href=\"https://www.scaler.com/topics/wp-content/plugins/molongui-authorship/public/css/molongui-authorship.27a7.min.css?ver=4.3.3\" type=\"text/css\" media=\"all\">\n<style id=\"molongui-authorship-inline-css\" type=\"text/css\">\n:root{ --m-a-box-bp: 600px; --m-a-box-bp-l: 599px; }\n</style>\n<link rel=\"stylesheet\" id=\"parente2-style-css\" href=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/style.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"childe2-style-css\" href=\"https://www.scaler.com/topics/wp-content/themes/InterviewBit/style.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-bootstrap-starter-bootstrap-css-css\" href=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/css/bootstrap.min.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-bootstrap-starter-fontawesome-cdn-css\" href=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/css/fontawesome.min.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-bootstrap-starter-style-css\" href=\"https://www.scaler.com/topics/wp-content/themes/InterviewBit/style.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-bootstrap-starter-litera-css\" href=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/css/presets/theme-option/litera.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-bootstrap-starter-montserrat-opensans-font-css\" href=\"https://fonts.googleapis.com/css?family=Montserrat%7COpen+Sans%3A300%2C300i%2C400%2C400i%2C600%2C600i%2C700%2C800&amp;ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"wp-bootstrap-starter-montserrat-opensans-css\" href=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/css/presets/typography/montserrat-opensans.css?ver=5.7.2\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" id=\"enlighterjs-css\" href=\"https://www.scaler.com/topics/wp-content/plugins/enlighter/cache/enlighterjs.min.css?ver=0UVtrfqVvCkLefk\" type=\"text/css\" media=\"all\">\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-includes/js/jquery/jquery.min.js?ver=3.5.1\" id=\"jquery-core-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-includes/js/jquery/jquery-migrate.min.js?ver=3.3.2\" id=\"jquery-migrate-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/plugins/child-theme-generator/public/js/child-theme-generator-public.js?ver=1.0.0\" id=\"child-theme-generator-js\"></script>\n<!--[if lt IE 9]>\n<script type='text/javascript' src='https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/js/html5.js?ver=3.7.0' id='html5hiv-js'></script>\n<![endif]-->\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/plugins/wp-quicklatex/js/wp-quicklatex-frontend.js?ver=1.0\" id=\"wp-quicklatex-frontend-js\"></script>\n<link rel=\"https://api.w.org/\" href=\"https://www.scaler.com/topics/wp-json/\"><link rel=\"alternate\" type=\"application/json\" href=\"https://www.scaler.com/topics/wp-json/wp/v2/posts/65\"><link rel=\"EditURI\" type=\"application/rsd+xml\" title=\"RSD\" href=\"https://www.scaler.com/topics/xmlrpc.php?rsd\">\n<link rel=\"wlwmanifest\" type=\"application/wlwmanifest+xml\" href=\"https://www.scaler.com/topics/wp-includes/wlwmanifest.xml\"> \n<link rel=\"alternate\" type=\"application/json+oembed\" href=\"https://www.scaler.com/topics/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.scaler.com%2Ftopics%2Flcm-of-two-numbers-in-c%2F\">\n<link rel=\"alternate\" type=\"text/xml+oembed\" href=\"https://www.scaler.com/topics/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.scaler.com%2Ftopics%2Flcm-of-two-numbers-in-c%2F&amp;format=xml\">\n<link rel=\"pingback\" href=\"https://www.scaler.com/topics/xmlrpc.php\">    <style type=\"text/css\">\n        #page-sub-header { background: #fff; }\n    </style>\n    <link rel=\"icon\" href=\"https://www.scaler.com/topics/media/cropped-android-chrome-512x512-1-32x32.png\" sizes=\"32x32\">\n<link rel=\"icon\" href=\"https://www.scaler.com/topics/media/cropped-android-chrome-512x512-1-192x192.png\" sizes=\"192x192\">\n<link rel=\"apple-touch-icon\" href=\"https://www.scaler.com/topics/media/cropped-android-chrome-512x512-1-180x180.png\">\n<meta name=\"msapplication-TileImage\" content=\"https://www.scaler.com/topics/media/cropped-android-chrome-512x512-1-270x270.png\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\n<link href=\"https://fonts.googleapis.com/css2?family=Roboto&amp;display=swap\" rel=\"stylesheet\">\n\t<!-- Global site tag (gtag.js) - Google Analytics -->\n<script async=\"\" src=\"https://www.googletagmanager.com/gtag/js?id=UA-56207880-1\"></script>\n<script>\n  window.dataLayer = window.dataLayer || [];\n  function gtag(){dataLayer.push(arguments);}\n  gtag('js', new Date());\n\n  gtag('config', 'UA-56207880-1');\n</script>\n<style type=\"text/css\">[responsive-image] > img, [data-responsive-image] {overflow: hidden; padding: 0; } [responsive-image] > img, [data-responsive-image] > img {width: 100%;}\n@keyframes element-queries { 0% { visibility: inherit; } }</style></head>\n\n<body class=\"post-template-default single single-post postid-65 single-format-standard topics group-blog theme-preset-active\">\n\n\n<div id=\"page\" class=\"site\">\n\t<!-- #masthead -->\n    \t<div id=\"content\" class=\"site-content\">\n\t\t<div class=\"container\">\n\t\t\t<div class=\"row\">\n                \n\t<section id=\"primary\" class=\"content-area col-sm-12 col-lg-8 mx-auto\">\n\t\t<div id=\"main\" class=\"site-main\" role=\"main\">\n\n\t\t\n\n\n<article id=\"post-65\" class=\"post-65 post type-post status-publish format-standard has-post-thumbnail hentry category-c tag-c-program-to-find-lcm-of-two-numbers tag-lcm-program-in-c\">\n\t<div class=\"post-thumbnail mb-3\">\n\t\t<img width=\"2134\" height=\"1042\" src=\"https://www.scaler.com/topics/media/LCM-of-Two-Numbers-in-C.png\" class=\"attachment-post-thumbnail size-post-thumbnail wp-post-image\" alt=\"LCM of Two Numbers in C\" loading=\"lazy\" srcset=\"https://www.scaler.com/topics/media/LCM-of-Two-Numbers-in-C.png 2134w, https://www.scaler.com/topics/media/LCM-of-Two-Numbers-in-C-300x146.png 300w, https://www.scaler.com/topics/media/LCM-of-Two-Numbers-in-C-1024x500.png 1024w, https://www.scaler.com/topics/media/LCM-of-Two-Numbers-in-C-768x375.png 768w, https://www.scaler.com/topics/media/LCM-of-Two-Numbers-in-C-1536x750.png 1536w, https://www.scaler.com/topics/media/LCM-of-Two-Numbers-in-C-2048x1000.png 2048w\" sizes=\"(max-width: 2134px) 100vw, 2134px\">\t</div>\n\t<div class=\"post-content-here\">\n\n\t<header class=\"entry-header\">\n\t\t<h1 class=\"entry-title\">LCM of Two Numbers in C</h1>\t\t<div class=\"entry-meta\">\n<!-- \t\t\t<span class=\"posted-on\">Posted on <a href=\"https://www.scaler.com/topics/lcm-of-two-numbers-in-c/\" rel=\"bookmark\"><time class=\"entry-date published\" datetime=\"2021-07-08T14:10:32+05:30\">July 8, 2021</time></a></span> | <span class=\"byline\"> by <span class=\"author vcard\"><a class=\"url fn n\" href=\"#molongui-disabled-link\">Shubham Gautam</a></span></span> -->\n\t\t</div><!-- .entry-meta -->\n\t\t\t</header><!-- .entry-header -->\n\t<div class=\"entry-content\">\n\t\t\n<p><span style=\"font-weight: 400;\">The lcm program in C is a very common, beginner-level</span> question asked. Before we delve deeper, we must understand what LCM is. We have all learned HCF and LCM in school, however, we often forget what it is and when it’s used. Let us take a look at<span style=\"font-weight: 400;\"> LCM, in detail now.&nbsp;</span></p>\n\n\n\n<div class=\"gutentoc tocactive nostyle\"><div class=\"gutentoc-toc-wrap\"><div class=\"gutentoc-toc-title-wrap\"><div class=\"gutentoc-toc-title\">Table Of Contents</div><div id=\"open\" class=\"toggleone\">show</div></div><div id=\"toclist\"><div class=\"gutentoc-toc__list-wrap\"><ul class=\"gutentoc-toc__list\"><li><a href=\"#what-is-lcm\">What is LCM?</a></li><li><a href=\"#algorithm\">Algorithm</a></li><li><a href=\"#4-ways-for-writing-lcm-program-in-c\">4 Ways for Writing LCM Program in C</a></li><li><a href=\"#conclusion\">Conclusion</a></li></ul></div></div></div></div>\n\n\n\n<h2 id=\"what-is-lcm\">What is LCM?</h2>\n\n\n\n<p><span style=\"font-weight: 400;\">To find LCM of 2 numbers, you find all multiples of both the numbers and find the smallest common multiple that the two numbers share. If we have two numbers, 7 (num1) and 35 (num2) and since we know that 35 is a multiple of 7, we can conclude that 35 is the LCM.</span></p>\n\n\n\n<p><span style=\"font-weight: 400;\"><strong>These are the real-life applications of LCM:</strong></span></p>\n\n\n<ol>\n<li>\n<p><span style=\"font-weight: 400;\">When we must buy or obtain several items so as to have enough</span></p>\n</li>\n<li>\n<p><span style=\"font-weight: 400;\">When we need to know if something will happen once more, at the same time</span></p>\n</li>\n<li>\n<p><span style=\"font-weight: 400;\">When we must find out if an event will be repeated</span></p>\n</li>\n</ol>\n\n\n<p><span style=\"font-weight: 400;\">For example, Person A has a holiday once in 1 month while Person B has a holiday once in 1.5 months. If Person A and Person B both had a holiday today, how many days later will they both have a holiday together again?</span></p>\n\n\n\n<p><span style=\"font-weight: 400;\"><strong>An example is shown below:</strong></span></p>\n\n\n\n<p><span style=\"font-weight: 400;\">The smallest multiple the two numbers share is 35 and hence that is the LCM. A simple way to remember this is, that the lowest common multiple, is a number larger than or equal to the numbers in question while the greatest common divisor, is a number smaller than or equal to the numbers in question.</span></p>\n\n\n\n<div class=\"wp-block-image is-style-default\"><figure class=\"aligncenter size-full\"><img loading=\"lazy\" width=\"901\" height=\"499\" src=\"https://www.scaler.com/topics/media/LCM-of-Two-Numbers-in-C.jpeg\" alt=\"LCM of Two Numbers in C\" class=\"wp-image-1141\" title=\"LCM of Two Numbers in C\" srcset=\"https://www.scaler.com/topics/media/LCM-of-Two-Numbers-in-C.jpeg 901w, https://www.scaler.com/topics/media/LCM-of-Two-Numbers-in-C-300x166.jpeg 300w, https://www.scaler.com/topics/media/LCM-of-Two-Numbers-in-C-768x425.jpeg 768w\" sizes=\"(max-width: 901px) 100vw, 901px\"></figure></div>\n\n\n\n<h2 id=\"algorithm\">Algorithm</h2>\n\n\n\n<p><span style=\"font-weight: 400;\">To find LCM of two numbers in C, we will assume the two numbers are num1 and num2 and that they are positive integers. We will use the following approach:</span></p>\n\n\n\n<p><strong>START</strong></p>\n\n\n\n<p><strong>Step 1:</strong> Initialise two variables for num1(7) and num2(35)</p>\n\n\n\n<p><strong>Step 2:</strong> Find and store the maximum of num1 and num2 to a separate variable, ‘max’(35)</p>\n\n\n\n<p><strong>Step 3:</strong> If max is divisible by num1(35%7==0?) and num2(35%35==0?), max is the LCM(35), hence print it</p>\n\n\n\n<p><strong>Step 4:</strong> If not divisible then increment max by 1, and go to step 3 until a number has been printed. Repeat the process of 3-&gt;4-&gt;3 until a max value is found which satisfies the constraints.</p>\n\n\n\n<p><strong>STOP</strong></p>\n\n\n\n<div class=\"wp-block-image is-style-default\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"615\" height=\"1024\" src=\"https://www.scaler.com/topics/media/Algorithm-to-find-LCM-of-Two-Numbers-in-C-615x1024.jpeg\" alt=\"Algorithm to find LCM of Two Numbers in C\" class=\"wp-image-1143\" title=\"Algorithm to find LCM of Two Numbers in C\" srcset=\"https://www.scaler.com/topics/media/Algorithm-to-find-LCM-of-Two-Numbers-in-C-615x1024.jpeg 615w, https://www.scaler.com/topics/media/Algorithm-to-find-LCM-of-Two-Numbers-in-C-180x300.jpeg 180w, https://www.scaler.com/topics/media/Algorithm-to-find-LCM-of-Two-Numbers-in-C-768x1278.jpeg 768w, https://www.scaler.com/topics/media/Algorithm-to-find-LCM-of-Two-Numbers-in-C.jpeg 901w\" sizes=\"(max-width: 615px) 100vw, 615px\"></figure></div>\n\n\n\n<h2 id=\"4-ways-for-writing-lcm-program-in-c\">4 Ways for Writing LCM Program in C</h2>\n\n\n\n<p><span style=\"font-weight: 400;\">There are 4 ways in which the LCM Program in C can be written.</span></p>\n\n\n\n<h3 id=\"a-while-loop\">a. While loop</h3>\n\n\n\n<p><span style=\"font-weight: 400;\">Now that we have studied the algorithm, let us implement the same using a while loop.</span></p>\n\n\n\n<p><span style=\"font-weight: 400;\"><strong>Explanation:</strong></span></p>\n\n\n\n<p><span style=\"font-weight: 400;\">The following code assigns to the variable ‘max’ the number that’s the largest between num1 and num2.&nbsp;</span></p>\n\n\n<div class=\"enlighter-default enlighter-v-standard enlighter-t-atomic enlighter-hover \"><div class=\"enlighter-toolbar-top enlighter-toolbar\"><div class=\"enlighter-btn enlighter-btn-raw\" title=\"Plain text\"></div><div class=\"enlighter-btn enlighter-btn-copy\" title=\"Copy to clipboard\"></div><div class=\"enlighter-btn enlighter-btn-window\" title=\"Open code in new window\"></div><div class=\"enlighter-btn enlighter-btn-website\" title=\"EnlighterJS 3 Syntax Highlighter\"></div></div><div class=\"enlighter\" style=\"\"><div class=\"\"><div><span class=\"enlighter-text\">res = </span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">x </span><span class=\"enlighter-g1\">&gt;</span><span class=\"enlighter-text\"> y</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"> ? x : y;</span></div></div></div><div class=\"enlighter-raw\">res = (x &gt; y) ? x : y;</div><div class=\"enlighter-toolbar-bottom enlighter-toolbar\"></div></div><pre class=\"EnlighterJSRAW enlighter-origin\" data-enlighter-language=\"c\" data-enlighter-theme=\"atomic\" data-enlighter-linenumbers=\"false\">res = (x &gt; y) ? x : y;</pre>\n\n\n<p><span style=\"font-weight: 400;\">A ternary operator has been used in the above line which has the syntax of condition? value_if_true : value_if_false.</span></p>\n\n\n\n<p><span style=\"font-weight: 400;\">while(1) is an infinite loop until it comes across an explicit break statement and it is used to find lcm of two numbers in c as we must repeatedly check whether or not max is divisible by the two numbers. Once such a number is found, we print the number and break from the loop.</span></p>\n\n\n\n<p><span style=\"font-weight: 400;\"><strong>Code:</strong></span></p>\n\n\n<div class=\"enlighter-default enlighter-v-standard enlighter-t-atomic enlighter-hover \"><div class=\"enlighter-toolbar-top enlighter-toolbar\"><div class=\"enlighter-btn enlighter-btn-raw\" title=\"Plain text\"></div><div class=\"enlighter-btn enlighter-btn-copy\" title=\"Copy to clipboard\"></div><div class=\"enlighter-btn enlighter-btn-window\" title=\"Open code in new window\"></div><div class=\"enlighter-btn enlighter-btn-website\" title=\"EnlighterJS 3 Syntax Highlighter\"></div></div><div class=\"enlighter\" style=\"\"><div class=\"\"><div><span class=\"enlighter-k4\">#include &lt;stdio.h&gt;</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">main</span><span class=\"enlighter-g1\">()</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> x, y, res;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-m0\">printf</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-s0\">\"Enter two positive integers: \"</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-m0\">scanf</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-s0\">\"%d %d\"</span><span class=\"enlighter-text\">, &amp;x, &amp;y</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  res = </span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">x </span><span class=\"enlighter-g1\">&gt;</span><span class=\"enlighter-text\"> y</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"> ? x : y;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-k1\">while</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">1</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">      </span><span class=\"enlighter-k1\">if</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">res % x == 0 &amp;&amp; res % y == 0</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">          </span><span class=\"enlighter-m0\">printf</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-s0\">\"The LCM obtained from %d and %d is %d.\"</span><span class=\"enlighter-text\">, x, y, res</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">          </span><span class=\"enlighter-k1\">break</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">      </span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">      ++res;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-k0\">return</span><span class=\"enlighter-text\"> 0;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">}</span></div></div></div><div class=\"enlighter-raw\">#include &lt;stdio.h&gt;\nint main() {\n  int x, y, res;\n  printf(\"Enter two positive integers: \");\n  scanf(\"%d %d\", &amp;x, &amp;y);\n  res = (x &gt; y) ? x : y;\n  while (1) {\n      if (res % x == 0 &amp;&amp; res % y == 0) {\n          printf(\"The LCM obtained from %d and %d is %d.\", x, y, res);\n          break;\n      }\n      ++res;\n  }\n  return 0;\n}</div><div class=\"enlighter-toolbar-bottom enlighter-toolbar\"></div></div><pre class=\"EnlighterJSRAW enlighter-origin\" data-enlighter-language=\"c\" data-enlighter-theme=\"atomic\" data-enlighter-linenumbers=\"false\">#include &lt;stdio.h&gt;\nint main() {\n  int x, y, res;\n  printf(\"Enter two positive integers: \");\n  scanf(\"%d %d\", &amp;x, &amp;y);\n  res = (x &gt; y) ? x : y;\n  while (1) {\n      if (res % x == 0 &amp;&amp; res % y == 0) {\n          printf(\"The LCM obtained from %d and %d is %d.\", x, y, res);\n          break;\n      }\n      ++res;\n  }\n  return 0;\n}</pre>\n\n\n<p><span style=\"font-weight: 400;\"><strong>Output:</strong></span></p>\n\n\n<div class=\"enlighter-default enlighter-v-standard enlighter-t-atomic enlighter-hover \"><div class=\"enlighter-toolbar-top enlighter-toolbar\"><div class=\"enlighter-btn enlighter-btn-raw\" title=\"Plain text\"></div><div class=\"enlighter-btn enlighter-btn-copy\" title=\"Copy to clipboard\"></div><div class=\"enlighter-btn enlighter-btn-window\" title=\"Open code in new window\"></div><div class=\"enlighter-btn enlighter-btn-website\" title=\"EnlighterJS 3 Syntax Highlighter\"></div></div><div class=\"enlighter\" style=\"\"><div class=\"\"><div><span class=\"enlighter-text\">Enter two positive integers: 7</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">35</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">The LCM obtained from 7 </span><span class=\"enlighter-k3\">and</span><span class=\"enlighter-text\"> 35 is </span><span class=\"enlighter-n0\">35.</span></div></div></div><div class=\"enlighter-raw\">Enter two positive integers: 7\n35\nThe LCM obtained from 7 and 35 is 35.</div><div class=\"enlighter-toolbar-bottom enlighter-toolbar\"></div></div><pre class=\"EnlighterJSRAW enlighter-origin\" data-enlighter-language=\"c\" data-enlighter-theme=\"atomic\" data-enlighter-linenumbers=\"false\">Enter two positive integers: 7\n35\nThe LCM obtained from 7 and 35 is 35.</pre>\n\n\n<p id=\"-time-complexity-\"><span style=\"font-weight: 400;\"><strong>Time Complexity:</strong></span></p>\n\n\n\n<p><span style=\"font-weight: 400;\">Our while loop runs from:</span></p>\n\n\n\n<ul><li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">initial max i.e. max(num1, num2) until it finds the LCM</span></li></ul>\n\n\n\n<p><span style=\"font-weight: 400;\">For example, in this case, the loop will run from 35 and stop there as it suits all criteria, hence the time complexity is O(x) where x=LCM-max(num1,num2).</span> </p>\n\n\n\n<h3 id=\"b-function\">b. Function</h3>\n\n\n\n<p><span style=\"font-weight: 400;\">In order for code to be reused, we can put the while loop in a function and call it so as to find the lcm.</span></p>\n\n\n\n<p><span style=\"font-weight: 400;\"><strong>Explanation:</strong></span></p>\n\n\n\n<p>The same algorithm is followed for the while loop as in the lcm program in c using while, except this time, we have a function call as:</p>\n\n\n<div class=\"enlighter-default enlighter-v-standard enlighter-t-atomic enlighter-hover \"><div class=\"enlighter-toolbar-top enlighter-toolbar\"><div class=\"enlighter-btn enlighter-btn-raw\" title=\"Plain text\"></div><div class=\"enlighter-btn enlighter-btn-copy\" title=\"Copy to clipboard\"></div><div class=\"enlighter-btn enlighter-btn-window\" title=\"Open code in new window\"></div><div class=\"enlighter-btn enlighter-btn-website\" title=\"EnlighterJS 3 Syntax Highlighter\"></div></div><div class=\"enlighter\" style=\"\"><div class=\"\"><div><span class=\"enlighter-text\">lcm = </span><span class=\"enlighter-m0\">findLCM</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\"> x, y</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div></div><div class=\"enlighter-raw\">lcm = findLCM( x, y);</div><div class=\"enlighter-toolbar-bottom enlighter-toolbar\"></div></div><pre class=\"EnlighterJSRAW enlighter-origin\" data-enlighter-language=\"c\" data-enlighter-theme=\"atomic\" data-enlighter-linenumbers=\"false\">lcm = findLCM( x, y);</pre>\n\n\n<p><span style=\"font-weight: 400;\"><strong>Functions have the following advantages –</strong></span></p>\n\n\n\n<ol><li><span style=\"font-weight: 400;\">They increase the readability of code</span></li><li><span style=\"font-weight: 400;\">They improve code reusability; rather than developing the same code from scratch, the same function can be used in any program</span></li><li><span style=\"font-weight: 400;\">Using functions makes debugging the code easier because faults are more easily traced</span></li></ol>\n\n\n\n<p><span style=\"font-weight: 400;\"><strong>Code:</strong></span></p>\n\n\n<div class=\"enlighter-default enlighter-v-standard enlighter-t-atomic enlighter-hover \"><div class=\"enlighter-toolbar-top enlighter-toolbar\"><div class=\"enlighter-btn enlighter-btn-raw\" title=\"Plain text\"></div><div class=\"enlighter-btn enlighter-btn-copy\" title=\"Copy to clipboard\"></div><div class=\"enlighter-btn enlighter-btn-window\" title=\"Open code in new window\"></div><div class=\"enlighter-btn enlighter-btn-website\" title=\"EnlighterJS 3 Syntax Highlighter\"></div></div><div class=\"enlighter\" style=\"\"><div class=\"\"><div><span class=\"enlighter-k4\">#include &lt;stdio.h&gt; </span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">findLCM</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> x, </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> y, </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> res</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">main</span><span class=\"enlighter-g1\">()</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> x, y, res;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">printf</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-s0\">\" \\n Enter two positive integers: \"</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">scanf</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-s0\">\"%d %d\"</span><span class=\"enlighter-text\">, &amp;x, &amp;y</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> res = </span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">x </span><span class=\"enlighter-g1\">&gt;</span><span class=\"enlighter-text\"> y</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"> ? x : y;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> lcm=</span><span class=\"enlighter-m0\">findLCM</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">x,y,res</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">printf</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-s0\">\" \\n The LCM obtained from %d and %d is %d. \"</span><span class=\"enlighter-text\">, x, y, res</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span><span class=\"enlighter-k0\">return</span><span class=\"enlighter-text\"> 0;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">findLCM</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> x, </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> y, </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> res</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-k1\">while</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">1</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">     </span><span class=\"enlighter-k1\">if</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">res % x == 0 &amp;&amp; res % y == 0</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">         </span><span class=\"enlighter-k0\">return</span><span class=\"enlighter-text\"> res;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">         </span><span class=\"enlighter-k1\">break</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">     </span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">     </span><span class=\"enlighter-k1\">else</span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\">++res;</span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">    </span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">}</span></div></div></div><div class=\"enlighter-raw\">#include &lt;stdio.h&gt; \nint findLCM(int x, int y, int res);\nint main()\n{\n int x, y, res;\n printf (\" \\n Enter two positive integers: \");\n scanf (\"%d %d\", &amp;x, &amp;y);\n res = (x &gt; y) ? x : y;\n int lcm=findLCM(x,y,res);\n printf ( \" \\n The LCM obtained from %d and %d is %d. \", x, y, res);\n return 0;\n}\nint findLCM ( int x, int y, int res)\n{ \n  while (1) {\n     if (res % x == 0 &amp;&amp; res % y == 0) {\n         return res;\n         break;\n     }\n     else{++res;}\n    \n }\n}</div><div class=\"enlighter-toolbar-bottom enlighter-toolbar\"></div></div><pre class=\"EnlighterJSRAW enlighter-origin\" data-enlighter-language=\"c\" data-enlighter-theme=\"atomic\" data-enlighter-linenumbers=\"false\">#include &lt;stdio.h&gt; \nint findLCM(int x, int y, int res);\nint main()\n{\n int x, y, res;\n printf (\" \\n Enter two positive integers: \");\n scanf (\"%d %d\", &amp;x, &amp;y);\n res = (x &gt; y) ? x : y;\n int lcm=findLCM(x,y,res);\n printf ( \" \\n The LCM obtained from %d and %d is %d. \", x, y, res);\n return 0;\n}\nint findLCM ( int x, int y, int res)\n{ \n  while (1) {\n     if (res % x == 0 &amp;&amp; res % y == 0) {\n         return res;\n         break;\n     }\n     else{++res;}\n    \n }\n}</pre>\n\n\n<p><span style=\"font-weight: 400;\"><strong>Output:</strong></span></p>\n\n\n<div class=\"enlighter-default enlighter-v-standard enlighter-t-atomic enlighter-hover \"><div class=\"enlighter-toolbar-top enlighter-toolbar\"><div class=\"enlighter-btn enlighter-btn-raw\" title=\"Plain text\"></div><div class=\"enlighter-btn enlighter-btn-copy\" title=\"Copy to clipboard\"></div><div class=\"enlighter-btn enlighter-btn-window\" title=\"Open code in new window\"></div><div class=\"enlighter-btn enlighter-btn-website\" title=\"EnlighterJS 3 Syntax Highlighter\"></div></div><div class=\"enlighter\" style=\"\"><div class=\"\"><div><span class=\"enlighter-text\">Enter two positive integers: 7</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">35</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">The LCM obtained from 7 </span><span class=\"enlighter-k3\">and</span><span class=\"enlighter-text\"> 35 is </span><span class=\"enlighter-n0\">35.</span></div></div></div><div class=\"enlighter-raw\">Enter two positive integers: 7\n35\nThe LCM obtained from 7 and 35 is 35.</div><div class=\"enlighter-toolbar-bottom enlighter-toolbar\"></div></div><pre class=\"EnlighterJSRAW enlighter-origin\" data-enlighter-language=\"c\" data-enlighter-theme=\"atomic\" data-enlighter-linenumbers=\"false\">Enter two positive integers: 7\n35\nThe LCM obtained from 7 and 35 is 35.</pre>\n\n\n<p><span style=\"font-weight: 400;\"><strong>Time Complexity:</strong></span></p>\n\n\n\n<p><span style=\"font-weight: 400;\">The logic we use in this code is the same as the LCM in C using while loops and hence the time complexity remains the same i.e. O(x) where x=LCM-max(num1,num2).</span> </p>\n\n\n\n<h3 id=\"c-gcd-\">c. GCD </h3>\n\n\n\n<p><span style=\"font-weight: 400;\">The relationship between GCD and LCM is as illustrated below:</span></p>\n\n\n\n<p><span style=\"font-weight: 400;\"><strong>Explanation:</strong></span></p>\n\n\n\n<p><span style=\"font-weight: 400;\">To find lcm of two numbers in c:</span></p>\n\n\n\n<ul><li><span style=\"font-weight: 400;\">Ask user to enter two variables</span></li><li><span style=\"font-weight: 400;\">Using a for loop, find a number, starting from 1 that’s smaller than num1 and num2 that satisfies the condition: </span><b>num1%i==0 and num2%i==0</b></li><li><span style=\"font-weight: 400;\">Largest ‘i’ in the for loop that suits the above mentioned criteria, is the GCD</span></li><li><span style=\"font-weight: 400;\">Find LCM by using the formula given, i.e. (num1*num2)/gcd</span></li></ul>\n\n\n\n<div class=\"wp-block-image is-style-default\"><figure class=\"aligncenter size-full\"><img loading=\"lazy\" width=\"804\" height=\"349\" src=\"https://www.scaler.com/topics/media/Relationship-between-GCD-and-LCM.jpeg\" alt=\"Relationship between GCD and LCM\" class=\"wp-image-1147\" title=\"Relationship between GCD and LCM\" srcset=\"https://www.scaler.com/topics/media/Relationship-between-GCD-and-LCM.jpeg 804w, https://www.scaler.com/topics/media/Relationship-between-GCD-and-LCM-300x130.jpeg 300w, https://www.scaler.com/topics/media/Relationship-between-GCD-and-LCM-768x333.jpeg 768w\" sizes=\"(max-width: 804px) 100vw, 804px\"></figure></div>\n\n\n\n<p><span style=\"font-weight: 400;\"><strong>Code:</strong></span></p>\n\n\n<div class=\"enlighter-default enlighter-v-standard enlighter-t-atomic enlighter-hover \"><div class=\"enlighter-toolbar-top enlighter-toolbar\"><div class=\"enlighter-btn enlighter-btn-raw\" title=\"Plain text\"></div><div class=\"enlighter-btn enlighter-btn-copy\" title=\"Copy to clipboard\"></div><div class=\"enlighter-btn enlighter-btn-window\" title=\"Open code in new window\"></div><div class=\"enlighter-btn enlighter-btn-website\" title=\"EnlighterJS 3 Syntax Highlighter\"></div></div><div class=\"enlighter\" style=\"\"><div class=\"\"><div><span class=\"enlighter-k4\">#include &lt;stdio.h&gt;</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">main</span><span class=\"enlighter-g1\">()</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> x, y, i, gcd, lcm;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-m0\">printf</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-s0\">\"Enter two positive integers: \"</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-m0\">scanf</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-s0\">\"%d %d\"</span><span class=\"enlighter-text\">, &amp;x, &amp;y</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-k1\">for</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">i = 1; i </span><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-text\">= x &amp;&amp; i </span><span class=\"enlighter-g1\">&lt;</span><span class=\"enlighter-text\">= y; ++i</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">      </span><span class=\"enlighter-k1\">if</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">x % i == 0 &amp;&amp; y % i == 0</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">          gcd = i;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  lcm = </span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">x * y</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"> / gcd;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-m0\">printf</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-s0\">\"The LCM of %d and %d is %d.\"</span><span class=\"enlighter-text\">, x, y, lcm</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  </span><span class=\"enlighter-k0\">return</span><span class=\"enlighter-text\"> 0;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">}</span></div></div></div><div class=\"enlighter-raw\">#include &lt;stdio.h&gt;\nint main() {\n  int x, y, i, gcd, lcm;\n  printf(\"Enter two positive integers: \");\n  scanf(\"%d %d\", &amp;x, &amp;y);\n  for (i = 1; i &lt;= x &amp;&amp; i &lt;= y; ++i) {\n      if (x % i == 0 &amp;&amp; y % i == 0)\n          gcd = i;\n  }\n  lcm = (x * y) / gcd;\n  printf(\"The LCM of %d and %d is %d.\", x, y, lcm);\n  return 0;\n}</div><div class=\"enlighter-toolbar-bottom enlighter-toolbar\"></div></div><pre class=\"EnlighterJSRAW enlighter-origin\" data-enlighter-language=\"c\" data-enlighter-theme=\"atomic\" data-enlighter-linenumbers=\"false\">#include &lt;stdio.h&gt;\nint main() {\n  int x, y, i, gcd, lcm;\n  printf(\"Enter two positive integers: \");\n  scanf(\"%d %d\", &amp;x, &amp;y);\n  for (i = 1; i &lt;= x &amp;&amp; i &lt;= y; ++i) {\n      if (x % i == 0 &amp;&amp; y % i == 0)\n          gcd = i;\n  }\n  lcm = (x * y) / gcd;\n  printf(\"The LCM of %d and %d is %d.\", x, y, lcm);\n  return 0;\n}</pre>\n\n\n<p><span style=\"font-weight: 400;\"><strong>Output:</strong></span></p>\n\n\n<div class=\"enlighter-default enlighter-v-standard enlighter-t-atomic enlighter-hover \"><div class=\"enlighter-toolbar-top enlighter-toolbar\"><div class=\"enlighter-btn enlighter-btn-raw\" title=\"Plain text\"></div><div class=\"enlighter-btn enlighter-btn-copy\" title=\"Copy to clipboard\"></div><div class=\"enlighter-btn enlighter-btn-window\" title=\"Open code in new window\"></div><div class=\"enlighter-btn enlighter-btn-website\" title=\"EnlighterJS 3 Syntax Highlighter\"></div></div><div class=\"enlighter\" style=\"\"><div class=\"\"><div><span class=\"enlighter-text\">Enter two positive integers: 7</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">35</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">The LCM obtained from 7 </span><span class=\"enlighter-k3\">and</span><span class=\"enlighter-text\"> 35 is </span><span class=\"enlighter-n0\">35.</span></div></div></div><div class=\"enlighter-raw\">Enter two positive integers: 7\n35\nThe LCM obtained from 7 and 35 is 35.</div><div class=\"enlighter-toolbar-bottom enlighter-toolbar\"></div></div><pre class=\"EnlighterJSRAW enlighter-origin\" data-enlighter-language=\"c\" data-enlighter-theme=\"atomic\" data-enlighter-linenumbers=\"false\">Enter two positive integers: 7\n35\nThe LCM obtained from 7 and 35 is 35.</pre>\n\n\n<p><span style=\"font-weight: 400;\"><strong>Time Complexity:</strong></span></p>\n\n\n\n<p><span style=\"font-weight: 400;\">The for loop goes from 1 to a number,i, such that num1%i==0 and num2%i==0. Let us consider an example wherein num1=10 and num2=15, i starts at 1 and the first number to meet this criteria is 5, hence the loop runs 5 times. The worst-case</span> time complexity arises when one of the numbers is a multiple of the other hence worst-case<span style=\"font-weight: 400;\"> time complexity=O(min(num1,num2))</span></p>\n\n\n\n<h3 id=\"d-recursive-function-\">d. Recursive Function </h3>\n\n\n\n<p><span style=\"font-weight: 400;\">&nbsp;A recursive function is a routine that calls itself explicitly or indirectly in programming terms. Certain problems can be solved quickly using the recursive algorithm.&nbsp;&nbsp;</span></p>\n\n\n\n<p><span style=\"font-weight: 400;\"><strong>Explanation:</strong></span></p>\n\n\n\n<p><span style=\"font-weight: 400;\">The same algorithm is followed for the if block as in the lcm program in c using while, except this time, instead of using an infinite while loop we have a function call as displayed below:</span></p>\n\n\n<div class=\"enlighter-default enlighter-v-standard enlighter-t-atomic enlighter-hover \"><div class=\"enlighter-toolbar-top enlighter-toolbar\"><div class=\"enlighter-btn enlighter-btn-raw\" title=\"Plain text\"></div><div class=\"enlighter-btn enlighter-btn-copy\" title=\"Copy to clipboard\"></div><div class=\"enlighter-btn enlighter-btn-window\" title=\"Open code in new window\"></div><div class=\"enlighter-btn enlighter-btn-website\" title=\"EnlighterJS 3 Syntax Highlighter\"></div></div><div class=\"enlighter\" style=\"\"><div class=\"\"><div><span class=\"enlighter-text\">lcm = </span><span class=\"enlighter-m0\">findLCM</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\"> x, y</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div></div><div class=\"enlighter-raw\">lcm = findLCM( x, y);</div><div class=\"enlighter-toolbar-bottom enlighter-toolbar\"></div></div><pre class=\"EnlighterJSRAW enlighter-origin\" data-enlighter-language=\"c\" data-enlighter-theme=\"atomic\" data-enlighter-linenumbers=\"false\">lcm = findLCM( x, y);</pre>\n\n\n<p><span style=\"font-weight: 400;\">This function is called again in the else block if the lcm is not found and hence, it keeps running until an lcm is found which is why we do not require an infinite while loop in the lcm program in c using functions.</span></p>\n\n\n\n<p><span style=\"font-weight: 400;\"><strong>Code:</strong></span></p>\n\n\n<div class=\"enlighter-default enlighter-v-standard enlighter-t-atomic enlighter-hover \"><div class=\"enlighter-toolbar-top enlighter-toolbar\"><div class=\"enlighter-btn enlighter-btn-raw\" title=\"Plain text\"></div><div class=\"enlighter-btn enlighter-btn-copy\" title=\"Copy to clipboard\"></div><div class=\"enlighter-btn enlighter-btn-window\" title=\"Open code in new window\"></div><div class=\"enlighter-btn enlighter-btn-website\" title=\"EnlighterJS 3 Syntax Highlighter\"></div></div><div class=\"enlighter\" style=\"\"><div class=\"\"><div><span class=\"enlighter-k4\">#include &lt;stdio.h&gt; </span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">findLCM</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> x, </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> y, </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> res</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">main</span><span class=\"enlighter-g1\">()</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> x, y, lcm,res;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">printf</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-s0\">\"Enter two positive integers: \"</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">scanf</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-s0\">\"%d %d\"</span><span class=\"enlighter-text\">, &amp;x, &amp;y</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">   res = </span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\">x </span><span class=\"enlighter-g1\">&gt;</span><span class=\"enlighter-text\"> y</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"> ? x : y;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">  lcm = </span><span class=\"enlighter-m0\">findLCM</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\"> x, y, res</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">printf</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-s0\">\"\\nThe LCM obtained from %d and %d is %d. \"</span><span class=\"enlighter-text\">, x, y, res</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span><span class=\"enlighter-k0\">return</span><span class=\"enlighter-text\"> 0;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">findLCM</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> x, </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> y, </span><span class=\"enlighter-k5\">int</span><span class=\"enlighter-text\"> res</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\">   </span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span><span class=\"enlighter-k1\">if</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\"> res % x  == 0 &amp;&amp; res % y == 0</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">     </span><span class=\"enlighter-k0\">return</span><span class=\"enlighter-text\"> res;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span><span class=\"enlighter-k1\">else</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">{</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\">     res++;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">     </span><span class=\"enlighter-k0\">return</span><span class=\"enlighter-text\"> </span><span class=\"enlighter-m0\">findLCM</span><span class=\"enlighter-g1\">(</span><span class=\"enlighter-text\"> x, y, res</span><span class=\"enlighter-g1\">)</span><span class=\"enlighter-text\">;</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span><span class=\"enlighter-g1\">}</span><span class=\"enlighter-text\"></span></div></div><div class=\"\"><div><span class=\"enlighter-text\"></span><span class=\"enlighter-g1\">}</span></div></div></div><div class=\"enlighter-raw\">#include &lt;stdio.h&gt; \nint findLCM ( int x, int y, int res);\nint main()\n{\n int x, y, lcm,res;\n printf (\"Enter two positive integers: \");\n scanf (\"%d %d\", &amp;x, &amp;y);\n   res = (x &gt; y) ? x : y;\n  lcm = findLCM( x, y, res);\n printf ( \"\\nThe LCM obtained from %d and %d is %d. \", x, y, res);\n return 0;\n}\nint findLCM ( int x, int y, int res)\n{   \n if ( res % x  == 0 &amp;&amp; res % y == 0)\n {\n     return res;\n }\n else\n {\n     res++;\n     return findLCM( x, y, res);\n }\n}</div><div class=\"enlighter-toolbar-bottom enlighter-toolbar\"></div></div><pre class=\"EnlighterJSRAW enlighter-origin\" data-enlighter-language=\"c\" data-enlighter-theme=\"atomic\" data-enlighter-linenumbers=\"false\">#include &lt;stdio.h&gt; \nint findLCM ( int x, int y, int res);\nint main()\n{\n int x, y, lcm,res;\n printf (\"Enter two positive integers: \");\n scanf (\"%d %d\", &amp;x, &amp;y);\n   res = (x &gt; y) ? x : y;\n  lcm = findLCM( x, y, res);\n printf ( \"\\nThe LCM obtained from %d and %d is %d. \", x, y, res);\n return 0;\n}\nint findLCM ( int x, int y, int res)\n{   \n if ( res % x  == 0 &amp;&amp; res % y == 0)\n {\n     return res;\n }\n else\n {\n     res++;\n     return findLCM( x, y, res);\n }\n}</pre>\n\n\n<p><span style=\"font-weight: 400;\"><strong>Output:</strong></span></p>\n\n\n<div class=\"enlighter-default enlighter-v-standard enlighter-t-atomic enlighter-hover \"><div class=\"enlighter-toolbar-top enlighter-toolbar\"><div class=\"enlighter-btn enlighter-btn-raw\" title=\"Plain text\"></div><div class=\"enlighter-btn enlighter-btn-copy\" title=\"Copy to clipboard\"></div><div class=\"enlighter-btn enlighter-btn-window\" title=\"Open code in new window\"></div><div class=\"enlighter-btn enlighter-btn-website\" title=\"EnlighterJS 3 Syntax Highlighter\"></div></div><div class=\"enlighter\" style=\"\"><div class=\"\"><div><span class=\"enlighter-text\">Enter two positive integers: 7</span></div></div><div class=\"\"><div><span class=\"enlighter-text\">35</span></div></div><div class=\"\"><div><span class=\"enlighter-text\"> </span></div></div><div class=\"\"><div><span class=\"enlighter-text\">The LCM obtained from 7 </span><span class=\"enlighter-k3\">and</span><span class=\"enlighter-text\"> 35 is </span><span class=\"enlighter-n0\">35.</span></div></div></div><div class=\"enlighter-raw\">Enter two positive integers: 7\n35\n \nThe LCM obtained from 7 and 35 is 35.</div><div class=\"enlighter-toolbar-bottom enlighter-toolbar\"></div></div><pre class=\"EnlighterJSRAW enlighter-origin\" data-enlighter-language=\"c\" data-enlighter-theme=\"atomic\" data-enlighter-linenumbers=\"false\">Enter two positive integers: 7\n35\n \nThe LCM obtained from 7 and 35 is 35.</pre>\n\n\n<p><span style=\"font-weight: 400;\"><strong>Time Complexity:</strong></span></p>\n\n\n\n<p><span style=\"font-weight: 400;\">The time complexity remains the same with this logic as well. The time complexity for this lcm program in c is O(x) where x=LCM-max(num1,num2&nbsp;</span></p>\n\n\n\n<h2 id=\"conclusion\">Conclusion</h2>\n\n\n\n<p><span style=\"font-weight: 400;\">In this article, you have learned</span> 5 ways in which you can find the <span style=\"font-weight: 400;\">LCM of two numbers in C. Knowing the LCM program in C is of pivotal importance. While it may not be asked directly by companies in their recruitment drives, you might find yourself having to calculate LCM while solving programming questions that have a higher difficulty level. Moreover knowing the logic behind finding the LCM could also be fruitful for aptitude questions asked in the recruitment process. </span></p>\n\n<!-- MOLONGUI AUTHORSHIP PLUGIN 4.3.3 -->\n<!-- https://www.molongui.com/authorship/ -->\n<div class=\"molongui-clearfix\"></div>\n<div id=\"mab-1843508731\" class=\"m-a-box \" data-plugin-release=\"4.3.3\" data-plugin-version=\"free\" data-box-layout=\"slim\" data-box-position=\"below\" data-multiauthor=\"false\" data-author-type=\"guest\" itemscope=\"\" itemtype=\"https://schema.org/Person\" style=\"width: 100%;            margin: 20px auto;\">\n\n\t\n    <div class=\"m-a-box-container\n                molongui-border-right-none molongui-border-left-none                molongui-border-style-solid                molongui-border-width-3-px\n                m-a-box-shadow-right\" style=\"border-color: #adadad;                background-color: #efefef;\">\n\n        <div class=\"m-a-box-tab m-a-box-content m-a-box-profile\" data-profile-layout=\"layout-1\" data-author-ref=\"guest-1038\">\n            \n<div class=\"m-a-box-content-top\">\n\n\t\n</div><!-- End of .m-a-box-content-top -->\n\n<div class=\"m-a-box-content-middle\">\n\n    <!-- Author picture -->\n    \n\t<div class=\"m-a-box-item m-a-box-avatar \">\n\t\t                <span>\n                    <img alt=\"\" src=\"https://secure.gravatar.com/avatar/?s=150&amp;d=mp&amp;r=g\" srcset=\"https://secure.gravatar.com/avatar/?s=300&amp;d=mp&amp;r=g 2x\" class=\"avatar avatar-150 photo avatar-default m-radius-none molongui-border-style-solid molongui-border-width-2-px\" height=\"150\" width=\"150\" style=\"border-color:#bfbfbf;\" itemprop=\"image\" loading=\"lazy\">                </span>\n                \t</div>\n\n    <!-- Author social -->\n    \n    <!-- Author data -->\n    <div class=\"m-a-box-item m-a-box-data \">\n\n        <!-- Author name -->\n        \n<div class=\"m-a-box-title\">\n\t<h5 class=\"molongui-font-size-22-px\n\t        molongui-text-align-left                        molongui-text-case-none\" style=\"color: inherit\" itemprop=\"name\">\n                        <span class=\"molongui-font-size-22-px molongui-text-align-left\" style=\"color:inherit;\">\n\t\t\t        Shubham Gautam                </span>\n\t            \t</h5>\n</div>\n        <!-- Author metadata -->\n        \n<div class=\"m-a-box-item m-a-box-meta\n            molongui-font-size-12-px\n            molongui-text-align-left                        molongui-text-case-none\" style=\"color: inherit\">\n\n    \n    \n    \n\t\n\t\n\t\n\t        \t\t<script type=\"text/javascript\" language=\"JavaScript\">\n\t\t\tif ( typeof window.ToggleAuthorshipData === 'undefined' )\n\t\t\t{\n\t\t\t\tfunction ToggleAuthorshipData(id, author)\n\t\t\t\t{\n\t\t\t\t\tvar box_selector = '#mab-' + id;\n                    var box = document.querySelector(box_selector);\n                    if ( box.getAttribute('data-multiauthor') ) box_selector = '#mab-' + id + ' [data-author-ref=\"' + author + '\"]';\n\t\t\t\t\tvar label = document.querySelector(box_selector + ' ' + '.m-a-box-data-toggle');\n\t\t\t\t\tlabel.innerHTML = ( label.text.trim() === \"+ posts\" ? \" <span class=\\\"m-a-box-string-bio\\\">Bio</span>\" : \" <span class=\\\"m-a-box-string-more-posts\\\">+ posts</span>\" );\n\t\t\t\t\tvar bio     = document.querySelector(box_selector + ' ' + '.m-a-box-bio');\n\t\t\t\t\tvar related = document.querySelector(box_selector + ' ' + '.m-a-box-related-entries');\n\n\t\t\t\t\tif ( related.style.display === \"none\" )\n\t\t\t\t\t{\n\t\t\t\t\t\trelated.style.display = \"block\";\n\t\t\t\t\t\tbio.style.display     = \"none\";\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\trelated.style.display = \"none\";\n\t\t\t\t\t\tbio.style.display     = \"block\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t</script>\n\t\t<a href=\"javascript:ToggleAuthorshipData(1843508731, 'guest-1038')\" class=\"m-a-box-data-toggle\" style=\"color: inherit\" rel=\"nofollow\"> <span class=\"m-a-box-string-more-posts\">+ posts</span> </a>\n\t\n</div><!-- End of .m-a-box-meta -->\n\n        <!-- Author bio -->\n        \n<div class=\"m-a-box-bio\" itemprop=\"description\">\n\t<div class=\"molongui-font-size-14-px molongui-text-align-justify  molongui-line-height-10\" style=\"color: inherit\">\n\t    \t</div>\n</div>\n\n        \n            <!-- Author related posts -->\n            <div class=\"m-a-box-related\" data-related-layout=\"layout-1\">\n                <div class=\"m-a-box-item m-a-box-related-entries\" style=\"display: none;\">\n\n                                        <ul class=\"molongui-font-size-14-px \" style=\"color: inherit\">\n                            <li>\n        <div class=\"m-a-box-related-entry\" itemscope=\"\" itemtype=\"http://schema.org/CreativeWork\">\n            <div class=\"molongui-display-none\" itemprop=\"author\" itemscope=\"\" itemtype=\"http://schema.org/Person\">\n                <div itemprop=\"name\">Shubham Gautam</div>\n                <div itemprop=\"url\">#molongui-disabled-link</div>\n            </div>\n            <div class=\"m-a-box-related-entry-title\">\n                <i class=\"m-a-icon-doc\"></i>\n                <a class=\"molongui-remove-text-underline\" itemprop=\"url\" href=\"https://www.scaler.com/topics/difference-between-call-by-value-and-call-by-reference/\">\n                    <span itemprop=\"headline\">Difference Between Call by Value and Call by Reference in C++</span>\n                </a>\n            </div>\n        </div>\n    </li>\n                        </ul>\n\n                </div><!-- End of .m-a-box-related-entries -->\n            </div><!-- End of .m-a-box-related -->\n\n        \n    </div><!-- End of .m-a-box-data -->\n\n</div><!-- End of .m-a-box-content-middle -->\n\n<div class=\"m-a-box-content-bottom\"></div><!-- End of .m-a-box-content-bottom -->        </div><!-- End of .m-a-box-profile -->\n\n        \n    </div><!-- End of .m-a-box-container -->\n\n\t\n</div><!-- End of .m-a-box -->\t</div><!-- .entry-content -->\n\t</div>\n\t<footer class=\"entry-footer\">\n\t\t<span class=\"cat-links\">Posted in <a href=\"https://www.scaler.com/topics/category/c/\" rel=\"category tag\">C</a></span> | <span class=\"tags-links\">Tagged <a href=\"https://www.scaler.com/topics/tag/c-program-to-find-lcm-of-two-numbers/\" rel=\"tag\">c program to find lcm of two numbers</a>, <a href=\"https://www.scaler.com/topics/tag/lcm-program-in-c/\" rel=\"tag\">lcm program in c</a></span>\t</footer><!-- .entry-footer -->\n</article><!-- #post-## -->\n\n\n\n\t<nav class=\"navigation post-navigation\" role=\"navigation\" aria-label=\"Posts\">\n\t\t<h2 class=\"screen-reader-text\">Post navigation</h2>\n\t\t<div class=\"nav-links\"><div class=\"nav-next\"><a href=\"https://www.scaler.com/topics/c-program-to-reverse-a-number/\" rel=\"next\">C Program to Reverse a Number</a></div></div>\n\t</nav>\n<div id=\"comments\" class=\"comments-area\">\n\n    \n    \t<div id=\"respond\" class=\"comment-respond\">\n\t\t<h3 id=\"reply-title\" class=\"comment-reply-title\">Leave a Reply <small><a rel=\"nofollow\" id=\"cancel-comment-reply-link\" href=\"/topics/lcm-of-two-numbers-in-c/#respond\" style=\"display:none;\">Cancel Reply</a></small></h3><p class=\"must-log-in\">You must be <a href=\"https://www.scaler.com/topics/wp-login.php?redirect_to=https%3A%2F%2Fwww.scaler.com%2Ftopics%2Flcm-of-two-numbers-in-c%2F\">logged in</a> to post a comment.</p>\t</div><!-- #respond -->\n\t\n</div><!-- #comments -->\n\n\t\t</div><!-- #main -->\n\t</section><!-- #primary -->\n\n\t\t\t</div><!-- .row -->\n\t\t</div><!-- .container -->\n\t</div><!-- #content -->\n    \t<footer id=\"colophon\" class=\"site-footer navbar-light bg-light\" role=\"contentinfo\">\n\t\t<div class=\"container pt-3 pb-3\">\n            <div class=\"site-info text-center\">\n\t\t\t\tCopyright © 2021 InterviewBit Technologies Pte. Ltd. All Rights Reserved\n            </div><!-- close .site-info -->\n\t\t</div>\n\t</footer><!-- #colophon -->\n</div><!-- #page -->\n\n<script type=\"text/javascript\" id=\"molongui-authorship-js-extra\">\n/* <![CDATA[ */\nvar molongui_authorship = {\"byline_prefix\":\"\",\"byline_suffix\":\"\",\"byline_separator\":\", \",\"byline_last_separator\":\" and \",\"byline_link_title\":\"View all posts by\",\"byline_dom_tree\":\"\"};\n/* ]]> */\n</script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/plugins/molongui-authorship/public/js/molongui-authorship.5a1d.min.js?ver=4.3.3\" id=\"molongui-authorship-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/js/popper.min.js?ver=5.7.2\" id=\"wp-bootstrap-starter-popper-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/js/bootstrap.min.js?ver=5.7.2\" id=\"wp-bootstrap-starter-bootstrapjs-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/js/theme-script.min.js?ver=5.7.2\" id=\"wp-bootstrap-starter-themejs-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/themes/wp-bootstrap-starter/inc/assets/js/skip-link-focus-fix.min.js?ver=20151215\" id=\"wp-bootstrap-starter-skip-link-focus-fix-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-includes/js/comment-reply.min.js?ver=5.7.2\" id=\"comment-reply-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/plugins/gutentoc-advance-table-of-content/dist/toc.js?ver=5.7.2\" id=\"gutentocjs-js\"></script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-content/plugins/enlighter/cache/enlighterjs.min.js?ver=0UVtrfqVvCkLefk\" id=\"enlighterjs-js\"></script>\n<script type=\"text/javascript\" id=\"enlighterjs-js-after\">\n!function(e,n){if(\"undefined\"!=typeof EnlighterJS){var o={\"selectors\":{\"block\":\"pre.EnlighterJSRAW\",\"inline\":\"code.EnlighterJSRAW\"},\"options\":{\"indent\":2,\"ampersandCleanup\":true,\"linehover\":true,\"rawcodeDbclick\":false,\"textOverflow\":\"break\",\"linenumbers\":true,\"theme\":\"classic\",\"language\":\"generic\",\"retainCssClasses\":false,\"collapse\":false,\"toolbarOuter\":\"\",\"toolbarTop\":\"{BTN_RAW}{BTN_COPY}{BTN_WINDOW}{BTN_WEBSITE}\",\"toolbarBottom\":\"\"}};(e.EnlighterJSINIT=function(){EnlighterJS.init(o.selectors.block,o.selectors.inline,o.options)})()}else{(n&&(n.error||n.log)||function(){})(\"Error: EnlighterJS resources not loaded yet!\")}}(window,console);\n</script>\n<script type=\"text/javascript\" src=\"https://www.scaler.com/topics/wp-includes/js/wp-embed.min.js?ver=5.7.2\" id=\"wp-embed-js\"></script>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/css-element-queries@1.2.2/src/ResizeSensor.min.js?ver=1.2.2\" id=\"molongui-resizesensor-js\"></script>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/css-element-queries@1.2.2/src/ElementQueries.min.js?ver=1.2.2\" id=\"molongui-elementqueries-js\"></script>\n<script>\n\nfunction is_logged_in()\n{\n\nlet xhr = new XMLHttpRequest();\n\nxhr.open('GET', 'https://www.interviewbit.com/get_user_options/', false);\n\ntry {\n  xhr.send();\n  if (xhr.status != 200) {\n   console.log(`Error ${xhr.status}: ${xhr.statusText}`);\n  } else {\n\n  if(JSON.parse(xhr.response).logged_in == true){\n  return true;\n  }\n  else{\n  return false;\n  }\n     \n  }\n} catch(err) { // instead of onerror\n  console.log(\"Request failed\");\n}\n\t\n}\n\n\t\n</script>\n\n</body>",slug: 'hello-world')